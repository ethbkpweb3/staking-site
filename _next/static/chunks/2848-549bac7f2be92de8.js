! function() {
    try {
        var t = "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {},
            e = (new t.Error).stack;
        e && (t._sentryDebugIds = t._sentryDebugIds || {}, t._sentryDebugIds[e] = "e97948eb-e587-4fa2-a361-ae7e831e4c12", t._sentryDebugIdIdentifier = "sentry-dbid-e97948eb-e587-4fa2-a361-ae7e831e4c12")
    } catch (t) {}
}(), (self.webpackChunk_N_E = self.webpackChunk_N_E || []).push([
    [2848], {
        60677: function(t, e, r) {
            "use strict";
            var n = r(82957).Buffer,
                i = this && this.__importDefault || function(t) {
                    return t && t.__esModule ? t : {
                        default: t
                    }
                };
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.map = e.array = e.rustEnum = e.str = e.vecU8 = e.tagged = e.vec = e.bool = e.option = e.publicKey = e.i256 = e.u256 = e.i128 = e.u128 = e.i64 = e.u64 = e.struct = e.f64 = e.f32 = e.i32 = e.u32 = e.i16 = e.u16 = e.i8 = e.u8 = void 0;
            let o = r(96861),
                s = r(64024),
                a = i(r(44373));
            var u = r(96861);
            Object.defineProperty(e, "u8", {
                enumerable: !0,
                get: function() {
                    return u.u8
                }
            }), Object.defineProperty(e, "i8", {
                enumerable: !0,
                get: function() {
                    return u.s8
                }
            }), Object.defineProperty(e, "u16", {
                enumerable: !0,
                get: function() {
                    return u.u16
                }
            }), Object.defineProperty(e, "i16", {
                enumerable: !0,
                get: function() {
                    return u.s16
                }
            }), Object.defineProperty(e, "u32", {
                enumerable: !0,
                get: function() {
                    return u.u32
                }
            }), Object.defineProperty(e, "i32", {
                enumerable: !0,
                get: function() {
                    return u.s32
                }
            }), Object.defineProperty(e, "f32", {
                enumerable: !0,
                get: function() {
                    return u.f32
                }
            }), Object.defineProperty(e, "f64", {
                enumerable: !0,
                get: function() {
                    return u.f64
                }
            }), Object.defineProperty(e, "struct", {
                enumerable: !0,
                get: function() {
                    return u.struct
                }
            });
            class c extends o.Layout {
                constructor(t, e, r) {
                    super(t, r), this.blob = (0, o.blob)(t), this.signed = e
                }
                decode(t, e = 0) {
                    let r = new a.default(this.blob.decode(t, e), 10, "le");
                    return this.signed ? r.fromTwos(8 * this.span).clone() : r
                }
                encode(t, e, r = 0) {
                    return this.signed && (t = t.toTwos(8 * this.span)), this.blob.encode(t.toArrayLike(n, "le", this.span), e, r)
                }
            }

            function l(t) {
                return new c(8, !1, t)
            }

            function h(t) {
                return new c(8, !0, t)
            }

            function f(t) {
                return new c(16, !1, t)
            }

            function d(t) {
                return new c(16, !0, t)
            }

            function p(t) {
                return new c(32, !1, t)
            }

            function y(t) {
                return new c(32, !0, t)
            }
            e.u64 = l, e.i64 = h, e.u128 = f, e.i128 = d, e.u256 = p, e.i256 = y;
            class m extends o.Layout {
                constructor(t, e, r, n) {
                    super(t.span, n), this.layout = t, this.decoder = e, this.encoder = r
                }
                decode(t, e) {
                    return this.decoder(this.layout.decode(t, e))
                }
                encode(t, e, r) {
                    return this.layout.encode(this.encoder(t), e, r)
                }
                getSpan(t, e) {
                    return this.layout.getSpan(t, e)
                }
            }

            function b(t) {
                return new m((0, o.blob)(32), t => new s.PublicKey(t), t => t.toBuffer(), t)
            }
            e.publicKey = b;
            class g extends o.Layout {
                constructor(t, e) {
                    super(-1, e), this.layout = t, this.discriminator = (0, o.u8)()
                }
                encode(t, e, r = 0) {
                    return null == t ? this.discriminator.encode(0, e, r) : (this.discriminator.encode(1, e, r), this.layout.encode(t, e, r + 1) + 1)
                }
                decode(t, e = 0) {
                    let r = this.discriminator.decode(t, e);
                    if (0 === r) return null;
                    if (1 === r) return this.layout.decode(t, e + 1);
                    throw Error("Invalid option " + this.property)
                }
                getSpan(t, e = 0) {
                    let r = this.discriminator.decode(t, e);
                    if (0 === r) return 1;
                    if (1 === r) return this.layout.getSpan(t, e + 1) + 1;
                    throw Error("Invalid option " + this.property)
                }
            }

            function w(t, e) {
                return new g(t, e)
            }

            function v(t) {
                return new m((0, o.u8)(), E, x, t)
            }

            function E(t) {
                if (0 === t) return !1;
                if (1 === t) return !0;
                throw Error("Invalid bool: " + t)
            }

            function x(t) {
                return t ? 1 : 0
            }

            function S(t, e) {
                let r = (0, o.u32)("length");
                return new m((0, o.struct)([r, (0, o.seq)(t, (0, o.offset)(r, -r.span), "values")]), ({
                    values: t
                }) => t, t => ({
                    values: t
                }), e)
            }

            function O(t, e, r) {
                function n({
                    tag: e,
                    data: r
                }) {
                    if (!e.eq(t)) throw Error("Invalid tag, expected: " + t.toString("hex") + ", got: " + e.toString("hex"));
                    return r
                }
                return new m((0, o.struct)([l("tag"), e.replicate("data")]), n, e => ({
                    tag: t,
                    data: e
                }), r)
            }

            function C(t) {
                let e = (0, o.u32)("length");
                return new m((0, o.struct)([e, (0, o.blob)((0, o.offset)(e, -e.span), "data")]), ({
                    data: t
                }) => t, t => ({
                    data: t
                }), t)
            }

            function _(t) {
                return new m(C(), t => t.toString("utf-8"), t => n.from(t, "utf-8"), t)
            }

            function A(t, e, r) {
                let n = (0, o.union)(null != r ? r : (0, o.u8)(), e);
                return t.forEach((t, e) => n.addVariant(e, t, t.property)), n
            }

            function P(t, e, r) {
                return new m((0, o.struct)([(0, o.seq)(t, e, "values")]), ({
                    values: t
                }) => t, t => ({
                    values: t
                }), r)
            }
            e.option = w, e.bool = v, e.vec = S, e.tagged = O, e.vecU8 = C, e.str = _, e.rustEnum = A, e.array = P;
            class k extends o.Layout {
                constructor(t, e, r) {
                    super(t.span + e.span, r), this.keyLayout = t, this.valueLayout = e
                }
                decode(t, e) {
                    return e = e || 0, [this.keyLayout.decode(t, e), this.valueLayout.decode(t, e + this.keyLayout.getSpan(t, e))]
                }
                encode(t, e, r) {
                    r = r || 0;
                    let n = this.keyLayout.encode(t[0], e, r),
                        i = this.valueLayout.encode(t[1], e, r + n);
                    return n + i
                }
                getSpan(t, e) {
                    return this.keyLayout.getSpan(t, e) + this.valueLayout.getSpan(t, e)
                }
            }

            function D(t, e, r) {
                let n = (0, o.u32)("length");
                return new m((0, o.struct)([n, (0, o.seq)(new k(t, e), (0, o.offset)(n, -n.span), "values")]), ({
                    values: t
                }) => new Map(t), t => ({
                    values: Array.from(t.entries())
                }), r)
            }
            e.map = D
        },
        9348: function(t, e, r) {
            var n = r(18282),
                i = "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz";
            t.exports = n(i)
        },
        22314: function(t) {
            "use strict";
            let e = /[\p{Lu}]/u,
                r = /[\p{Ll}]/u,
                n = /^[\p{Lu}](?![\p{Lu}])/gu,
                i = /([\p{Alpha}\p{N}_]|$)/u,
                o = /[_.\- ]+/,
                s = RegExp("^" + o.source),
                a = RegExp(o.source + i.source, "gu"),
                u = RegExp("\\d+" + i.source, "gu"),
                c = (t, n, i) => {
                    let o = !1,
                        s = !1,
                        a = !1;
                    for (let u = 0; u < t.length; u++) {
                        let c = t[u];
                        o && e.test(c) ? (t = t.slice(0, u) + "-" + t.slice(u), o = !1, a = s, s = !0, u++) : s && a && r.test(c) ? (t = t.slice(0, u - 1) + "-" + t.slice(u - 1), a = s, s = !1, o = !0) : (o = n(c) === c && i(c) !== c, a = s, s = i(c) === c && n(c) !== c)
                    }
                    return t
                },
                l = (t, e) => (n.lastIndex = 0, t.replace(n, t => e(t))),
                h = (t, e) => (a.lastIndex = 0, u.lastIndex = 0, t.replace(a, (t, r) => e(r)).replace(u, t => e(t))),
                f = (t, e) => {
                    if (!("string" == typeof t || Array.isArray(t))) throw TypeError("Expected the input to be `string | string[]`");
                    if (e = {
                            pascalCase: !1,
                            preserveConsecutiveUppercase: !1,
                            ...e
                        }, 0 === (t = Array.isArray(t) ? t.map(t => t.trim()).filter(t => t.length).join("-") : t.trim()).length) return "";
                    let r = !1 === e.locale ? t => t.toLowerCase() : t => t.toLocaleLowerCase(e.locale),
                        n = !1 === e.locale ? t => t.toUpperCase() : t => t.toLocaleUpperCase(e.locale);
                    return 1 === t.length ? e.pascalCase ? n(t) : r(t) : (t !== r(t) && (t = c(t, r, n)), t = t.replace(s, ""), t = e.preserveConsecutiveUppercase ? l(t, r) : r(t), e.pascalCase && (t = n(t.charAt(0)) + t.slice(1)), h(t, n))
                };
            t.exports = f, t.exports.default = f
        },
        69028: function(t, e, r) {
            "use strict";
            var n;
            /**
             * Support for translating between Uint8Array instances and JavaScript
             * native types.
             *
             * {@link module:Layout~Layout|Layout} is the basis of a class
             * hierarchy that associates property names with sequences of encoded
             * bytes.
             *
             * Layouts are supported for these scalar (numeric) types:
             * * {@link module:Layout~UInt|Unsigned integers in little-endian
             *   format} with {@link module:Layout.u8|8-bit}, {@link
             *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},
             *   {@link module:Layout.u32|32-bit}, {@link
             *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}
             *   representation ranges;
             * * {@link module:Layout~UIntBE|Unsigned integers in big-endian
             *   format} with {@link module:Layout.u16be|16-bit}, {@link
             *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},
             *   {@link module:Layout.u40be|40-bit}, and {@link
             *   module:Layout.u48be|48-bit} representation ranges;
             * * {@link module:Layout~Int|Signed integers in little-endian
             *   format} with {@link module:Layout.s8|8-bit}, {@link
             *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},
             *   {@link module:Layout.s32|32-bit}, {@link
             *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}
             *   representation ranges;
             * * {@link module:Layout~IntBE|Signed integers in big-endian format}
             *   with {@link module:Layout.s16be|16-bit}, {@link
             *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},
             *   {@link module:Layout.s40be|40-bit}, and {@link
             *   module:Layout.s48be|48-bit} representation ranges;
             * * 64-bit integral values that decode to an exact (if magnitude is
             *   less than 2^53) or nearby integral Number in {@link
             *   module:Layout.nu64|unsigned little-endian}, {@link
             *   module:Layout.nu64be|unsigned big-endian}, {@link
             *   module:Layout.ns64|signed little-endian}, and {@link
             *   module:Layout.ns64be|unsigned big-endian} encodings;
             * * 32-bit floating point values with {@link
             *   module:Layout.f32|little-endian} and {@link
             *   module:Layout.f32be|big-endian} representations;
             * * 64-bit floating point values with {@link
             *   module:Layout.f64|little-endian} and {@link
             *   module:Layout.f64be|big-endian} representations;
             * * {@link module:Layout.const|Constants} that take no space in the
             *   encoded expression.
             *
             * and for these aggregate types:
             * * {@link module:Layout.seq|Sequence}s of instances of a {@link
             *   module:Layout~Layout|Layout}, with JavaScript representation as
             *   an Array and constant or data-dependent {@link
             *   module:Layout~Sequence#count|length};
             * * {@link module:Layout.struct|Structure}s that aggregate a
             *   heterogeneous sequence of {@link module:Layout~Layout|Layout}
             *   instances, with JavaScript representation as an Object;
             * * {@link module:Layout.union|Union}s that support multiple {@link
             *   module:Layout~VariantLayout|variant layouts} over a fixed
             *   (padded) or variable (not padded) span of bytes, using an
             *   unsigned integer at the start of the data or a separate {@link
             *   module:Layout.unionLayoutDiscriminator|layout element} to
             *   determine which layout to use when interpreting the buffer
             *   contents;
             * * {@link module:Layout.bits|BitStructure}s that contain a sequence
             *   of individual {@link
             *   module:Layout~BitStructure#addField|BitField}s packed into an 8,
             *   16, 24, or 32-bit unsigned integer starting at the least- or
             *   most-significant bit;
             * * {@link module:Layout.cstr|C strings} of varying length;
             * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link
             *   module:Layout~Blob#length|length} raw data.
             *
             * All {@link module:Layout~Layout|Layout} instances are immutable
             * after construction, to prevent internal state from becoming
             * inconsistent.
             *
             * @local Layout
             * @local ExternalLayout
             * @local GreedyCount
             * @local OffsetLayout
             * @local UInt
             * @local UIntBE
             * @local Int
             * @local IntBE
             * @local NearUInt64
             * @local NearUInt64BE
             * @local NearInt64
             * @local NearInt64BE
             * @local Float
             * @local FloatBE
             * @local Double
             * @local DoubleBE
             * @local Sequence
             * @local Structure
             * @local UnionDiscriminator
             * @local UnionLayoutDiscriminator
             * @local Union
             * @local VariantLayout
             * @local BitStructure
             * @local BitField
             * @local Boolean
             * @local Blob
             * @local CString
             * @local Constant
             * @local bindConstructorLayout
             * @module Layout
             * @license MIT
             * @author Peter A. Bigot
             * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}
             */
            n = {
                value: !0
            }, n = n = n = n = n = n = n = n = e._O = n = n = e.Jq = n = e.KB = e.u8 = e.cv = n = n = n = n = n = n = n = n = n = n = n = n = n = n = n = n = n = n = n = n = n = n = n = n = n = n = n = n = n = n = n = n = n = n = void 0, n = n = n = e.Ik = n = n = e.A9 = n = e.n_ = n = n = n = n = n = n = n = n = n = n = e.gM = n = n = n = n = void 0;
            let i = r(82957);

            function o(t) {
                if (!(t instanceof Uint8Array)) throw TypeError("b must be a Uint8Array")
            }

            function s(t) {
                return o(t), i.Buffer.from(t.buffer, t.byteOffset, t.length)
            }
            n = o, n = s;
            class a {
                constructor(t, e) {
                    if (!Number.isInteger(t)) throw TypeError("span must be an integer");
                    this.span = t, this.property = e
                }
                makeDestinationObject() {
                    return {}
                }
                getSpan(t, e) {
                    if (0 > this.span) throw RangeError("indeterminate span");
                    return this.span
                }
                replicate(t) {
                    let e = Object.create(this.constructor.prototype);
                    return Object.assign(e, this), e.property = t, e
                }
                fromArray(t) {}
            }

            function u(t, e) {
                return e.property ? t + "[" + e.property + "]" : t
            }
            n = a, n = u, n = function(t, e) {
                if ("function" != typeof t) throw TypeError("Class must be constructor");
                if (Object.prototype.hasOwnProperty.call(t, "layout_")) throw Error("Class is already bound to a layout");
                if (!(e && e instanceof a)) throw TypeError("layout must be a Layout");
                if (Object.prototype.hasOwnProperty.call(e, "boundConstructor_")) throw Error("layout is already bound to a constructor");
                t.layout_ = e, e.boundConstructor_ = t, e.makeDestinationObject = () => new t, Object.defineProperty(t.prototype, "encode", {
                    value(t, r) {
                        return e.encode(this, t, r)
                    },
                    writable: !0
                }), Object.defineProperty(t, "decode", {
                    value: (t, r) => e.decode(t, r),
                    writable: !0
                })
            };
            class c extends a {
                isCount() {
                    throw Error("ExternalLayout is abstract")
                }
            }
            n = c;
            class l extends c {
                constructor(t = 1, e) {
                    if (!Number.isInteger(t) || 0 >= t) throw TypeError("elementSpan must be a (positive) integer");
                    super(-1, e), this.elementSpan = t
                }
                isCount() {
                    return !0
                }
                decode(t, e = 0) {
                    return o(t), Math.floor((t.length - e) / this.elementSpan)
                }
                encode(t, e, r) {
                    return 0
                }
            }
            n = l;
            class h extends c {
                constructor(t, e = 0, r) {
                    if (!(t instanceof a)) throw TypeError("layout must be a Layout");
                    if (!Number.isInteger(e)) throw TypeError("offset must be integer or undefined");
                    super(t.span, r || t.property), this.layout = t, this.offset = e
                }
                isCount() {
                    return this.layout instanceof f || this.layout instanceof d
                }
                decode(t, e = 0) {
                    return this.layout.decode(t, e + this.offset)
                }
                encode(t, e, r = 0) {
                    return this.layout.encode(t, e, r + this.offset)
                }
            }
            n = h;
            class f extends a {
                constructor(t, e) {
                    if (super(t, e), 6 < this.span) throw RangeError("span must not exceed 6 bytes")
                }
                decode(t, e = 0) {
                    return s(t).readUIntLE(e, this.span)
                }
                encode(t, e, r = 0) {
                    return s(e).writeUIntLE(t, r, this.span), this.span
                }
            }
            n = f;
            class d extends a {
                constructor(t, e) {
                    if (super(t, e), 6 < this.span) throw RangeError("span must not exceed 6 bytes")
                }
                decode(t, e = 0) {
                    return s(t).readUIntBE(e, this.span)
                }
                encode(t, e, r = 0) {
                    return s(e).writeUIntBE(t, r, this.span), this.span
                }
            }
            n = d;
            class p extends a {
                constructor(t, e) {
                    if (super(t, e), 6 < this.span) throw RangeError("span must not exceed 6 bytes")
                }
                decode(t, e = 0) {
                    return s(t).readIntLE(e, this.span)
                }
                encode(t, e, r = 0) {
                    return s(e).writeIntLE(t, r, this.span), this.span
                }
            }
            n = p;
            class y extends a {
                constructor(t, e) {
                    if (super(t, e), 6 < this.span) throw RangeError("span must not exceed 6 bytes")
                }
                decode(t, e = 0) {
                    return s(t).readIntBE(e, this.span)
                }
                encode(t, e, r = 0) {
                    return s(e).writeIntBE(t, r, this.span), this.span
                }
            }
            n = y;
            let m = 4294967296;

            function b(t) {
                let e = Math.floor(t / m),
                    r = t - e * m;
                return {
                    hi32: e,
                    lo32: r
                }
            }

            function g(t, e) {
                return t * m + e
            }
            class w extends a {
                constructor(t) {
                    super(8, t)
                }
                decode(t, e = 0) {
                    let r = s(t),
                        n = r.readUInt32LE(e);
                    return g(r.readUInt32LE(e + 4), n)
                }
                encode(t, e, r = 0) {
                    let n = b(t),
                        i = s(e);
                    return i.writeUInt32LE(n.lo32, r), i.writeUInt32LE(n.hi32, r + 4), 8
                }
            }
            n = w;
            class v extends a {
                constructor(t) {
                    super(8, t)
                }
                decode(t, e = 0) {
                    let r = s(t);
                    return g(r.readUInt32BE(e), r.readUInt32BE(e + 4))
                }
                encode(t, e, r = 0) {
                    let n = b(t),
                        i = s(e);
                    return i.writeUInt32BE(n.hi32, r), i.writeUInt32BE(n.lo32, r + 4), 8
                }
            }
            n = v;
            class E extends a {
                constructor(t) {
                    super(8, t)
                }
                decode(t, e = 0) {
                    let r = s(t),
                        n = r.readUInt32LE(e);
                    return g(r.readInt32LE(e + 4), n)
                }
                encode(t, e, r = 0) {
                    let n = b(t),
                        i = s(e);
                    return i.writeUInt32LE(n.lo32, r), i.writeInt32LE(n.hi32, r + 4), 8
                }
            }
            n = E;
            class x extends a {
                constructor(t) {
                    super(8, t)
                }
                decode(t, e = 0) {
                    let r = s(t);
                    return g(r.readInt32BE(e), r.readUInt32BE(e + 4))
                }
                encode(t, e, r = 0) {
                    let n = b(t),
                        i = s(e);
                    return i.writeInt32BE(n.hi32, r), i.writeUInt32BE(n.lo32, r + 4), 8
                }
            }
            n = x;
            class S extends a {
                constructor(t) {
                    super(4, t)
                }
                decode(t, e = 0) {
                    return s(t).readFloatLE(e)
                }
                encode(t, e, r = 0) {
                    return s(e).writeFloatLE(t, r), 4
                }
            }
            n = S;
            class O extends a {
                constructor(t) {
                    super(4, t)
                }
                decode(t, e = 0) {
                    return s(t).readFloatBE(e)
                }
                encode(t, e, r = 0) {
                    return s(e).writeFloatBE(t, r), 4
                }
            }
            n = O;
            class C extends a {
                constructor(t) {
                    super(8, t)
                }
                decode(t, e = 0) {
                    return s(t).readDoubleLE(e)
                }
                encode(t, e, r = 0) {
                    return s(e).writeDoubleLE(t, r), 8
                }
            }
            n = C;
            class _ extends a {
                constructor(t) {
                    super(8, t)
                }
                decode(t, e = 0) {
                    return s(t).readDoubleBE(e)
                }
                encode(t, e, r = 0) {
                    return s(e).writeDoubleBE(t, r), 8
                }
            }
            n = _;
            class A extends a {
                constructor(t, e, r) {
                    if (!(t instanceof a)) throw TypeError("elementLayout must be a Layout");
                    if (!(e instanceof c && e.isCount() || Number.isInteger(e) && 0 <= e)) throw TypeError("count must be non-negative integer or an unsigned integer ExternalLayout");
                    let n = -1;
                    e instanceof c || !(0 < t.span) || (n = e * t.span), super(n, r), this.elementLayout = t, this.count = e
                }
                getSpan(t, e = 0) {
                    if (0 <= this.span) return this.span;
                    let r = 0,
                        n = this.count;
                    if (n instanceof c && (n = n.decode(t, e)), 0 < this.elementLayout.span) r = n * this.elementLayout.span;
                    else {
                        let i = 0;
                        for (; i < n;) r += this.elementLayout.getSpan(t, e + r), ++i
                    }
                    return r
                }
                decode(t, e = 0) {
                    let r = [],
                        n = 0,
                        i = this.count;
                    for (i instanceof c && (i = i.decode(t, e)); n < i;) r.push(this.elementLayout.decode(t, e)), e += this.elementLayout.getSpan(t, e), n += 1;
                    return r
                }
                encode(t, e, r = 0) {
                    let n = this.elementLayout,
                        i = t.reduce((t, i) => t + n.encode(i, e, r + t), 0);
                    return this.count instanceof c && this.count.encode(t.length, e, r), i
                }
            }
            n = A;
            class P extends a {
                constructor(t, e, r) {
                    if (!(Array.isArray(t) && t.reduce((t, e) => t && e instanceof a, !0))) throw TypeError("fields must be array of Layout instances");
                    for (let n of ("boolean" == typeof e && void 0 === r && (r = e, e = void 0), t))
                        if (0 > n.span && void 0 === n.property) throw Error("fields cannot contain unnamed variable-length layout");
                    let n = -1;
                    try {
                        n = t.reduce((t, e) => t + e.getSpan(), 0)
                    } catch (t) {}
                    super(n, e), this.fields = t, this.decodePrefixes = !!r
                }
                getSpan(t, e = 0) {
                    if (0 <= this.span) return this.span;
                    let r = 0;
                    try {
                        r = this.fields.reduce((r, n) => {
                            let i = n.getSpan(t, e);
                            return e += i, r + i
                        }, 0)
                    } catch (t) {
                        throw RangeError("indeterminate span")
                    }
                    return r
                }
                decode(t, e = 0) {
                    o(t);
                    let r = this.makeDestinationObject();
                    for (let n of this.fields)
                        if (void 0 !== n.property && (r[n.property] = n.decode(t, e)), e += n.getSpan(t, e), this.decodePrefixes && t.length === e) break;
                    return r
                }
                encode(t, e, r = 0) {
                    let n = r,
                        i = 0,
                        o = 0;
                    for (let n of this.fields) {
                        let s = n.span;
                        if (o = 0 < s ? s : 0, void 0 !== n.property) {
                            let i = t[n.property];
                            void 0 !== i && (o = n.encode(i, e, r), 0 > s && (s = n.getSpan(e, r)))
                        }
                        i = r, r += s
                    }
                    return i + o - n
                }
                fromArray(t) {
                    let e = this.makeDestinationObject();
                    for (let r of this.fields) void 0 !== r.property && 0 < t.length && (e[r.property] = t.shift());
                    return e
                }
                layoutFor(t) {
                    if ("string" != typeof t) throw TypeError("property must be string");
                    for (let e of this.fields)
                        if (e.property === t) return e
                }
                offsetOf(t) {
                    if ("string" != typeof t) throw TypeError("property must be string");
                    let e = 0;
                    for (let r of this.fields) {
                        if (r.property === t) return e;
                        0 > r.span ? e = -1 : 0 <= e && (e += r.span)
                    }
                }
            }
            n = P;
            class k {
                constructor(t) {
                    this.property = t
                }
                decode(t, e) {
                    throw Error("UnionDiscriminator is abstract")
                }
                encode(t, e, r) {
                    throw Error("UnionDiscriminator is abstract")
                }
            }
            n = k;
            class D extends k {
                constructor(t, e) {
                    if (!(t instanceof c && t.isCount())) throw TypeError("layout must be an unsigned integer ExternalLayout");
                    super(e || t.property || "variant"), this.layout = t
                }
                decode(t, e) {
                    return this.layout.decode(t, e)
                }
                encode(t, e, r) {
                    return this.layout.encode(t, e, r)
                }
            }
            n = D;
            class I extends a {
                constructor(t, e, r) {
                    let n;
                    if (t instanceof f || t instanceof d) n = new D(new h(t));
                    else if (t instanceof c && t.isCount()) n = new D(t);
                    else if (t instanceof k) n = t;
                    else throw TypeError("discr must be a UnionDiscriminator or an unsigned integer layout");
                    if (void 0 === e && (e = null), !(null === e || e instanceof a)) throw TypeError("defaultLayout must be null or a Layout");
                    if (null !== e) {
                        if (0 > e.span) throw Error("defaultLayout must have constant span");
                        void 0 === e.property && (e = e.replicate("content"))
                    }
                    let i = -1;
                    e && 0 <= (i = e.span) && (t instanceof f || t instanceof d) && (i += n.layout.span), super(i, r), this.discriminator = n, this.usesPrefixDiscriminator = t instanceof f || t instanceof d, this.defaultLayout = e, this.registry = {};
                    let o = this.defaultGetSourceVariant.bind(this);
                    this.getSourceVariant = function(t) {
                        return o(t)
                    }, this.configGetSourceVariant = function(t) {
                        o = t.bind(this)
                    }
                }
                getSpan(t, e = 0) {
                    if (0 <= this.span) return this.span;
                    let r = this.getVariant(t, e);
                    if (!r) throw Error("unable to determine span for unrecognized variant");
                    return r.getSpan(t, e)
                }
                defaultGetSourceVariant(t) {
                    if (Object.prototype.hasOwnProperty.call(t, this.discriminator.property)) {
                        if (this.defaultLayout && this.defaultLayout.property && Object.prototype.hasOwnProperty.call(t, this.defaultLayout.property)) return;
                        let e = this.registry[t[this.discriminator.property]];
                        if (e && (!e.layout || e.property && Object.prototype.hasOwnProperty.call(t, e.property))) return e
                    } else
                        for (let e in this.registry) {
                            let r = this.registry[e];
                            if (r.property && Object.prototype.hasOwnProperty.call(t, r.property)) return r
                        }
                    throw Error("unable to infer src variant")
                }
                decode(t, e = 0) {
                    let r;
                    let n = this.discriminator,
                        i = n.decode(t, e),
                        o = this.registry[i];
                    if (void 0 === o) {
                        let o = this.defaultLayout,
                            s = 0;
                        this.usesPrefixDiscriminator && (s = n.layout.span), (r = this.makeDestinationObject())[n.property] = i, r[o.property] = o.decode(t, e + s)
                    } else r = o.decode(t, e);
                    return r
                }
                encode(t, e, r = 0) {
                    let n = this.getSourceVariant(t);
                    if (void 0 === n) {
                        let n = this.discriminator,
                            i = this.defaultLayout,
                            o = 0;
                        return this.usesPrefixDiscriminator && (o = n.layout.span), n.encode(t[n.property], e, r), o + i.encode(t[i.property], e, r + o)
                    }
                    return n.encode(t, e, r)
                }
                addVariant(t, e, r) {
                    let n = new M(this, t, e, r);
                    return this.registry[t] = n, n
                }
                getVariant(t, e = 0) {
                    let r;
                    return t instanceof Uint8Array ? r = this.discriminator.decode(t, e) : r = t, this.registry[r]
                }
            }
            n = I;
            class M extends a {
                constructor(t, e, r, n) {
                    if (!(t instanceof I)) throw TypeError("union must be a Union");
                    if (!Number.isInteger(e) || 0 > e) throw TypeError("variant must be a (non-negative) integer");
                    if ("string" == typeof r && void 0 === n && (n = r, r = null), r) {
                        if (!(r instanceof a)) throw TypeError("layout must be a Layout");
                        if (null !== t.defaultLayout && 0 <= r.span && r.span > t.defaultLayout.span) throw Error("variant span exceeds span of containing union");
                        if ("string" != typeof n) throw TypeError("variant must have a String property")
                    }
                    let i = t.span;
                    0 > t.span && 0 <= (i = r ? r.span : 0) && t.usesPrefixDiscriminator && (i += t.discriminator.layout.span), super(i, n), this.union = t, this.variant = e, this.layout = r || null
                }
                getSpan(t, e = 0) {
                    if (0 <= this.span) return this.span;
                    let r = 0;
                    this.union.usesPrefixDiscriminator && (r = this.union.discriminator.layout.span);
                    let n = 0;
                    return this.layout && (n = this.layout.getSpan(t, e + r)), r + n
                }
                decode(t, e = 0) {
                    let r = this.makeDestinationObject();
                    if (this !== this.union.getVariant(t, e)) throw Error("variant mismatch");
                    let n = 0;
                    return this.union.usesPrefixDiscriminator && (n = this.union.discriminator.layout.span), this.layout ? r[this.property] = this.layout.decode(t, e + n) : this.property ? r[this.property] = !0 : this.union.usesPrefixDiscriminator && (r[this.union.discriminator.property] = this.variant), r
                }
                encode(t, e, r = 0) {
                    let n = 0;
                    if (this.union.usesPrefixDiscriminator && (n = this.union.discriminator.layout.span), this.layout && !Object.prototype.hasOwnProperty.call(t, this.property)) throw TypeError("variant lacks property " + this.property);
                    this.union.discriminator.encode(this.variant, e, r);
                    let i = n;
                    if (this.layout && (this.layout.encode(t[this.property], e, r + n), i += this.layout.getSpan(e, r + n), 0 <= this.union.span && i > this.union.span)) throw Error("encoded variant overruns containing union");
                    return i
                }
                fromArray(t) {
                    if (this.layout) return this.layout.fromArray(t)
                }
            }

            function B(t) {
                return 0 > t && (t += 4294967296), t
            }
            n = M;
            class R extends a {
                constructor(t, e, r) {
                    if (!(t instanceof f || t instanceof d)) throw TypeError("word must be a UInt or UIntBE layout");
                    if ("string" == typeof e && void 0 === r && (r = e, e = !1), 4 < t.span) throw RangeError("word cannot exceed 32 bits");
                    super(t.span, r), this.word = t, this.msb = !!e, this.fields = [];
                    let n = 0;
                    this._packedSetValue = function(t) {
                        return n = B(t), this
                    }, this._packedGetValue = function() {
                        return n
                    }
                }
                decode(t, e = 0) {
                    let r = this.makeDestinationObject(),
                        n = this.word.decode(t, e);
                    for (let e of (this._packedSetValue(n), this.fields)) void 0 !== e.property && (r[e.property] = e.decode(t));
                    return r
                }
                encode(t, e, r = 0) {
                    let n = this.word.decode(e, r);
                    for (let e of (this._packedSetValue(n), this.fields))
                        if (void 0 !== e.property) {
                            let r = t[e.property];
                            void 0 !== r && e.encode(r)
                        }
                    return this.word.encode(this._packedGetValue(), e, r)
                }
                addField(t, e) {
                    let r = new T(this, t, e);
                    return this.fields.push(r), r
                }
                addBoolean(t) {
                    let e = new j(this, t);
                    return this.fields.push(e), e
                }
                fieldFor(t) {
                    if ("string" != typeof t) throw TypeError("property must be string");
                    for (let e of this.fields)
                        if (e.property === t) return e
                }
            }
            n = R;
            class T {
                constructor(t, e, r) {
                    if (!(t instanceof R)) throw TypeError("container must be a BitStructure");
                    if (!Number.isInteger(e) || 0 >= e) throw TypeError("bits must be positive integer");
                    let n = 8 * t.span,
                        i = t.fields.reduce((t, e) => t + e.bits, 0);
                    if (e + i > n) throw Error("bits too long for span remainder (" + (n - i) + " of " + n + " remain)");
                    this.container = t, this.bits = e, this.valueMask = (1 << e) - 1, 32 === e && (this.valueMask = 4294967295), this.start = i, this.container.msb && (this.start = n - i - e), this.wordMask = B(this.valueMask << this.start), this.property = r
                }
                decode(t, e) {
                    return B(this.container._packedGetValue() & this.wordMask) >>> this.start
                }
                encode(t) {
                    if ("number" != typeof t || !Number.isInteger(t) || t !== B(t & this.valueMask)) throw TypeError(u("BitField.encode", this) + " value must be integer not exceeding " + this.valueMask);
                    let e = this.container._packedGetValue(),
                        r = B(t << this.start);
                    this.container._packedSetValue(B(e & ~this.wordMask) | r)
                }
            }
            n = T;
            class j extends T {
                constructor(t, e) {
                    super(t, 1, e)
                }
                decode(t, e) {
                    return !!super.decode(t, e)
                }
                encode(t) {
                    "boolean" == typeof t && (t = +t), super.encode(t)
                }
            }
            n = j;
            class U extends a {
                constructor(t, e) {
                    if (!(t instanceof c && t.isCount() || Number.isInteger(t) && 0 <= t)) throw TypeError("length must be positive integer or an unsigned integer ExternalLayout");
                    let r = -1;
                    t instanceof c || (r = t), super(r, e), this.length = t
                }
                getSpan(t, e) {
                    let r = this.span;
                    return 0 > r && (r = this.length.decode(t, e)), r
                }
                decode(t, e = 0) {
                    let r = this.span;
                    return 0 > r && (r = this.length.decode(t, e)), s(t).slice(e, e + r)
                }
                encode(t, e, r) {
                    let n = this.length;
                    if (this.length instanceof c && (n = t.length), !(t instanceof Uint8Array && n === t.length)) throw TypeError(u("Blob.encode", this) + " requires (length " + n + ") Uint8Array as src");
                    if (r + n > e.length) throw RangeError("encoding overruns Uint8Array");
                    let i = s(t);
                    return s(e).write(i.toString("hex"), r, n, "hex"), this.length instanceof c && this.length.encode(n, e, r), n
                }
            }
            n = U;
            class N extends a {
                constructor(t) {
                    super(-1, t)
                }
                getSpan(t, e = 0) {
                    o(t);
                    let r = e;
                    for (; r < t.length && 0 !== t[r];) r += 1;
                    return 1 + r - e
                }
                decode(t, e = 0) {
                    let r = this.getSpan(t, e);
                    return s(t).slice(e, e + r - 1).toString("utf-8")
                }
                encode(t, e, r = 0) {
                    "string" != typeof t && (t = String(t));
                    let n = i.Buffer.from(t, "utf8"),
                        o = n.length;
                    if (r + o > e.length) throw RangeError("encoding overruns Buffer");
                    let a = s(e);
                    return n.copy(a, r), a[r + o] = 0, o + 1
                }
            }
            n = N;
            class F extends a {
                constructor(t, e) {
                    if ("string" == typeof t && void 0 === e && (e = t, t = void 0), void 0 === t) t = -1;
                    else if (!Number.isInteger(t)) throw TypeError("maxSpan must be an integer");
                    super(-1, e), this.maxSpan = t
                }
                getSpan(t, e = 0) {
                    return o(t), t.length - e
                }
                decode(t, e = 0) {
                    let r = this.getSpan(t, e);
                    if (0 <= this.maxSpan && this.maxSpan < r) throw RangeError("text length exceeds maxSpan");
                    return s(t).slice(e, e + r).toString("utf-8")
                }
                encode(t, e, r = 0) {
                    "string" != typeof t && (t = String(t));
                    let n = i.Buffer.from(t, "utf8"),
                        o = n.length;
                    if (0 <= this.maxSpan && this.maxSpan < o) throw RangeError("text length exceeds maxSpan");
                    if (r + o > e.length) throw RangeError("encoding overruns Buffer");
                    return n.copy(s(e), r), o
                }
            }
            n = F;
            class L extends a {
                constructor(t, e) {
                    super(0, e), this.value = t
                }
                decode(t, e) {
                    return this.value
                }
                encode(t, e, r) {
                    return 0
                }
            }
            n = L, n = (t, e) => new l(t, e), e.cv = (t, e, r) => new h(t, e, r), e.u8 = t => new f(1, t), e.KB = t => new f(2, t), n = t => new f(3, t), e.Jq = t => new f(4, t), n = t => new f(5, t), n = t => new f(6, t), e._O = t => new w(t), n = t => new d(2, t), n = t => new d(3, t), n = t => new d(4, t), n = t => new d(5, t), n = t => new d(6, t), n = t => new v(t), n = t => new p(1, t), n = t => new p(2, t), n = t => new p(3, t), n = t => new p(4, t), n = t => new p(5, t), n = t => new p(6, t), e.gM = t => new E(t), n = t => new y(2, t), n = t => new y(3, t), n = t => new y(4, t), n = t => new y(5, t), n = t => new y(6, t), n = t => new x(t), n = t => new S(t), n = t => new O(t), n = t => new C(t), n = t => new _(t), e.n_ = (t, e, r) => new P(t, e, r), n = (t, e, r) => new R(t, e, r), e.A9 = (t, e, r) => new A(t, e, r), n = (t, e, r) => new I(t, e, r), n = (t, e) => new D(t, e), e.Ik = (t, e) => new U(t, e), (t, e) => new L(t, e)
        },
        7524: function(t, e, r) {
            var n = r(18282),
                i = "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz";
            t.exports = n(i)
        },
        1356: function(t, e, r) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var n = r(34550);

            function i(t, e) {
                return void 0 === e && (e = 0), (t[e + 0] << 8 | t[e + 1]) << 16 >> 16
            }

            function o(t, e) {
                return void 0 === e && (e = 0), (t[e + 0] << 8 | t[e + 1]) >>> 0
            }

            function s(t, e) {
                return void 0 === e && (e = 0), (t[e + 1] << 8 | t[e]) << 16 >> 16
            }

            function a(t, e) {
                return void 0 === e && (e = 0), (t[e + 1] << 8 | t[e]) >>> 0
            }

            function u(t, e, r) {
                return void 0 === e && (e = new Uint8Array(2)), void 0 === r && (r = 0), e[r + 0] = t >>> 8, e[r + 1] = t >>> 0, e
            }

            function c(t, e, r) {
                return void 0 === e && (e = new Uint8Array(2)), void 0 === r && (r = 0), e[r + 0] = t >>> 0, e[r + 1] = t >>> 8, e
            }

            function l(t, e) {
                return void 0 === e && (e = 0), t[e] << 24 | t[e + 1] << 16 | t[e + 2] << 8 | t[e + 3]
            }

            function h(t, e) {
                return void 0 === e && (e = 0), (t[e] << 24 | t[e + 1] << 16 | t[e + 2] << 8 | t[e + 3]) >>> 0
            }

            function f(t, e) {
                return void 0 === e && (e = 0), t[e + 3] << 24 | t[e + 2] << 16 | t[e + 1] << 8 | t[e]
            }

            function d(t, e) {
                return void 0 === e && (e = 0), (t[e + 3] << 24 | t[e + 2] << 16 | t[e + 1] << 8 | t[e]) >>> 0
            }

            function p(t, e, r) {
                return void 0 === e && (e = new Uint8Array(4)), void 0 === r && (r = 0), e[r + 0] = t >>> 24, e[r + 1] = t >>> 16, e[r + 2] = t >>> 8, e[r + 3] = t >>> 0, e
            }

            function y(t, e, r) {
                return void 0 === e && (e = new Uint8Array(4)), void 0 === r && (r = 0), e[r + 0] = t >>> 0, e[r + 1] = t >>> 8, e[r + 2] = t >>> 16, e[r + 3] = t >>> 24, e
            }

            function m(t, e) {
                void 0 === e && (e = 0);
                var r = l(t, e),
                    n = l(t, e + 4);
                return 4294967296 * r + n - (n >> 31) * 4294967296
            }

            function b(t, e) {
                return void 0 === e && (e = 0), 4294967296 * h(t, e) + h(t, e + 4)
            }

            function g(t, e) {
                void 0 === e && (e = 0);
                var r = f(t, e);
                return 4294967296 * f(t, e + 4) + r - (r >> 31) * 4294967296
            }

            function w(t, e) {
                void 0 === e && (e = 0);
                var r = d(t, e);
                return 4294967296 * d(t, e + 4) + r
            }

            function v(t, e, r) {
                return void 0 === e && (e = new Uint8Array(8)), void 0 === r && (r = 0), p(t / 4294967296 >>> 0, e, r), p(t >>> 0, e, r + 4), e
            }

            function E(t, e, r) {
                return void 0 === e && (e = new Uint8Array(8)), void 0 === r && (r = 0), y(t >>> 0, e, r), y(t / 4294967296 >>> 0, e, r + 4), e
            }

            function x(t, e, r) {
                if (void 0 === r && (r = 0), t % 8 != 0) throw Error("readUintBE supports only bitLengths divisible by 8");
                if (t / 8 > e.length - r) throw Error("readUintBE: array is too short for the given bitLength");
                for (var n = 0, i = 1, o = t / 8 + r - 1; o >= r; o--) n += e[o] * i, i *= 256;
                return n
            }

            function S(t, e, r) {
                if (void 0 === r && (r = 0), t % 8 != 0) throw Error("readUintLE supports only bitLengths divisible by 8");
                if (t / 8 > e.length - r) throw Error("readUintLE: array is too short for the given bitLength");
                for (var n = 0, i = 1, o = r; o < r + t / 8; o++) n += e[o] * i, i *= 256;
                return n
            }

            function O(t, e, r, i) {
                if (void 0 === r && (r = new Uint8Array(t / 8)), void 0 === i && (i = 0), t % 8 != 0) throw Error("writeUintBE supports only bitLengths divisible by 8");
                if (!n.isSafeInteger(e)) throw Error("writeUintBE value must be an integer");
                for (var o = 1, s = t / 8 + i - 1; s >= i; s--) r[s] = e / o & 255, o *= 256;
                return r
            }

            function C(t, e, r, i) {
                if (void 0 === r && (r = new Uint8Array(t / 8)), void 0 === i && (i = 0), t % 8 != 0) throw Error("writeUintLE supports only bitLengths divisible by 8");
                if (!n.isSafeInteger(e)) throw Error("writeUintLE value must be an integer");
                for (var o = 1, s = i; s < i + t / 8; s++) r[s] = e / o & 255, o *= 256;
                return r
            }

            function _(t, e) {
                return void 0 === e && (e = 0), new DataView(t.buffer, t.byteOffset, t.byteLength).getFloat32(e)
            }

            function A(t, e) {
                return void 0 === e && (e = 0), new DataView(t.buffer, t.byteOffset, t.byteLength).getFloat32(e, !0)
            }

            function P(t, e) {
                return void 0 === e && (e = 0), new DataView(t.buffer, t.byteOffset, t.byteLength).getFloat64(e)
            }

            function k(t, e) {
                return void 0 === e && (e = 0), new DataView(t.buffer, t.byteOffset, t.byteLength).getFloat64(e, !0)
            }

            function D(t, e, r) {
                return void 0 === e && (e = new Uint8Array(4)), void 0 === r && (r = 0), new DataView(e.buffer, e.byteOffset, e.byteLength).setFloat32(r, t), e
            }

            function I(t, e, r) {
                return void 0 === e && (e = new Uint8Array(4)), void 0 === r && (r = 0), new DataView(e.buffer, e.byteOffset, e.byteLength).setFloat32(r, t, !0), e
            }

            function M(t, e, r) {
                return void 0 === e && (e = new Uint8Array(8)), void 0 === r && (r = 0), new DataView(e.buffer, e.byteOffset, e.byteLength).setFloat64(r, t), e
            }

            function B(t, e, r) {
                return void 0 === e && (e = new Uint8Array(8)), void 0 === r && (r = 0), new DataView(e.buffer, e.byteOffset, e.byteLength).setFloat64(r, t, !0), e
            }
            e.readInt16BE = i, e.readUint16BE = o, e.readInt16LE = s, e.readUint16LE = a, e.writeUint16BE = u, e.writeInt16BE = u, e.writeUint16LE = c, e.writeInt16LE = c, e.readInt32BE = l, e.readUint32BE = h, e.readInt32LE = f, e.readUint32LE = d, e.writeUint32BE = p, e.writeInt32BE = p, e.writeUint32LE = y, e.writeInt32LE = y, e.readInt64BE = m, e.readUint64BE = b, e.readInt64LE = g, e.readUint64LE = w, e.writeUint64BE = v, e.writeInt64BE = v, e.writeUint64LE = E, e.writeInt64LE = E, e.readUintBE = x, e.readUintLE = S, e.writeUintBE = O, e.writeUintLE = C, e.readFloat32BE = _, e.readFloat32LE = A, e.readFloat64BE = P, e.readFloat64LE = k, e.writeFloat32BE = D, e.writeFloat32LE = I, e.writeFloat64BE = M, e.writeFloat64LE = B
        },
        35600: function(t, e, r) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var n = r(1356),
                i = r(87427),
                o = 20;

            function s(t, e, r) {
                for (var i = 1634760805, s = 857760878, a = 2036477234, u = 1797285236, c = r[3] << 24 | r[2] << 16 | r[1] << 8 | r[0], l = r[7] << 24 | r[6] << 16 | r[5] << 8 | r[4], h = r[11] << 24 | r[10] << 16 | r[9] << 8 | r[8], f = r[15] << 24 | r[14] << 16 | r[13] << 8 | r[12], d = r[19] << 24 | r[18] << 16 | r[17] << 8 | r[16], p = r[23] << 24 | r[22] << 16 | r[21] << 8 | r[20], y = r[27] << 24 | r[26] << 16 | r[25] << 8 | r[24], m = r[31] << 24 | r[30] << 16 | r[29] << 8 | r[28], b = e[3] << 24 | e[2] << 16 | e[1] << 8 | e[0], g = e[7] << 24 | e[6] << 16 | e[5] << 8 | e[4], w = e[11] << 24 | e[10] << 16 | e[9] << 8 | e[8], v = e[15] << 24 | e[14] << 16 | e[13] << 8 | e[12], E = i, x = s, S = a, O = u, C = c, _ = l, A = h, P = f, k = d, D = p, I = y, M = m, B = b, R = g, T = w, j = v, U = 0; U < o; U += 2) B ^= E = E + C | 0, C ^= k = k + (B = B >>> 16 | B << 16) | 0, C = C >>> 20 | C << 12, R ^= x = x + _ | 0, _ ^= D = D + (R = R >>> 16 | R << 16) | 0, _ = _ >>> 20 | _ << 12, T ^= S = S + A | 0, A ^= I = I + (T = T >>> 16 | T << 16) | 0, A = A >>> 20 | A << 12, j ^= O = O + P | 0, P ^= M = M + (j = j >>> 16 | j << 16) | 0, P = P >>> 20 | P << 12, T ^= S = S + A | 0, A ^= I = I + (T = T >>> 24 | T << 8) | 0, A = A >>> 25 | A << 7, j ^= O = O + P | 0, P ^= M = M + (j = j >>> 24 | j << 8) | 0, P = P >>> 25 | P << 7, R ^= x = x + _ | 0, _ ^= D = D + (R = R >>> 24 | R << 8) | 0, _ = _ >>> 25 | _ << 7, B ^= E = E + C | 0, C ^= k = k + (B = B >>> 24 | B << 8) | 0, C = C >>> 25 | C << 7, j ^= E = E + _ | 0, _ ^= I = I + (j = j >>> 16 | j << 16) | 0, _ = _ >>> 20 | _ << 12, B ^= x = x + A | 0, A ^= M = M + (B = B >>> 16 | B << 16) | 0, A = A >>> 20 | A << 12, R ^= S = S + P | 0, P ^= k = k + (R = R >>> 16 | R << 16) | 0, P = P >>> 20 | P << 12, T ^= O = O + C | 0, C ^= D = D + (T = T >>> 16 | T << 16) | 0, C = C >>> 20 | C << 12, R ^= S = S + P | 0, P ^= k = k + (R = R >>> 24 | R << 8) | 0, P = P >>> 25 | P << 7, T ^= O = O + C | 0, C ^= D = D + (T = T >>> 24 | T << 8) | 0, C = C >>> 25 | C << 7, B ^= x = x + A | 0, A ^= M = M + (B = B >>> 24 | B << 8) | 0, A = A >>> 25 | A << 7, j ^= E = E + _ | 0, _ ^= I = I + (j = j >>> 24 | j << 8) | 0, _ = _ >>> 25 | _ << 7;
                n.writeUint32LE(E + i | 0, t, 0), n.writeUint32LE(x + s | 0, t, 4), n.writeUint32LE(S + a | 0, t, 8), n.writeUint32LE(O + u | 0, t, 12), n.writeUint32LE(C + c | 0, t, 16), n.writeUint32LE(_ + l | 0, t, 20), n.writeUint32LE(A + h | 0, t, 24), n.writeUint32LE(P + f | 0, t, 28), n.writeUint32LE(k + d | 0, t, 32), n.writeUint32LE(D + p | 0, t, 36), n.writeUint32LE(I + y | 0, t, 40), n.writeUint32LE(M + m | 0, t, 44), n.writeUint32LE(B + b | 0, t, 48), n.writeUint32LE(R + g | 0, t, 52), n.writeUint32LE(T + w | 0, t, 56), n.writeUint32LE(j + v | 0, t, 60)
            }

            function a(t, e, r, n, o) {
                if (void 0 === o && (o = 0), 32 !== t.length) throw Error("ChaCha: key size must be 32 bytes");
                if (n.length < r.length) throw Error("ChaCha: destination is shorter than source");
                if (0 === o) {
                    if (8 !== e.length && 12 !== e.length) throw Error("ChaCha nonce must be 8 or 12 bytes");
                    u = (a = new Uint8Array(16)).length - e.length, a.set(e, u)
                } else {
                    if (16 !== e.length) throw Error("ChaCha nonce with counter must be 16 bytes");
                    a = e, u = o
                }
                for (var a, u, l = new Uint8Array(64), h = 0; h < r.length; h += 64) {
                    s(l, a, t);
                    for (var f = h; f < h + 64 && f < r.length; f++) n[f] = r[f] ^ l[f - h];
                    c(a, 0, u)
                }
                return i.wipe(l), 0 === o && i.wipe(a), n
            }

            function u(t, e, r, n) {
                return void 0 === n && (n = 0), i.wipe(r), a(t, e, r, r, n)
            }

            function c(t, e, r) {
                for (var n = 1; r--;) n = n + (255 & t[e]) | 0, t[e] = 255 & n, n >>>= 8, e++;
                if (n > 0) throw Error("ChaCha: counter overflow")
            }
            e.streamXOR = a, e.stream = u
        },
        50972: function(t, e, r) {
            "use strict";
            n = {
                value: !0
            };
            var n, i = r(35600),
                o = r(50081),
                s = r(87427),
                a = r(1356),
                u = r(35905);
            e.Cv = 32, e.WH = 12, e.pg = 16;
            var c = new Uint8Array(16),
                l = function() {
                    function t(t) {
                        if (this.nonceLength = e.WH, this.tagLength = e.pg, t.length !== e.Cv) throw Error("ChaCha20Poly1305 needs 32-byte key");
                        this._key = new Uint8Array(t)
                    }
                    return t.prototype.seal = function(t, e, r, n) {
                        if (t.length > 16) throw Error("ChaCha20Poly1305: incorrect nonce length");
                        var o, a = new Uint8Array(16);
                        a.set(t, a.length - t.length);
                        var u = new Uint8Array(32);
                        i.stream(this._key, a, u, 4);
                        var c = e.length + this.tagLength;
                        if (n) {
                            if (n.length !== c) throw Error("ChaCha20Poly1305: incorrect destination length");
                            o = n
                        } else o = new Uint8Array(c);
                        return i.streamXOR(this._key, a, e, o, 4), this._authenticate(o.subarray(o.length - this.tagLength, o.length), u, o.subarray(0, o.length - this.tagLength), r), s.wipe(a), o
                    }, t.prototype.open = function(t, e, r, n) {
                        if (t.length > 16) throw Error("ChaCha20Poly1305: incorrect nonce length");
                        if (e.length < this.tagLength) return null;
                        var o, a = new Uint8Array(16);
                        a.set(t, a.length - t.length);
                        var c = new Uint8Array(32);
                        i.stream(this._key, a, c, 4);
                        var l = new Uint8Array(this.tagLength);
                        if (this._authenticate(l, c, e.subarray(0, e.length - this.tagLength), r), !u.equal(l, e.subarray(e.length - this.tagLength, e.length))) return null;
                        var h = e.length - this.tagLength;
                        if (n) {
                            if (n.length !== h) throw Error("ChaCha20Poly1305: incorrect destination length");
                            o = n
                        } else o = new Uint8Array(h);
                        return i.streamXOR(this._key, a, e.subarray(0, e.length - this.tagLength), o, 4), s.wipe(a), o
                    }, t.prototype.clean = function() {
                        return s.wipe(this._key), this
                    }, t.prototype._authenticate = function(t, e, r, n) {
                        var i = new o.Poly1305(e);
                        n && (i.update(n), n.length % 16 > 0 && i.update(c.subarray(n.length % 16))), i.update(r), r.length % 16 > 0 && i.update(c.subarray(r.length % 16));
                        var u = new Uint8Array(8);
                        n && a.writeUint64LE(n.length, u), i.update(u), a.writeUint64LE(r.length, u), i.update(u);
                        for (var l = i.digest(), h = 0; h < l.length; h++) t[h] = l[h];
                        i.clean(), s.wipe(l), s.wipe(u)
                    }, t
                }();
            e.OK = l
        },
        35905: function(t, e) {
            "use strict";

            function r(t, e, r) {
                return ~(t - 1) & e | t - 1 & r
            }

            function n(t, e) {
                return (0 | t) - (0 | e) - 1 >>> 31 & 1
            }

            function i(t, e) {
                if (t.length !== e.length) return 0;
                for (var r = 0, n = 0; n < t.length; n++) r |= t[n] ^ e[n];
                return 1 & r - 1 >>> 8
            }

            function o(t, e) {
                return 0 !== t.length && 0 !== e.length && 0 !== i(t, e)
            }
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.select = r, e.lessOrEqual = n, e.compare = i, e.equal = o
        },
        50601: function(t, e) {
            "use strict";

            function r(t) {
                return void 0 !== t.saveState && void 0 !== t.restoreState && void 0 !== t.cleanSavedState
            }
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.isSerializableHash = r
        },
        9014: function(t, e, r) {
            "use strict";
            n = {
                value: !0
            };
            var n, i = r(76568),
                o = r(87427),
                s = function() {
                    function t(t, e, r, n) {
                        void 0 === r && (r = new Uint8Array(0)), this._counter = new Uint8Array(1), this._hash = t, this._info = n;
                        var o = i.hmac(this._hash, r, e);
                        this._hmac = new i.HMAC(t, o), this._buffer = new Uint8Array(this._hmac.digestLength), this._bufpos = this._buffer.length
                    }
                    return t.prototype._fillBuffer = function() {
                        this._counter[0]++;
                        var t = this._counter[0];
                        if (0 === t) throw Error("hkdf: cannot expand more");
                        this._hmac.reset(), t > 1 && this._hmac.update(this._buffer), this._info && this._hmac.update(this._info), this._hmac.update(this._counter), this._hmac.finish(this._buffer), this._bufpos = 0
                    }, t.prototype.expand = function(t) {
                        for (var e = new Uint8Array(t), r = 0; r < e.length; r++) this._bufpos === this._buffer.length && this._fillBuffer(), e[r] = this._buffer[this._bufpos++];
                        return e
                    }, t.prototype.clean = function() {
                        this._hmac.clean(), o.wipe(this._buffer), o.wipe(this._counter), this._bufpos = 0
                    }, t
                }();
            e.t = s
        },
        76568: function(t, e, r) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var n = r(50601),
                i = r(35905),
                o = r(87427),
                s = function() {
                    function t(t, e) {
                        this._finished = !1, this._inner = new t, this._outer = new t, this.blockSize = this._outer.blockSize, this.digestLength = this._outer.digestLength;
                        var r = new Uint8Array(this.blockSize);
                        e.length > this.blockSize ? this._inner.update(e).finish(r).clean() : r.set(e);
                        for (var i = 0; i < r.length; i++) r[i] ^= 54;
                        this._inner.update(r);
                        for (var i = 0; i < r.length; i++) r[i] ^= 106;
                        this._outer.update(r), n.isSerializableHash(this._inner) && n.isSerializableHash(this._outer) && (this._innerKeyedState = this._inner.saveState(), this._outerKeyedState = this._outer.saveState()), o.wipe(r)
                    }
                    return t.prototype.reset = function() {
                        if (!n.isSerializableHash(this._inner) || !n.isSerializableHash(this._outer)) throw Error("hmac: can't reset() because hash doesn't implement restoreState()");
                        return this._inner.restoreState(this._innerKeyedState), this._outer.restoreState(this._outerKeyedState), this._finished = !1, this
                    }, t.prototype.clean = function() {
                        n.isSerializableHash(this._inner) && this._inner.cleanSavedState(this._innerKeyedState), n.isSerializableHash(this._outer) && this._outer.cleanSavedState(this._outerKeyedState), this._inner.clean(), this._outer.clean()
                    }, t.prototype.update = function(t) {
                        return this._inner.update(t), this
                    }, t.prototype.finish = function(t) {
                        return this._finished ? this._outer.finish(t) : (this._inner.finish(t), this._outer.update(t.subarray(0, this.digestLength)).finish(t), this._finished = !0), this
                    }, t.prototype.digest = function() {
                        var t = new Uint8Array(this.digestLength);
                        return this.finish(t), t
                    }, t.prototype.saveState = function() {
                        if (!n.isSerializableHash(this._inner)) throw Error("hmac: can't saveState() because hash doesn't implement it");
                        return this._inner.saveState()
                    }, t.prototype.restoreState = function(t) {
                        if (!n.isSerializableHash(this._inner) || !n.isSerializableHash(this._outer)) throw Error("hmac: can't restoreState() because hash doesn't implement it");
                        return this._inner.restoreState(t), this._outer.restoreState(this._outerKeyedState), this._finished = !1, this
                    }, t.prototype.cleanSavedState = function(t) {
                        if (!n.isSerializableHash(this._inner)) throw Error("hmac: can't cleanSavedState() because hash doesn't implement it");
                        this._inner.cleanSavedState(t)
                    }, t
                }();

            function a(t, e, r) {
                var n = new s(t, e);
                n.update(r);
                var i = n.digest();
                return n.clean(), i
            }
            e.HMAC = s, e.hmac = a, e.equal = i.equal
        },
        34550: function(t, e) {
            "use strict";

            function r(t, e) {
                var r = t >>> 16 & 65535,
                    n = 65535 & t,
                    i = e >>> 16 & 65535,
                    o = 65535 & e;
                return n * o + (r * o + n * i << 16 >>> 0) | 0
            }

            function n(t, e) {
                return t + e | 0
            }

            function i(t, e) {
                return t - e | 0
            }

            function o(t, e) {
                return t << e | t >>> 32 - e
            }

            function s(t, e) {
                return t << 32 - e | t >>> e
            }

            function a(t) {
                return "number" == typeof t && isFinite(t) && Math.floor(t) === t
            }
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.mul = Math.imul || r, e.add = n, e.sub = i, e.rotl = o, e.rotr = s, e.isInteger = Number.isInteger || a, e.MAX_SAFE_INTEGER = 9007199254740991, e.isSafeInteger = function(t) {
                return e.isInteger(t) && t >= -e.MAX_SAFE_INTEGER && t <= e.MAX_SAFE_INTEGER
            }
        },
        50081: function(t, e, r) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var n = r(35905),
                i = r(87427);
            e.DIGEST_LENGTH = 16;
            var o = function() {
                function t(t) {
                    this.digestLength = e.DIGEST_LENGTH, this._buffer = new Uint8Array(16), this._r = new Uint16Array(10), this._h = new Uint16Array(10), this._pad = new Uint16Array(8), this._leftover = 0, this._fin = 0, this._finished = !1;
                    var r = t[0] | t[1] << 8;
                    this._r[0] = 8191 & r;
                    var n = t[2] | t[3] << 8;
                    this._r[1] = (r >>> 13 | n << 3) & 8191;
                    var i = t[4] | t[5] << 8;
                    this._r[2] = (n >>> 10 | i << 6) & 7939;
                    var o = t[6] | t[7] << 8;
                    this._r[3] = (i >>> 7 | o << 9) & 8191;
                    var s = t[8] | t[9] << 8;
                    this._r[4] = (o >>> 4 | s << 12) & 255, this._r[5] = s >>> 1 & 8190;
                    var a = t[10] | t[11] << 8;
                    this._r[6] = (s >>> 14 | a << 2) & 8191;
                    var u = t[12] | t[13] << 8;
                    this._r[7] = (a >>> 11 | u << 5) & 8065;
                    var c = t[14] | t[15] << 8;
                    this._r[8] = (u >>> 8 | c << 8) & 8191, this._r[9] = c >>> 5 & 127, this._pad[0] = t[16] | t[17] << 8, this._pad[1] = t[18] | t[19] << 8, this._pad[2] = t[20] | t[21] << 8, this._pad[3] = t[22] | t[23] << 8, this._pad[4] = t[24] | t[25] << 8, this._pad[5] = t[26] | t[27] << 8, this._pad[6] = t[28] | t[29] << 8, this._pad[7] = t[30] | t[31] << 8
                }
                return t.prototype._blocks = function(t, e, r) {
                    for (var n = this._fin ? 0 : 2048, i = this._h[0], o = this._h[1], s = this._h[2], a = this._h[3], u = this._h[4], c = this._h[5], l = this._h[6], h = this._h[7], f = this._h[8], d = this._h[9], p = this._r[0], y = this._r[1], m = this._r[2], b = this._r[3], g = this._r[4], w = this._r[5], v = this._r[6], E = this._r[7], x = this._r[8], S = this._r[9]; r >= 16;) {
                        var O, C = t[e + 0] | t[e + 1] << 8;
                        i += 8191 & C;
                        var _ = t[e + 2] | t[e + 3] << 8;
                        o += (C >>> 13 | _ << 3) & 8191;
                        var A = t[e + 4] | t[e + 5] << 8;
                        s += (_ >>> 10 | A << 6) & 8191;
                        var P = t[e + 6] | t[e + 7] << 8;
                        a += (A >>> 7 | P << 9) & 8191;
                        var k = t[e + 8] | t[e + 9] << 8;
                        u += (P >>> 4 | k << 12) & 8191, c += k >>> 1 & 8191;
                        var D = t[e + 10] | t[e + 11] << 8;
                        l += (k >>> 14 | D << 2) & 8191;
                        var I = t[e + 12] | t[e + 13] << 8;
                        h += (D >>> 11 | I << 5) & 8191;
                        var M = t[e + 14] | t[e + 15] << 8;
                        f += (I >>> 8 | M << 8) & 8191, d += M >>> 5 | n;
                        var B = 0;
                        B = (O = 0 + i * p + 5 * S * o + 5 * x * s + 5 * E * a + 5 * v * u) >>> 13, O &= 8191, O += 5 * w * c + 5 * g * l + 5 * b * h + 5 * m * f + 5 * y * d, B += O >>> 13, O &= 8191;
                        var R = B;
                        R += i * y + o * p + 5 * S * s + 5 * x * a + 5 * E * u, B = R >>> 13, R &= 8191, R += 5 * v * c + 5 * w * l + 5 * g * h + 5 * b * f + 5 * m * d, B += R >>> 13, R &= 8191;
                        var T = B;
                        T += i * m + o * y + s * p + 5 * S * a + 5 * x * u, B = T >>> 13, T &= 8191, T += 5 * E * c + 5 * v * l + 5 * w * h + 5 * g * f + 5 * b * d, B += T >>> 13, T &= 8191;
                        var j = B;
                        j += i * b + o * m + s * y + a * p + 5 * S * u, B = j >>> 13, j &= 8191, j += 5 * x * c + 5 * E * l + 5 * v * h + 5 * w * f + 5 * g * d, B += j >>> 13, j &= 8191;
                        var U = B;
                        U += i * g + o * b + s * m + a * y + u * p, B = U >>> 13, U &= 8191, U += 5 * S * c + 5 * x * l + 5 * E * h + 5 * v * f + 5 * w * d, B += U >>> 13, U &= 8191;
                        var N = B;
                        N += i * w + o * g + s * b + a * m + u * y, B = N >>> 13, N &= 8191, N += c * p + 5 * S * l + 5 * x * h + 5 * E * f + 5 * v * d, B += N >>> 13, N &= 8191;
                        var F = B;
                        F += i * v + o * w + s * g + a * b + u * m, B = F >>> 13, F &= 8191, F += c * y + l * p + 5 * S * h + 5 * x * f + 5 * E * d, B += F >>> 13, F &= 8191;
                        var L = B;
                        L += i * E + o * v + s * w + a * g + u * b, B = L >>> 13, L &= 8191, L += c * m + l * y + h * p + 5 * S * f + 5 * x * d, B += L >>> 13, L &= 8191;
                        var q = B;
                        q += i * x + o * E + s * v + a * w + u * g, B = q >>> 13, q &= 8191, q += c * b + l * m + h * y + f * p + 5 * S * d, B += q >>> 13, q &= 8191;
                        var $ = B;
                        $ += i * S + o * x + s * E + a * v + u * w, B = $ >>> 13, $ &= 8191, $ += c * g + l * b + h * m + f * y + d * p, B += $ >>> 13, $ &= 8191, O = 8191 & (B = (B = (B << 2) + B | 0) + O | 0), B >>>= 13, R += B, i = O, o = R, s = T, a = j, u = U, c = N, l = F, h = L, f = q, d = $, e += 16, r -= 16
                    }
                    this._h[0] = i, this._h[1] = o, this._h[2] = s, this._h[3] = a, this._h[4] = u, this._h[5] = c, this._h[6] = l, this._h[7] = h, this._h[8] = f, this._h[9] = d
                }, t.prototype.finish = function(t, e) {
                    void 0 === e && (e = 0);
                    var r, n, i, o, s = new Uint16Array(10);
                    if (this._leftover) {
                        for (o = this._leftover, this._buffer[o++] = 1; o < 16; o++) this._buffer[o] = 0;
                        this._fin = 1, this._blocks(this._buffer, 0, 16)
                    }
                    for (r = this._h[1] >>> 13, this._h[1] &= 8191, o = 2; o < 10; o++) this._h[o] += r, r = this._h[o] >>> 13, this._h[o] &= 8191;
                    for (this._h[0] += 5 * r, r = this._h[0] >>> 13, this._h[0] &= 8191, this._h[1] += r, r = this._h[1] >>> 13, this._h[1] &= 8191, this._h[2] += r, s[0] = this._h[0] + 5, r = s[0] >>> 13, s[0] &= 8191, o = 1; o < 10; o++) s[o] = this._h[o] + r, r = s[o] >>> 13, s[o] &= 8191;
                    for (s[9] -= 8192, n = (1 ^ r) - 1, o = 0; o < 10; o++) s[o] &= n;
                    for (o = 0, n = ~n; o < 10; o++) this._h[o] = this._h[o] & n | s[o];
                    for (o = 1, this._h[0] = (this._h[0] | this._h[1] << 13) & 65535, this._h[1] = (this._h[1] >>> 3 | this._h[2] << 10) & 65535, this._h[2] = (this._h[2] >>> 6 | this._h[3] << 7) & 65535, this._h[3] = (this._h[3] >>> 9 | this._h[4] << 4) & 65535, this._h[4] = (this._h[4] >>> 12 | this._h[5] << 1 | this._h[6] << 14) & 65535, this._h[5] = (this._h[6] >>> 2 | this._h[7] << 11) & 65535, this._h[6] = (this._h[7] >>> 5 | this._h[8] << 8) & 65535, this._h[7] = (this._h[8] >>> 8 | this._h[9] << 5) & 65535, i = this._h[0] + this._pad[0], this._h[0] = 65535 & i; o < 8; o++) i = (this._h[o] + this._pad[o] | 0) + (i >>> 16) | 0, this._h[o] = 65535 & i;
                    return t[e + 0] = this._h[0] >>> 0, t[e + 1] = this._h[0] >>> 8, t[e + 2] = this._h[1] >>> 0, t[e + 3] = this._h[1] >>> 8, t[e + 4] = this._h[2] >>> 0, t[e + 5] = this._h[2] >>> 8, t[e + 6] = this._h[3] >>> 0, t[e + 7] = this._h[3] >>> 8, t[e + 8] = this._h[4] >>> 0, t[e + 9] = this._h[4] >>> 8, t[e + 10] = this._h[5] >>> 0, t[e + 11] = this._h[5] >>> 8, t[e + 12] = this._h[6] >>> 0, t[e + 13] = this._h[6] >>> 8, t[e + 14] = this._h[7] >>> 0, t[e + 15] = this._h[7] >>> 8, this._finished = !0, this
                }, t.prototype.update = function(t) {
                    var e, r = 0,
                        n = t.length;
                    if (this._leftover) {
                        (e = 16 - this._leftover) > n && (e = n);
                        for (var i = 0; i < e; i++) this._buffer[this._leftover + i] = t[r + i];
                        if (n -= e, r += e, this._leftover += e, this._leftover < 16) return this;
                        this._blocks(this._buffer, 0, 16), this._leftover = 0
                    }
                    if (n >= 16 && (e = n - n % 16, this._blocks(t, r, e), r += e, n -= e), n) {
                        for (var i = 0; i < n; i++) this._buffer[this._leftover + i] = t[r + i];
                        this._leftover += n
                    }
                    return this
                }, t.prototype.digest = function() {
                    if (this._finished) throw Error("Poly1305 was finished");
                    var t = new Uint8Array(16);
                    return this.finish(t), t
                }, t.prototype.clean = function() {
                    return i.wipe(this._buffer), i.wipe(this._r), i.wipe(this._h), i.wipe(this._pad), this._leftover = 0, this._fin = 0, this._finished = !0, this
                }, t
            }();

            function s(t, e) {
                var r = new o(t);
                r.update(e);
                var n = r.digest();
                return r.clean(), n
            }

            function a(t, r) {
                return t.length === e.DIGEST_LENGTH && r.length === e.DIGEST_LENGTH && n.equal(t, r)
            }
            e.Poly1305 = o, e.oneTimeAuth = s, e.equal = a
        },
        78539: function(t, e, r) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.randomStringForEntropy = e.randomString = e.randomUint32 = e.randomBytes = e.defaultRandomSource = void 0;
            let n = r(25649),
                i = r(1356),
                o = r(87427);

            function s(t, r = e.defaultRandomSource) {
                return r.randomBytes(t)
            }

            function a(t = e.defaultRandomSource) {
                let r = s(4, t),
                    n = (0, i.readUint32LE)(r);
                return (0, o.wipe)(r), n
            }
            e.defaultRandomSource = new n.SystemRandomSource, e.randomBytes = s, e.randomUint32 = a;
            let u = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";

            function c(t, r = u, n = e.defaultRandomSource) {
                if (r.length < 2) throw Error("randomString charset is too short");
                if (r.length > 256) throw Error("randomString charset is too long");
                let i = "",
                    a = r.length,
                    c = 256 - 256 % a;
                for (; t > 0;) {
                    let e = s(Math.ceil(256 * t / c), n);
                    for (let n = 0; n < e.length && t > 0; n++) {
                        let o = e[n];
                        o < c && (i += r.charAt(o % a), t--)
                    }(0, o.wipe)(e)
                }
                return i
            }

            function l(t, r = u, n = e.defaultRandomSource) {
                return c(Math.ceil(t / (Math.log(r.length) / Math.LN2)), r, n)
            }
            e.randomString = c, e.randomStringForEntropy = l
        },
        24550: function(t, e) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.BrowserRandomSource = void 0;
            let r = 65536;
            class n {
                constructor() {
                    this.isAvailable = !1, this.isInstantiated = !1;
                    let t = "undefined" != typeof self ? self.crypto || self.msCrypto : null;
                    t && void 0 !== t.getRandomValues && (this._crypto = t, this.isAvailable = !0, this.isInstantiated = !0)
                }
                randomBytes(t) {
                    if (!this.isAvailable || !this._crypto) throw Error("Browser random byte generator is not available.");
                    let e = new Uint8Array(t);
                    for (let t = 0; t < e.length; t += r) this._crypto.getRandomValues(e.subarray(t, t + Math.min(e.length - t, r)));
                    return e
                }
            }
            e.BrowserRandomSource = n
        },
        79849: function(t, e, r) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.NodeRandomSource = void 0;
            let n = r(87427);
            class i {
                constructor() {
                    this.isAvailable = !1, this.isInstantiated = !1; {
                        let t = r(35883);
                        t && t.randomBytes && (this._crypto = t, this.isAvailable = !0, this.isInstantiated = !0)
                    }
                }
                randomBytes(t) {
                    if (!this.isAvailable || !this._crypto) throw Error("Node.js random byte generator is not available.");
                    let e = this._crypto.randomBytes(t);
                    if (e.length !== t) throw Error("NodeRandomSource: got fewer bytes than requested");
                    let r = new Uint8Array(t);
                    for (let t = 0; t < r.length; t++) r[t] = e[t];
                    return (0, n.wipe)(e), r
                }
            }
            e.NodeRandomSource = i
        },
        25649: function(t, e, r) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.SystemRandomSource = void 0;
            let n = r(24550),
                i = r(79849);
            class o {
                constructor() {
                    if (this.isAvailable = !1, this.name = "", this._source = new n.BrowserRandomSource, this._source.isAvailable) {
                        this.isAvailable = !0, this.name = "Browser";
                        return
                    }
                    if (this._source = new i.NodeRandomSource, this._source.isAvailable) {
                        this.isAvailable = !0, this.name = "Node";
                        return
                    }
                }
                randomBytes(t) {
                    if (!this.isAvailable) throw Error("System random byte generator is not available.");
                    return this._source.randomBytes(t)
                }
            }
            e.SystemRandomSource = o
        },
        43094: function(t, e, r) {
            "use strict";
            n = {
                value: !0
            };
            var n, i = r(1356),
                o = r(87427);
            e.k = 32, e.cn = 64;
            var s = function() {
                function t() {
                    this.digestLength = e.k, this.blockSize = e.cn, this._state = new Int32Array(8), this._temp = new Int32Array(64), this._buffer = new Uint8Array(128), this._bufferLength = 0, this._bytesHashed = 0, this._finished = !1, this.reset()
                }
                return t.prototype._initState = function() {
                    this._state[0] = 1779033703, this._state[1] = 3144134277, this._state[2] = 1013904242, this._state[3] = 2773480762, this._state[4] = 1359893119, this._state[5] = 2600822924, this._state[6] = 528734635, this._state[7] = 1541459225
                }, t.prototype.reset = function() {
                    return this._initState(), this._bufferLength = 0, this._bytesHashed = 0, this._finished = !1, this
                }, t.prototype.clean = function() {
                    o.wipe(this._buffer), o.wipe(this._temp), this.reset()
                }, t.prototype.update = function(t, e) {
                    if (void 0 === e && (e = t.length), this._finished) throw Error("SHA256: can't update because hash was finished.");
                    var r = 0;
                    if (this._bytesHashed += e, this._bufferLength > 0) {
                        for (; this._bufferLength < this.blockSize && e > 0;) this._buffer[this._bufferLength++] = t[r++], e--;
                        this._bufferLength === this.blockSize && (u(this._temp, this._state, this._buffer, 0, this.blockSize), this._bufferLength = 0)
                    }
                    for (e >= this.blockSize && (r = u(this._temp, this._state, t, r, e), e %= this.blockSize); e > 0;) this._buffer[this._bufferLength++] = t[r++], e--;
                    return this
                }, t.prototype.finish = function(t) {
                    if (!this._finished) {
                        var e = this._bytesHashed,
                            r = this._bufferLength,
                            n = e / 536870912 | 0,
                            o = e << 3,
                            s = e % 64 < 56 ? 64 : 128;
                        this._buffer[r] = 128;
                        for (var a = r + 1; a < s - 8; a++) this._buffer[a] = 0;
                        i.writeUint32BE(n, this._buffer, s - 8), i.writeUint32BE(o, this._buffer, s - 4), u(this._temp, this._state, this._buffer, 0, s), this._finished = !0
                    }
                    for (var a = 0; a < this.digestLength / 4; a++) i.writeUint32BE(this._state[a], t, 4 * a);
                    return this
                }, t.prototype.digest = function() {
                    var t = new Uint8Array(this.digestLength);
                    return this.finish(t), t
                }, t.prototype.saveState = function() {
                    if (this._finished) throw Error("SHA256: cannot save finished state");
                    return {
                        state: new Int32Array(this._state),
                        buffer: this._bufferLength > 0 ? new Uint8Array(this._buffer) : void 0,
                        bufferLength: this._bufferLength,
                        bytesHashed: this._bytesHashed
                    }
                }, t.prototype.restoreState = function(t) {
                    return this._state.set(t.state), this._bufferLength = t.bufferLength, t.buffer && this._buffer.set(t.buffer), this._bytesHashed = t.bytesHashed, this._finished = !1, this
                }, t.prototype.cleanSavedState = function(t) {
                    o.wipe(t.state), t.buffer && o.wipe(t.buffer), t.bufferLength = 0, t.bytesHashed = 0
                }, t
            }();
            e.mE = s;
            var a = new Int32Array([1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298]);

            function u(t, e, r, n, o) {
                for (; o >= 64;) {
                    for (var s = e[0], u = e[1], c = e[2], l = e[3], h = e[4], f = e[5], d = e[6], p = e[7], y = 0; y < 16; y++) {
                        var m = n + 4 * y;
                        t[y] = i.readUint32BE(r, m)
                    }
                    for (var y = 16; y < 64; y++) {
                        var b = t[y - 2],
                            g = (b >>> 17 | b << 15) ^ (b >>> 19 | b << 13) ^ b >>> 10,
                            w = ((b = t[y - 15]) >>> 7 | b << 25) ^ (b >>> 18 | b << 14) ^ b >>> 3;
                        t[y] = (g + t[y - 7] | 0) + (w + t[y - 16] | 0)
                    }
                    for (var y = 0; y < 64; y++) {
                        var g = (((h >>> 6 | h << 26) ^ (h >>> 11 | h << 21) ^ (h >>> 25 | h << 7)) + (h & f ^ ~h & d) | 0) + (p + (a[y] + t[y] | 0) | 0) | 0,
                            w = ((s >>> 2 | s << 30) ^ (s >>> 13 | s << 19) ^ (s >>> 22 | s << 10)) + (s & u ^ s & c ^ u & c) | 0;
                        p = d, d = f, f = h, h = l + g | 0, l = c, c = u, u = s, s = g + w | 0
                    }
                    e[0] += s, e[1] += u, e[2] += c, e[3] += l, e[4] += h, e[5] += f, e[6] += d, e[7] += p, n += 64, o -= 64
                }
                return n
            }

            function c(t) {
                var e = new s;
                e.update(t);
                var r = e.digest();
                return e.clean(), r
            }
            e.vp = c
        },
        87427: function(t, e) {
            "use strict";

            function r(t) {
                for (var e = 0; e < t.length; e++) t[e] = 0;
                return t
            }
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.wipe = r
        },
        11153: function(t, e, r) {
            "use strict";
            var n;
            n = {
                value: !0
            }, e.gi = e.Au = n = n = n = n = e.KS = e.kz = void 0;
            let i = r(78539),
                o = r(87427);

            function s(t) {
                let e = new Float64Array(16);
                if (t)
                    for (let r = 0; r < t.length; r++) e[r] = t[r];
                return e
            }
            e.kz = 32, e.KS = 32, n = 32;
            let a = new Uint8Array(32);
            a[0] = 9;
            let u = s([56129, 1]);

            function c(t) {
                let e = 1;
                for (let r = 0; r < 16; r++) {
                    let n = t[r] + e + 65535;
                    e = Math.floor(n / 65536), t[r] = n - 65536 * e
                }
                t[0] += e - 1 + 37 * (e - 1)
            }

            function l(t, e, r) {
                let n = ~(r - 1);
                for (let r = 0; r < 16; r++) {
                    let i = n & (t[r] ^ e[r]);
                    t[r] ^= i, e[r] ^= i
                }
            }

            function h(t, e) {
                let r = s(),
                    n = s();
                for (let t = 0; t < 16; t++) n[t] = e[t];
                c(n), c(n), c(n);
                for (let t = 0; t < 2; t++) {
                    r[0] = n[0] - 65517;
                    for (let t = 1; t < 15; t++) r[t] = n[t] - 65535 - (r[t - 1] >> 16 & 1), r[t - 1] &= 65535;
                    r[15] = n[15] - 32767 - (r[14] >> 16 & 1);
                    let t = r[15] >> 16 & 1;
                    r[14] &= 65535, l(n, r, 1 - t)
                }
                for (let e = 0; e < 16; e++) t[2 * e] = 255 & n[e], t[2 * e + 1] = n[e] >> 8
            }

            function f(t, e) {
                for (let r = 0; r < 16; r++) t[r] = e[2 * r] + (e[2 * r + 1] << 8);
                t[15] &= 32767
            }

            function d(t, e, r) {
                for (let n = 0; n < 16; n++) t[n] = e[n] + r[n]
            }

            function p(t, e, r) {
                for (let n = 0; n < 16; n++) t[n] = e[n] - r[n]
            }

            function y(t, e, r) {
                let n, i, o = 0,
                    s = 0,
                    a = 0,
                    u = 0,
                    c = 0,
                    l = 0,
                    h = 0,
                    f = 0,
                    d = 0,
                    p = 0,
                    y = 0,
                    m = 0,
                    b = 0,
                    g = 0,
                    w = 0,
                    v = 0,
                    E = 0,
                    x = 0,
                    S = 0,
                    O = 0,
                    C = 0,
                    _ = 0,
                    A = 0,
                    P = 0,
                    k = 0,
                    D = 0,
                    I = 0,
                    M = 0,
                    B = 0,
                    R = 0,
                    T = 0,
                    j = r[0],
                    U = r[1],
                    N = r[2],
                    F = r[3],
                    L = r[4],
                    q = r[5],
                    $ = r[6],
                    W = r[7],
                    G = r[8],
                    z = r[9],
                    H = r[10],
                    K = r[11],
                    V = r[12],
                    Q = r[13],
                    Z = r[14],
                    Y = r[15];
                o += (n = e[0]) * j, s += n * U, a += n * N, u += n * F, c += n * L, l += n * q, h += n * $, f += n * W, d += n * G, p += n * z, y += n * H, m += n * K, b += n * V, g += n * Q, w += n * Z, v += n * Y, s += (n = e[1]) * j, a += n * U, u += n * N, c += n * F, l += n * L, h += n * q, f += n * $, d += n * W, p += n * G, y += n * z, m += n * H, b += n * K, g += n * V, w += n * Q, v += n * Z, E += n * Y, a += (n = e[2]) * j, u += n * U, c += n * N, l += n * F, h += n * L, f += n * q, d += n * $, p += n * W, y += n * G, m += n * z, b += n * H, g += n * K, w += n * V, v += n * Q, E += n * Z, x += n * Y, u += (n = e[3]) * j, c += n * U, l += n * N, h += n * F, f += n * L, d += n * q, p += n * $, y += n * W, m += n * G, b += n * z, g += n * H, w += n * K, v += n * V, E += n * Q, x += n * Z, S += n * Y, c += (n = e[4]) * j, l += n * U, h += n * N, f += n * F, d += n * L, p += n * q, y += n * $, m += n * W, b += n * G, g += n * z, w += n * H, v += n * K, E += n * V, x += n * Q, S += n * Z, O += n * Y, l += (n = e[5]) * j, h += n * U, f += n * N, d += n * F, p += n * L, y += n * q, m += n * $, b += n * W, g += n * G, w += n * z, v += n * H, E += n * K, x += n * V, S += n * Q, O += n * Z, C += n * Y, h += (n = e[6]) * j, f += n * U, d += n * N, p += n * F, y += n * L, m += n * q, b += n * $, g += n * W, w += n * G, v += n * z, E += n * H, x += n * K, S += n * V, O += n * Q, C += n * Z, _ += n * Y, f += (n = e[7]) * j, d += n * U, p += n * N, y += n * F, m += n * L, b += n * q, g += n * $, w += n * W, v += n * G, E += n * z, x += n * H, S += n * K, O += n * V, C += n * Q, _ += n * Z, A += n * Y, d += (n = e[8]) * j, p += n * U, y += n * N, m += n * F, b += n * L, g += n * q, w += n * $, v += n * W, E += n * G, x += n * z, S += n * H, O += n * K, C += n * V, _ += n * Q, A += n * Z, P += n * Y, p += (n = e[9]) * j, y += n * U, m += n * N, b += n * F, g += n * L, w += n * q, v += n * $, E += n * W, x += n * G, S += n * z, O += n * H, C += n * K, _ += n * V, A += n * Q, P += n * Z, k += n * Y, y += (n = e[10]) * j, m += n * U, b += n * N, g += n * F, w += n * L, v += n * q, E += n * $, x += n * W, S += n * G, O += n * z, C += n * H, _ += n * K, A += n * V, P += n * Q, k += n * Z, D += n * Y, m += (n = e[11]) * j, b += n * U, g += n * N, w += n * F, v += n * L, E += n * q, x += n * $, S += n * W, O += n * G, C += n * z, _ += n * H, A += n * K, P += n * V, k += n * Q, D += n * Z, I += n * Y, b += (n = e[12]) * j, g += n * U, w += n * N, v += n * F, E += n * L, x += n * q, S += n * $, O += n * W, C += n * G, _ += n * z, A += n * H, P += n * K, k += n * V, D += n * Q, I += n * Z, M += n * Y, g += (n = e[13]) * j, w += n * U, v += n * N, E += n * F, x += n * L, S += n * q, O += n * $, C += n * W, _ += n * G, A += n * z, P += n * H, k += n * K, D += n * V, I += n * Q, M += n * Z, B += n * Y, w += (n = e[14]) * j, v += n * U, E += n * N, x += n * F, S += n * L, O += n * q, C += n * $, _ += n * W, A += n * G, P += n * z, k += n * H, D += n * K, I += n * V, M += n * Q, B += n * Z, R += n * Y, v += (n = e[15]) * j, E += n * U, x += n * N, S += n * F, O += n * L, C += n * q, _ += n * $, A += n * W, P += n * G, k += n * z, D += n * H, I += n * K, M += n * V, B += n * Q, R += n * Z, T += n * Y, o += 38 * E, s += 38 * x, a += 38 * S, u += 38 * O, c += 38 * C, l += 38 * _, h += 38 * A, f += 38 * P, d += 38 * k, p += 38 * D, y += 38 * I, m += 38 * M, b += 38 * B, g += 38 * R, w += 38 * T, i = Math.floor((n = o + (i = 1) + 65535) / 65536), o = n - 65536 * i, i = Math.floor((n = s + i + 65535) / 65536), s = n - 65536 * i, i = Math.floor((n = a + i + 65535) / 65536), a = n - 65536 * i, i = Math.floor((n = u + i + 65535) / 65536), u = n - 65536 * i, i = Math.floor((n = c + i + 65535) / 65536), c = n - 65536 * i, i = Math.floor((n = l + i + 65535) / 65536), l = n - 65536 * i, i = Math.floor((n = h + i + 65535) / 65536), h = n - 65536 * i, i = Math.floor((n = f + i + 65535) / 65536), f = n - 65536 * i, i = Math.floor((n = d + i + 65535) / 65536), d = n - 65536 * i, i = Math.floor((n = p + i + 65535) / 65536), p = n - 65536 * i, i = Math.floor((n = y + i + 65535) / 65536), y = n - 65536 * i, i = Math.floor((n = m + i + 65535) / 65536), m = n - 65536 * i, i = Math.floor((n = b + i + 65535) / 65536), b = n - 65536 * i, i = Math.floor((n = g + i + 65535) / 65536), g = n - 65536 * i, i = Math.floor((n = w + i + 65535) / 65536), w = n - 65536 * i, i = Math.floor((n = v + i + 65535) / 65536), v = n - 65536 * i, o += i - 1 + 37 * (i - 1), i = Math.floor((n = o + (i = 1) + 65535) / 65536), o = n - 65536 * i, i = Math.floor((n = s + i + 65535) / 65536), s = n - 65536 * i, i = Math.floor((n = a + i + 65535) / 65536), a = n - 65536 * i, i = Math.floor((n = u + i + 65535) / 65536), u = n - 65536 * i, i = Math.floor((n = c + i + 65535) / 65536), c = n - 65536 * i, i = Math.floor((n = l + i + 65535) / 65536), l = n - 65536 * i, i = Math.floor((n = h + i + 65535) / 65536), h = n - 65536 * i, i = Math.floor((n = f + i + 65535) / 65536), f = n - 65536 * i, i = Math.floor((n = d + i + 65535) / 65536), d = n - 65536 * i, i = Math.floor((n = p + i + 65535) / 65536), p = n - 65536 * i, i = Math.floor((n = y + i + 65535) / 65536), y = n - 65536 * i, i = Math.floor((n = m + i + 65535) / 65536), m = n - 65536 * i, i = Math.floor((n = b + i + 65535) / 65536), b = n - 65536 * i, i = Math.floor((n = g + i + 65535) / 65536), g = n - 65536 * i, i = Math.floor((n = w + i + 65535) / 65536), w = n - 65536 * i, i = Math.floor((n = v + i + 65535) / 65536), v = n - 65536 * i, o += i - 1 + 37 * (i - 1), t[0] = o, t[1] = s, t[2] = a, t[3] = u, t[4] = c, t[5] = l, t[6] = h, t[7] = f, t[8] = d, t[9] = p, t[10] = y, t[11] = m, t[12] = b, t[13] = g, t[14] = w, t[15] = v
            }

            function m(t, e) {
                y(t, e, e)
            }

            function b(t, e) {
                let r = s();
                for (let t = 0; t < 16; t++) r[t] = e[t];
                for (let t = 253; t >= 0; t--) m(r, r), 2 !== t && 4 !== t && y(r, r, e);
                for (let e = 0; e < 16; e++) t[e] = r[e]
            }

            function g(t, e) {
                let r = new Uint8Array(32),
                    n = new Float64Array(80),
                    i = s(),
                    o = s(),
                    a = s(),
                    c = s(),
                    g = s(),
                    w = s();
                for (let e = 0; e < 31; e++) r[e] = t[e];
                r[31] = 127 & t[31] | 64, r[0] &= 248, f(n, e);
                for (let t = 0; t < 16; t++) o[t] = n[t];
                i[0] = c[0] = 1;
                for (let t = 254; t >= 0; --t) {
                    let e = r[t >>> 3] >>> (7 & t) & 1;
                    l(i, o, e), l(a, c, e), d(g, i, a), p(i, i, a), d(a, o, c), p(o, o, c), m(c, g), m(w, i), y(i, a, i), y(a, o, g), d(g, i, a), p(i, i, a), m(o, i), p(a, c, w), y(i, a, u), d(i, i, c), y(a, a, i), y(i, c, w), y(c, o, n), m(o, g), l(i, o, e), l(a, c, e)
                }
                for (let t = 0; t < 16; t++) n[t + 16] = i[t], n[t + 32] = a[t], n[t + 48] = o[t], n[t + 64] = c[t];
                let v = n.subarray(32),
                    E = n.subarray(16);
                b(v, v), y(E, E, v);
                let x = new Uint8Array(32);
                return h(x, E), x
            }

            function w(t) {
                return g(t, a)
            }

            function v(t) {
                if (t.length !== e.KS) throw Error(`x25519: seed must be ${e.KS} bytes`);
                let r = new Uint8Array(t);
                return {
                    publicKey: w(r),
                    secretKey: r
                }
            }

            function E(t) {
                let e = (0, i.randomBytes)(32, t),
                    r = v(e);
                return (0, o.wipe)(e), r
            }

            function x(t, r, n = !1) {
                if (t.length !== e.kz) throw Error("X25519: incorrect secret key length");
                if (r.length !== e.kz) throw Error("X25519: incorrect public key length");
                let i = g(t, r);
                if (n) {
                    let t = 0;
                    for (let e = 0; e < i.length; e++) t |= i[e];
                    if (0 === t) throw Error("X25519: invalid shared key")
                }
                return i
            }
            n = g, n = w, n = v, e.Au = E, e.gi = x
        },
        76327: function(t, e, r) {
            "use strict";

            function n(t) {
                var e = t.match(/^var\((.*)\)$/);
                return e ? e[1] : t
            }

            function i(t, e) {
                var r = t;
                for (var n of e) {
                    if (!(n in r)) throw Error("Path ".concat(e.join(" -> "), " does not exist in object"));
                    r = r[n]
                }
                return r
            }

            function o(t, e) {
                var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [],
                    n = {};
                for (var i in t) {
                    var s = t[i],
                        a = [...r, i];
                    "string" == typeof s || "number" == typeof s || null == s ? n[i] = e(s, a) : "object" != typeof s || Array.isArray(s) ? console.warn('Skipping invalid key "'.concat(a.join("."), '". Should be a string, number, null or object. Received: "').concat(Array.isArray(s) ? "Array" : typeof s, '"')) : n[i] = o(s, e, a)
                }
                return n
            }

            function s(t, e) {
                var r = {};
                if ("object" == typeof e) {
                    var s = t;
                    o(e, (t, e) => {
                        null != t && (r[n(i(s, e))] = String(t))
                    })
                } else {
                    var a = t;
                    for (var u in a) {
                        var c = a[u];
                        null != c && (r[n(u)] = c)
                    }
                }
                return Object.defineProperty(r, "toString", {
                    value: function() {
                        return Object.keys(this).map(t => "".concat(t, ":").concat(this[t])).join(";")
                    },
                    writable: !1
                }), r
            }
            r.d(e, {
                L: function() {
                    return s
                }
            })
        },
        11903: function(t, e, r) {
            "use strict";

            function n(t, e) {
                if ("object" != typeof t || null === t) return t;
                var r = t[Symbol.toPrimitive];
                if (void 0 !== r) {
                    var n = r.call(t, e || "default");
                    if ("object" != typeof n) return n;
                    throw TypeError("@@toPrimitive must return a primitive value.")
                }
                return ("string" === e ? String : Number)(t)
            }

            function i(t) {
                var e = n(t, "string");
                return "symbol" == typeof e ? e : String(e)
            }

            function o(t, e, r) {
                return (e = i(e)) in t ? Object.defineProperty(t, e, {
                    value: r,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = r, t
            }

            function s(t, e) {
                var r = Object.keys(t);
                if (Object.getOwnPropertySymbols) {
                    var n = Object.getOwnPropertySymbols(t);
                    e && (n = n.filter(function(e) {
                        return Object.getOwnPropertyDescriptor(t, e).enumerable
                    })), r.push.apply(r, n)
                }
                return r
            }

            function a(t) {
                for (var e = 1; e < arguments.length; e++) {
                    var r = null != arguments[e] ? arguments[e] : {};
                    e % 2 ? s(Object(r), !0).forEach(function(e) {
                        o(t, e, r[e])
                    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : s(Object(r)).forEach(function(e) {
                        Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e))
                    })
                }
                return t
            }
            r.d(e, {
                $: function() {
                    return l
                }
            });
            var u = t => function() {
                    for (var e = arguments.length, r = Array(e), n = 0; n < e; n++) r[n] = arguments[n];
                    var i = Object.assign({}, ...r.map(t => t.styles)),
                        o = Object.keys(i),
                        s = o.filter(t => "mappings" in i[t]);
                    return Object.assign(e => {
                        var r = [],
                            n = {},
                            o = a({}, e),
                            u = !1;
                        for (var c of s) {
                            var l = e[c];
                            if (null != l)
                                for (var h of (u = !0, i[c].mappings)) n[h] = l, null == o[h] && delete o[h]
                        }
                        var f = u ? a(a({}, n), o) : e,
                            d = function() {
                                var t = f[p],
                                    e = i[p];
                                try {
                                    if (e.mappings) return "continue";
                                    if ("string" == typeof t || "number" == typeof t) r.push(e.values[t].defaultClass);
                                    else if (Array.isArray(t))
                                        for (var n = 0; n < t.length; n++) {
                                            var o = t[n];
                                            if (null != o) {
                                                var s = e.responsiveArray[n];
                                                r.push(e.values[o].conditions[s])
                                            }
                                        } else
                                            for (var a in t) {
                                                var u = t[a];
                                                null != u && r.push(e.values[u].conditions[a])
                                            }
                                } catch (t) {
                                    throw t
                                }
                            };
                        for (var p in f)
                            if ("continue" === d()) continue;
                        return t(r.join(" "))
                    }, {
                        properties: new Set(o)
                    })
                },
                c = t => t,
                l = function() {
                    return u(c)(...arguments)
                }
        },
        96945: function(t, e, r) {
            "use strict";
            r.d(e, {
                d: function() {
                    return o
                },
                M: function() {
                    return i
                }
            });
            var n = function(t, e) {
                return Object.defineProperty(t, "__recipe__", {
                    value: e,
                    writable: !1
                }), t
            };

            function i(t) {
                var {
                    conditions: e
                } = t;
                if (!e) throw Error("Styles have no conditions");
                return n(function(t) {
                    if ("string" == typeof t || "number" == typeof t || "boolean" == typeof t) {
                        if (!e.defaultCondition) throw Error("No default condition");
                        return {
                            [e.defaultCondition]: t
                        }
                    }
                    if (Array.isArray(t)) {
                        if (!("responsiveArray" in e)) throw Error("Responsive arrays are not supported");
                        var r = {};
                        for (var n in e.responsiveArray) null != t[n] && (r[e.responsiveArray[n]] = t[n]);
                        return r
                    }
                    return t
                }, {
                    importPath: "@vanilla-extract/sprinkles/createUtils",
                    importName: "createNormalizeValueFn",
                    args: [{
                        conditions: t.conditions
                    }]
                })
            }

            function o(t) {
                var {
                    conditions: e
                } = t;
                if (!e) throw Error("Styles have no conditions");
                var r = i(t);
                return n(function(t, n) {
                    if ("string" == typeof t || "number" == typeof t || "boolean" == typeof t) {
                        if (!e.defaultCondition) throw Error("No default condition");
                        return n(t, e.defaultCondition)
                    }
                    var i = Array.isArray(t) ? r(t) : t,
                        o = {};
                    for (var s in i) null != i[s] && (o[s] = n(i[s], s));
                    return o
                }, {
                    importPath: "@vanilla-extract/sprinkles/createUtils",
                    importName: "createMapValueFn",
                    args: [{
                        conditions: t.conditions
                    }]
                })
            }
        },
        70213: function(t, e, r) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            let n = r(62494);
            n.__exportStar(r(12658), e), n.__exportStar(r(75127), e)
        },
        12658: function(t, e) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.ONE_THOUSAND = e.ONE_HUNDRED = void 0, e.ONE_HUNDRED = 100, e.ONE_THOUSAND = 1e3
        },
        75127: function(t, e) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.ONE_YEAR = e.FOUR_WEEKS = e.THREE_WEEKS = e.TWO_WEEKS = e.ONE_WEEK = e.THIRTY_DAYS = e.SEVEN_DAYS = e.FIVE_DAYS = e.THREE_DAYS = e.ONE_DAY = e.TWENTY_FOUR_HOURS = e.TWELVE_HOURS = e.SIX_HOURS = e.THREE_HOURS = e.ONE_HOUR = e.SIXTY_MINUTES = e.THIRTY_MINUTES = e.TEN_MINUTES = e.FIVE_MINUTES = e.ONE_MINUTE = e.SIXTY_SECONDS = e.THIRTY_SECONDS = e.TEN_SECONDS = e.FIVE_SECONDS = e.ONE_SECOND = void 0, e.ONE_SECOND = 1, e.FIVE_SECONDS = 5, e.TEN_SECONDS = 10, e.THIRTY_SECONDS = 30, e.SIXTY_SECONDS = 60, e.ONE_MINUTE = e.SIXTY_SECONDS, e.FIVE_MINUTES = 5 * e.ONE_MINUTE, e.TEN_MINUTES = 10 * e.ONE_MINUTE, e.THIRTY_MINUTES = 30 * e.ONE_MINUTE, e.SIXTY_MINUTES = 60 * e.ONE_MINUTE, e.ONE_HOUR = e.SIXTY_MINUTES, e.THREE_HOURS = 3 * e.ONE_HOUR, e.SIX_HOURS = 6 * e.ONE_HOUR, e.TWELVE_HOURS = 12 * e.ONE_HOUR, e.TWENTY_FOUR_HOURS = 24 * e.ONE_HOUR, e.ONE_DAY = e.TWENTY_FOUR_HOURS, e.THREE_DAYS = 3 * e.ONE_DAY, e.FIVE_DAYS = 5 * e.ONE_DAY, e.SEVEN_DAYS = 7 * e.ONE_DAY, e.THIRTY_DAYS = 30 * e.ONE_DAY, e.ONE_WEEK = e.SEVEN_DAYS, e.TWO_WEEKS = 2 * e.ONE_WEEK, e.THREE_WEEKS = 3 * e.ONE_WEEK, e.FOUR_WEEKS = 4 * e.ONE_WEEK, e.ONE_YEAR = 365 * e.ONE_DAY
        },
        40537: function(t, e, r) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            let n = r(62494);
            n.__exportStar(r(78627), e), n.__exportStar(r(59854), e), n.__exportStar(r(3205), e), n.__exportStar(r(70213), e)
        },
        3205: function(t, e, r) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), r(62494).__exportStar(r(71146), e)
        },
        71146: function(t, e) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.IWatch = void 0;
            class r {}
            e.IWatch = r
        },
        68353: function(t, e, r) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.fromMiliseconds = e.toMiliseconds = void 0;
            let n = r(70213);

            function i(t) {
                return t * n.ONE_THOUSAND
            }

            function o(t) {
                return Math.floor(t / n.ONE_THOUSAND)
            }
            e.toMiliseconds = i, e.fromMiliseconds = o
        },
        86029: function(t, e) {
            "use strict";

            function r(t) {
                return new Promise(e => {
                    setTimeout(() => {
                        e(!0)
                    }, t)
                })
            }
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.delay = void 0, e.delay = r
        },
        78627: function(t, e, r) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            let n = r(62494);
            n.__exportStar(r(86029), e), n.__exportStar(r(68353), e)
        },
        59854: function(t, e) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.Watch = void 0;
            class r {
                constructor() {
                    this.timestamps = new Map
                }
                start(t) {
                    if (this.timestamps.has(t)) throw Error(`Watch already started for label: ${t}`);
                    this.timestamps.set(t, {
                        started: Date.now()
                    })
                }
                stop(t) {
                    let e = this.get(t);
                    if (void 0 !== e.elapsed) throw Error(`Watch already stopped for label: ${t}`);
                    let r = Date.now() - e.started;
                    this.timestamps.set(t, {
                        started: e.started,
                        elapsed: r
                    })
                }
                get(t) {
                    let e = this.timestamps.get(t);
                    if (void 0 === e) throw Error(`No timestamp found for label: ${t}`);
                    return e
                }
                elapsed(t) {
                    let e = this.get(t);
                    return e.elapsed || Date.now() - e.started
                }
            }
            e.Watch = r, e.default = r
        },
        62494: function(t, e, r) {
            "use strict";
            r.r(e), r.d(e, {
                __assign: function() {
                    return o
                },
                __asyncDelegator: function() {
                    return v
                },
                __asyncGenerator: function() {
                    return w
                },
                __asyncValues: function() {
                    return E
                },
                __await: function() {
                    return g
                },
                __awaiter: function() {
                    return l
                },
                __classPrivateFieldGet: function() {
                    return C
                },
                __classPrivateFieldSet: function() {
                    return _
                },
                __createBinding: function() {
                    return f
                },
                __decorate: function() {
                    return a
                },
                __exportStar: function() {
                    return d
                },
                __extends: function() {
                    return i
                },
                __generator: function() {
                    return h
                },
                __importDefault: function() {
                    return O
                },
                __importStar: function() {
                    return S
                },
                __makeTemplateObject: function() {
                    return x
                },
                __metadata: function() {
                    return c
                },
                __param: function() {
                    return u
                },
                __read: function() {
                    return y
                },
                __rest: function() {
                    return s
                },
                __spread: function() {
                    return m
                },
                __spreadArrays: function() {
                    return b
                },
                __values: function() {
                    return p
                }
            });
            /*! *****************************************************************************
            Copyright (c) Microsoft Corporation.

            Permission to use, copy, modify, and/or distribute this software for any
            purpose with or without fee is hereby granted.

            THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
            REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
            AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
            INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
            LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
            OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
            PERFORMANCE OF THIS SOFTWARE.
            ***************************************************************************** */
            var n = function(t, e) {
                return (n = Object.setPrototypeOf || ({
                    __proto__: []
                }) instanceof Array && function(t, e) {
                    t.__proto__ = e
                } || function(t, e) {
                    for (var r in e) e.hasOwnProperty(r) && (t[r] = e[r])
                })(t, e)
            };

            function i(t, e) {
                function r() {
                    this.constructor = t
                }
                n(t, e), t.prototype = null === e ? Object.create(e) : (r.prototype = e.prototype, new r)
            }
            var o = function() {
                return (o = Object.assign || function(t) {
                    for (var e, r = 1, n = arguments.length; r < n; r++)
                        for (var i in e = arguments[r]) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
                    return t
                }).apply(this, arguments)
            };

            function s(t, e) {
                var r = {};
                for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && 0 > e.indexOf(n) && (r[n] = t[n]);
                if (null != t && "function" == typeof Object.getOwnPropertySymbols)
                    for (var i = 0, n = Object.getOwnPropertySymbols(t); i < n.length; i++) 0 > e.indexOf(n[i]) && Object.prototype.propertyIsEnumerable.call(t, n[i]) && (r[n[i]] = t[n[i]]);
                return r
            }

            function a(t, e, r, n) {
                var i, o = arguments.length,
                    s = o < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, r) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(t, e, r, n);
                else
                    for (var a = t.length - 1; a >= 0; a--)(i = t[a]) && (s = (o < 3 ? i(s) : o > 3 ? i(e, r, s) : i(e, r)) || s);
                return o > 3 && s && Object.defineProperty(e, r, s), s
            }

            function u(t, e) {
                return function(r, n) {
                    e(r, n, t)
                }
            }

            function c(t, e) {
                if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(t, e)
            }

            function l(t, e, r, n) {
                function i(t) {
                    return t instanceof r ? t : new r(function(e) {
                        e(t)
                    })
                }
                return new(r || (r = Promise))(function(r, o) {
                    function s(t) {
                        try {
                            u(n.next(t))
                        } catch (t) {
                            o(t)
                        }
                    }

                    function a(t) {
                        try {
                            u(n.throw(t))
                        } catch (t) {
                            o(t)
                        }
                    }

                    function u(t) {
                        t.done ? r(t.value) : i(t.value).then(s, a)
                    }
                    u((n = n.apply(t, e || [])).next())
                })
            }

            function h(t, e) {
                var r, n, i, o, s = {
                    label: 0,
                    sent: function() {
                        if (1 & i[0]) throw i[1];
                        return i[1]
                    },
                    trys: [],
                    ops: []
                };
                return o = {
                    next: a(0),
                    throw: a(1),
                    return: a(2)
                }, "function" == typeof Symbol && (o[Symbol.iterator] = function() {
                    return this
                }), o;

                function a(t) {
                    return function(e) {
                        return u([t, e])
                    }
                }

                function u(o) {
                    if (r) throw TypeError("Generator is already executing.");
                    for (; s;) try {
                        if (r = 1, n && (i = 2 & o[0] ? n.return : o[0] ? n.throw || ((i = n.return) && i.call(n), 0) : n.next) && !(i = i.call(n, o[1])).done) return i;
                        switch (n = 0, i && (o = [2 & o[0], i.value]), o[0]) {
                            case 0:
                            case 1:
                                i = o;
                                break;
                            case 4:
                                return s.label++, {
                                    value: o[1],
                                    done: !1
                                };
                            case 5:
                                s.label++, n = o[1], o = [0];
                                continue;
                            case 7:
                                o = s.ops.pop(), s.trys.pop();
                                continue;
                            default:
                                if (!(i = (i = s.trys).length > 0 && i[i.length - 1]) && (6 === o[0] || 2 === o[0])) {
                                    s = 0;
                                    continue
                                }
                                if (3 === o[0] && (!i || o[1] > i[0] && o[1] < i[3])) {
                                    s.label = o[1];
                                    break
                                }
                                if (6 === o[0] && s.label < i[1]) {
                                    s.label = i[1], i = o;
                                    break
                                }
                                if (i && s.label < i[2]) {
                                    s.label = i[2], s.ops.push(o);
                                    break
                                }
                                i[2] && s.ops.pop(), s.trys.pop();
                                continue
                        }
                        o = e.call(t, s)
                    } catch (t) {
                        o = [6, t], n = 0
                    } finally {
                        r = i = 0
                    }
                    if (5 & o[0]) throw o[1];
                    return {
                        value: o[0] ? o[1] : void 0,
                        done: !0
                    }
                }
            }

            function f(t, e, r, n) {
                void 0 === n && (n = r), t[n] = e[r]
            }

            function d(t, e) {
                for (var r in t) "default" === r || e.hasOwnProperty(r) || (e[r] = t[r])
            }

            function p(t) {
                var e = "function" == typeof Symbol && Symbol.iterator,
                    r = e && t[e],
                    n = 0;
                if (r) return r.call(t);
                if (t && "number" == typeof t.length) return {
                    next: function() {
                        return t && n >= t.length && (t = void 0), {
                            value: t && t[n++],
                            done: !t
                        }
                    }
                };
                throw TypeError(e ? "Object is not iterable." : "Symbol.iterator is not defined.")
            }

            function y(t, e) {
                var r = "function" == typeof Symbol && t[Symbol.iterator];
                if (!r) return t;
                var n, i, o = r.call(t),
                    s = [];
                try {
                    for (;
                        (void 0 === e || e-- > 0) && !(n = o.next()).done;) s.push(n.value)
                } catch (t) {
                    i = {
                        error: t
                    }
                } finally {
                    try {
                        n && !n.done && (r = o.return) && r.call(o)
                    } finally {
                        if (i) throw i.error
                    }
                }
                return s
            }

            function m() {
                for (var t = [], e = 0; e < arguments.length; e++) t = t.concat(y(arguments[e]));
                return t
            }

            function b() {
                for (var t = 0, e = 0, r = arguments.length; e < r; e++) t += arguments[e].length;
                for (var n = Array(t), i = 0, e = 0; e < r; e++)
                    for (var o = arguments[e], s = 0, a = o.length; s < a; s++, i++) n[i] = o[s];
                return n
            }

            function g(t) {
                return this instanceof g ? (this.v = t, this) : new g(t)
            }

            function w(t, e, r) {
                if (!Symbol.asyncIterator) throw TypeError("Symbol.asyncIterator is not defined.");
                var n, i = r.apply(t, e || []),
                    o = [];
                return n = {}, s("next"), s("throw"), s("return"), n[Symbol.asyncIterator] = function() {
                    return this
                }, n;

                function s(t) {
                    i[t] && (n[t] = function(e) {
                        return new Promise(function(r, n) {
                            o.push([t, e, r, n]) > 1 || a(t, e)
                        })
                    })
                }

                function a(t, e) {
                    try {
                        u(i[t](e))
                    } catch (t) {
                        h(o[0][3], t)
                    }
                }

                function u(t) {
                    t.value instanceof g ? Promise.resolve(t.value.v).then(c, l) : h(o[0][2], t)
                }

                function c(t) {
                    a("next", t)
                }

                function l(t) {
                    a("throw", t)
                }

                function h(t, e) {
                    t(e), o.shift(), o.length && a(o[0][0], o[0][1])
                }
            }

            function v(t) {
                var e, r;
                return e = {}, n("next"), n("throw", function(t) {
                    throw t
                }), n("return"), e[Symbol.iterator] = function() {
                    return this
                }, e;

                function n(n, i) {
                    e[n] = t[n] ? function(e) {
                        return (r = !r) ? {
                            value: g(t[n](e)),
                            done: "return" === n
                        } : i ? i(e) : e
                    } : i
                }
            }

            function E(t) {
                if (!Symbol.asyncIterator) throw TypeError("Symbol.asyncIterator is not defined.");
                var e, r = t[Symbol.asyncIterator];
                return r ? r.call(t) : (t = p(t), e = {}, n("next"), n("throw"), n("return"), e[Symbol.asyncIterator] = function() {
                    return this
                }, e);

                function n(r) {
                    e[r] = t[r] && function(e) {
                        return new Promise(function(n, o) {
                            i(n, o, (e = t[r](e)).done, e.value)
                        })
                    }
                }

                function i(t, e, r, n) {
                    Promise.resolve(n).then(function(e) {
                        t({
                            value: e,
                            done: r
                        })
                    }, e)
                }
            }

            function x(t, e) {
                return Object.defineProperty ? Object.defineProperty(t, "raw", {
                    value: e
                }) : t.raw = e, t
            }

            function S(t) {
                if (t && t.__esModule) return t;
                var e = {};
                if (null != t)
                    for (var r in t) Object.hasOwnProperty.call(t, r) && (e[r] = t[r]);
                return e.default = t, e
            }

            function O(t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            }

            function C(t, e) {
                if (!e.has(t)) throw TypeError("attempted to get private field on non-instance");
                return e.get(t)
            }

            function _(t, e, r) {
                if (!e.has(t)) throw TypeError("attempted to set private field on non-instance");
                return e.set(t, r), r
            }
        },
        5665: function(t, e, r) {
            "use strict";
            r.d(e, {
                AW: function() {
                    return E
                },
                O6: function() {
                    return eq
                },
                rV: function() {
                    return C
                },
                gn: function() {
                    return tw
                },
                H1: function() {
                    return td
                },
                hF: function() {
                    return tp
                },
                WG: function() {
                    return j
                },
                pe: function() {
                    return N
                },
                m$: function() {
                    return M
                },
                vB: function() {
                    return L
                },
                HI: function() {
                    return U
                },
                E0: function() {
                    return tE
                },
                Gq: function() {
                    return tb
                },
                $0: function() {
                    return tc
                },
                Z4: function() {
                    return tm
                },
                Bv: function() {
                    return tN
                },
                Au: function() {
                    return D
                },
                jd: function() {
                    return I
                },
                gu: function() {
                    return g
                },
                D: function() {
                    return to
                },
                X_: function() {
                    return tn
                },
                bW: function() {
                    return tO
                },
                Z7: function() {
                    return t3
                },
                cO: function() {
                    return tA
                },
                _H: function() {
                    return t_
                },
                fc: function() {
                    return tJ
                },
                D6: function() {
                    return t5
                },
                Hh: function() {
                    return tS
                },
                Ym: function() {
                    return B
                },
                rj: function() {
                    return R
                },
                jU: function() {
                    return te
                },
                gp: function() {
                    return tX
                },
                rF: function() {
                    return eP
                },
                Bw: function() {
                    return tv
                },
                UG: function() {
                    return X
                },
                Gg: function() {
                    return eB
                },
                xW: function() {
                    return eo
                },
                b$: function() {
                    return tt
                },
                Ih: function() {
                    return ee
                },
                h1: function() {
                    return es
                },
                Q8: function() {
                    return W
                },
                o8: function() {
                    return t9
                },
                qt: function() {
                    return t8
                },
                Dd: function() {
                    return ea
                },
                $t: function() {
                    return eE
                },
                nf: function() {
                    return eO
                },
                Q0: function() {
                    return ew
                },
                in: function() {
                    return em
                },
                p8: function() {
                    return eC
                },
                sI: function() {
                    return eA
                },
                al: function() {
                    return e_
                },
                L5: function() {
                    return t4
                },
                EJ: function() {
                    return ev
                },
                Z2: function() {
                    return eb
                },
                PM: function() {
                    return eg
                },
                hH: function() {
                    return ex
                },
                ON: function() {
                    return eM
                },
                n: function() {
                    return ey
                },
                JT: function() {
                    return eS
                },
                M_: function() {
                    return t7
                },
                jv: function() {
                    return ei
                },
                KC: function() {
                    return th
                },
                eG: function() {
                    return tx
                },
                fK: function() {
                    return t1
                },
                IP: function() {
                    return tf
                },
                DQ: function() {
                    return b
                },
                iP: function() {
                    return tg
                },
                M: function() {
                    return t0
                },
                he: function() {
                    return tT
                },
                uw: function() {
                    return eU
                },
                Ll: function() {
                    return q
                },
                EN: function() {
                    return $
                }
            });
            var n = r(50972),
                i = r(9014),
                o = r(78539),
                s = r(43094),
                a = r(11153),
                u = r(47783),
                c = r(65383),
                l = r(40537),
                h = r(76454),
                f = r(3897),
                d = r(55417);
            let p = {
                waku: {
                    publish: "waku_publish",
                    batchPublish: "waku_batchPublish",
                    subscribe: "waku_subscribe",
                    batchSubscribe: "waku_batchSubscribe",
                    subscription: "waku_subscription",
                    unsubscribe: "waku_unsubscribe",
                    batchUnsubscribe: "waku_batchUnsubscribe",
                    batchFetchMessages: "waku_batchFetchMessages"
                },
                irn: {
                    publish: "irn_publish",
                    batchPublish: "irn_batchPublish",
                    subscribe: "irn_subscribe",
                    batchSubscribe: "irn_batchSubscribe",
                    subscription: "irn_subscription",
                    unsubscribe: "irn_unsubscribe",
                    batchUnsubscribe: "irn_batchUnsubscribe",
                    batchFetchMessages: "irn_batchFetchMessages"
                },
                iridium: {
                    publish: "iridium_publish",
                    batchPublish: "iridium_batchPublish",
                    subscribe: "iridium_subscribe",
                    batchSubscribe: "iridium_batchSubscribe",
                    subscription: "iridium_subscription",
                    unsubscribe: "iridium_unsubscribe",
                    batchUnsubscribe: "iridium_batchUnsubscribe",
                    batchFetchMessages: "iridium_batchFetchMessages"
                }
            };
            var y = r(25566);
            let m = ":";

            function b(t) {
                let [e, r] = t.split(m);
                return {
                    namespace: e,
                    reference: r
                }
            }

            function g(t, e = []) {
                let r = [];
                return Object.keys(t).forEach(n => {
                    if (e.length && !e.includes(n)) return;
                    let i = t[n];
                    r.push(...i.accounts)
                }), r
            }

            function w(t, e) {
                return t.includes(":") ? [t] : e.chains || []
            }
            let v = "base10",
                E = "base16",
                x = "base64pad",
                S = "utf8",
                O = 0,
                C = 1,
                _ = 0,
                A = 1,
                P = 12,
                k = 32;

            function D() {
                let t = a.Au();
                return {
                    privateKey: (0, u.BB)(t.secretKey, E),
                    publicKey: (0, u.BB)(t.publicKey, E)
                }
            }

            function I() {
                let t = (0, o.randomBytes)(k);
                return (0, u.BB)(t, E)
            }

            function M(t, e) {
                let r = a.gi((0, u.mL)(t, E), (0, u.mL)(e, E), !0),
                    n = new i.t(s.mE, r).expand(k);
                return (0, u.BB)(n, E)
            }

            function B(t) {
                let e = (0, s.vp)((0, u.mL)(t, E));
                return (0, u.BB)(e, E)
            }

            function R(t) {
                let e = (0, s.vp)((0, u.mL)(t, S));
                return (0, u.BB)(e, E)
            }

            function T(t) {
                return (0, u.mL)(`${t}`, v)
            }

            function j(t) {
                return Number((0, u.BB)(t, v))
            }

            function U(t) {
                let e = T("u" > typeof t.type ? t.type : O);
                if (j(e) === C && typeof t.senderPublicKey > "u") throw Error("Missing sender public key for type 1 envelope");
                let r = "u" > typeof t.senderPublicKey ? (0, u.mL)(t.senderPublicKey, E) : void 0,
                    i = "u" > typeof t.iv ? (0, u.mL)(t.iv, E) : (0, o.randomBytes)(P);
                return F({
                    type: e,
                    sealed: new n.OK((0, u.mL)(t.symKey, E)).seal(i, (0, u.mL)(t.message, S)),
                    iv: i,
                    senderPublicKey: r
                })
            }

            function N(t) {
                let e = new n.OK((0, u.mL)(t.symKey, E)),
                    {
                        sealed: r,
                        iv: i
                    } = L(t.encoded),
                    o = e.open(i, r);
                if (null === o) throw Error("Failed to decrypt");
                return (0, u.BB)(o, S)
            }

            function F(t) {
                if (j(t.type) === C) {
                    if (typeof t.senderPublicKey > "u") throw Error("Missing sender public key for type 1 envelope");
                    return (0, u.BB)((0, u.zo)([t.type, t.senderPublicKey, t.iv, t.sealed]), x)
                }
                return (0, u.BB)((0, u.zo)([t.type, t.iv, t.sealed]), x)
            }

            function L(t) {
                let e = (0, u.mL)(t, x),
                    r = e.slice(_, A),
                    n = A;
                if (j(r) === C) {
                    let t = n + k,
                        i = t + P,
                        o = e.slice(n, t),
                        s = e.slice(t, i);
                    return {
                        type: r,
                        sealed: e.slice(i),
                        iv: s,
                        senderPublicKey: o
                    }
                }
                let i = n + P,
                    o = e.slice(n, i);
                return {
                    type: r,
                    sealed: e.slice(i),
                    iv: o
                }
            }

            function q(t, e) {
                let r = L(t);
                return $({
                    type: j(r.type),
                    senderPublicKey: "u" > typeof r.senderPublicKey ? (0, u.BB)(r.senderPublicKey, E) : void 0,
                    receiverPublicKey: e ? .receiverPublicKey
                })
            }

            function $(t) {
                let e = t ? .type || O;
                if (e === C) {
                    if (typeof t ? .senderPublicKey > "u") throw Error("missing sender public key");
                    if (typeof t ? .receiverPublicKey > "u") throw Error("missing receiver public key")
                }
                return {
                    type: e,
                    senderPublicKey: t ? .senderPublicKey,
                    receiverPublicKey: t ? .receiverPublicKey
                }
            }

            function W(t) {
                return t.type === C && "string" == typeof t.senderPublicKey && "string" == typeof t.receiverPublicKey
            }
            var G = Object.defineProperty,
                z = Object.getOwnPropertySymbols,
                H = Object.prototype.hasOwnProperty,
                K = Object.prototype.propertyIsEnumerable,
                V = (t, e, r) => e in t ? G(t, e, {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: r
                }) : t[e] = r,
                Q = (t, e) => {
                    for (var r in e || (e = {})) H.call(e, r) && V(t, r, e[r]);
                    if (z)
                        for (var r of z(e)) K.call(e, r) && V(t, r, e[r]);
                    return t
                };
            let Z = "ReactNative",
                Y = {
                    reactNative: "react-native",
                    node: "node",
                    browser: "browser",
                    unknown: "unknown"
                },
                J = "js";

            function X() {
                return "u" > typeof y && "u" > typeof y.versions && "u" > typeof y.versions.node
            }

            function tt() {
                return !(0, h.getDocument)() && !!(0, h.getNavigator)() && navigator.product === Z
            }

            function te() {
                return !X() && !!(0, h.getNavigator)() && !!(0, h.getDocument)()
            }

            function tr() {
                return tt() ? Y.reactNative : X() ? Y.node : te() ? Y.browser : Y.unknown
            }

            function tn() {
                var t;
                try {
                    return tt() && "u" > typeof r.g && "u" > typeof(null == r.g ? void 0 : r.g.Application) ? null == (t = r.g.Application) ? void 0 : t.applicationId : void 0
                } catch {
                    return
                }
            }

            function ti(t, e) {
                let r = d.parse(t);
                return r = Q(Q({}, r), e), t = d.stringify(r)
            }

            function to() {
                return (0, f.D)() || {
                    name: "",
                    description: "",
                    url: "",
                    icons: [""]
                }
            }

            function ts() {
                if (tr() === Y.reactNative && "u" > typeof r.g && "u" > typeof(null == r.g ? void 0 : r.g.Platform)) {
                    let {
                        OS: t,
                        Version: e
                    } = r.g.Platform;
                    return [t, e].join("-")
                }
                let t = (0, c.qY)();
                if (null === t) return "unknown";
                let e = t.os ? t.os.replace(" ", "").toLowerCase() : "unknown";
                return "browser" === t.type ? [e, t.name, t.version].join("-") : [e, t.version].join("-")
            }

            function ta() {
                var t;
                let e = tr();
                return e === Y.browser ? [e, (null == (t = (0, h.getLocation)()) ? void 0 : t.host) || "unknown"].join(":") : e
            }

            function tu(t, e, r) {
                let n = ts(),
                    i = ta();
                return [
                    [t, e].join("-"), [J, r].join("-"), n, i
                ].join("/")
            }

            function tc({
                protocol: t,
                version: e,
                relayUrl: r,
                sdkVersion: n,
                auth: i,
                projectId: o,
                useOnCloseEvent: s,
                bundleId: a
            }) {
                let u = r.split("?"),
                    c = {
                        auth: i,
                        ua: tu(t, e, n),
                        projectId: o,
                        useOnCloseEvent: s || void 0,
                        origin: a || void 0
                    },
                    l = ti(u[1] || "", c);
                return u[0] + "?" + l
            }

            function tl(t, e) {
                return t.filter(t => e.includes(t)).length === t.length
            }

            function th(t) {
                return Object.fromEntries(t.entries())
            }

            function tf(t) {
                return new Map(Object.entries(t))
            }

            function td(t = l.FIVE_MINUTES, e) {
                let r, n, i;
                let o = (0, l.toMiliseconds)(t || l.FIVE_MINUTES);
                return {
                    resolve: t => {
                        i && r && (clearTimeout(i), r(t))
                    },
                    reject: t => {
                        i && n && (clearTimeout(i), n(t))
                    },
                    done: () => new Promise((t, s) => {
                        i = setTimeout(() => {
                            s(Error(e))
                        }, o), r = t, n = s
                    })
                }
            }

            function tp(t, e, r) {
                return new Promise(async (n, i) => {
                    let o = setTimeout(() => i(Error(r)), e);
                    try {
                        let e = await t;
                        n(e)
                    } catch (t) {
                        i(t)
                    }
                    clearTimeout(o)
                })
            }

            function ty(t, e) {
                if ("string" == typeof e && e.startsWith(`${t}:`)) return e;
                if ("topic" === t.toLowerCase()) {
                    if ("string" != typeof e) throw Error('Value must be "string" for expirer target type: topic');
                    return `topic:${e}`
                }
                if ("id" === t.toLowerCase()) {
                    if ("number" != typeof e) throw Error('Value must be "number" for expirer target type: id');
                    return `id:${e}`
                }
                throw Error(`Unknown expirer target type: ${t}`)
            }

            function tm(t) {
                return ty("topic", t)
            }

            function tb(t) {
                return ty("id", t)
            }

            function tg(t) {
                let [e, r] = t.split(":"), n = {
                    id: void 0,
                    topic: void 0
                };
                if ("topic" === e && "string" == typeof r) n.topic = r;
                else if ("id" === e && Number.isInteger(Number(r))) n.id = Number(r);
                else throw Error(`Invalid target, expected id:number or topic:string, got ${e}:${r}`);
                return n
            }

            function tw(t, e) {
                return (0, l.fromMiliseconds)((e || Date.now()) + (0, l.toMiliseconds)(t))
            }

            function tv(t) {
                return Date.now() >= (0, l.toMiliseconds)(t)
            }

            function tE(t, e) {
                return `${t}${e?`:${e}`:""}`
            }

            function tx(t = [], e = []) {
                return [...new Set([...t, ...e])]
            }
            async function tS({
                id: t,
                topic: e,
                wcDeepLink: n
            }) {
                try {
                    if (!n) return;
                    let i = "string" == typeof n ? JSON.parse(n) : n,
                        o = i ? .href;
                    if ("string" != typeof o) return;
                    o.endsWith("/") && (o = o.slice(0, -1));
                    let s = `${o}/wc?requestId=${t}&sessionTopic=${e}`,
                        a = tr();
                    a === Y.browser ? s.startsWith("https://") ? window.open(s, "_blank", "noreferrer noopener") : window.open(s, "_self", "noreferrer noopener") : a === Y.reactNative && "u" > typeof(null == r.g ? void 0 : r.g.Linking) && await r.g.Linking.openURL(s)
                } catch (t) {
                    console.error(t)
                }
            }
            async function tO(t, e) {
                try {
                    return await t.getItem(e) || (te() ? localStorage.getItem(e) : void 0)
                } catch (t) {
                    console.error(t)
                }
            }
            let tC = "irn";

            function t_(t) {
                return t ? .relay || {
                    protocol: tC
                }
            }

            function tA(t) {
                let e = p[t];
                if (typeof e > "u") throw Error(`Relay Protocol not supported: ${t}`);
                return e
            }
            var tP = Object.defineProperty,
                tk = Object.getOwnPropertySymbols,
                tD = Object.prototype.hasOwnProperty,
                tI = Object.prototype.propertyIsEnumerable,
                tM = (t, e, r) => e in t ? tP(t, e, {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: r
                }) : t[e] = r,
                tB = (t, e) => {
                    for (var r in e || (e = {})) tD.call(e, r) && tM(t, r, e[r]);
                    if (tk)
                        for (var r of tk(e)) tI.call(e, r) && tM(t, r, e[r]);
                    return t
                };

            function tR(t, e = "-") {
                let r = {},
                    n = "relay" + e;
                return Object.keys(t).forEach(e => {
                    if (e.startsWith(n)) {
                        let i = e.replace(n, ""),
                            o = t[e];
                        r[i] = o
                    }
                }), r
            }

            function tT(t) {
                let e = (t = (t = t.includes("wc://") ? t.replace("wc://", "") : t).includes("wc:") ? t.replace("wc:", "") : t).indexOf(":"),
                    r = -1 !== t.indexOf("?") ? t.indexOf("?") : void 0,
                    n = t.substring(0, e),
                    i = t.substring(e + 1, r).split("@"),
                    o = "u" > typeof r ? t.substring(r) : "",
                    s = d.parse(o);
                return {
                    protocol: n,
                    topic: tj(i[0]),
                    version: parseInt(i[1], 10),
                    symKey: s.symKey,
                    relay: tR(s)
                }
            }

            function tj(t) {
                return t.startsWith("//") ? t.substring(2) : t
            }

            function tU(t, e = "-") {
                let r = "relay",
                    n = {};
                return Object.keys(t).forEach(i => {
                    let o = r + e + i;
                    t[i] && (n[o] = t[i])
                }), n
            }

            function tN(t) {
                return `${t.protocol}:${t.topic}@${t.version}?` + d.stringify(tB({
                    symKey: t.symKey
                }, tU(t.relay)))
            }
            var tF = Object.defineProperty,
                tL = Object.defineProperties,
                tq = Object.getOwnPropertyDescriptors,
                t$ = Object.getOwnPropertySymbols,
                tW = Object.prototype.hasOwnProperty,
                tG = Object.prototype.propertyIsEnumerable,
                tz = (t, e, r) => e in t ? tF(t, e, {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: r
                }) : t[e] = r,
                tH = (t, e) => {
                    for (var r in e || (e = {})) tW.call(e, r) && tz(t, r, e[r]);
                    if (t$)
                        for (var r of t$(e)) tG.call(e, r) && tz(t, r, e[r]);
                    return t
                },
                tK = (t, e) => tL(t, tq(e));

            function tV(t) {
                let e = [];
                return t.forEach(t => {
                    let [r, n] = t.split(":");
                    e.push(`${r}:${n}`)
                }), e
            }

            function tQ(t) {
                let e = [];
                return Object.values(t).forEach(t => {
                    e.push(...tV(t.accounts))
                }), e
            }

            function tZ(t, e) {
                let r = [];
                return Object.values(t).forEach(t => {
                    tV(t.accounts).includes(e) && r.push(...t.methods)
                }), r
            }

            function tY(t, e) {
                let r = [];
                return Object.values(t).forEach(t => {
                    tV(t.accounts).includes(e) && r.push(...t.events)
                }), r
            }

            function tJ(t, e) {
                let r = em(t, e);
                if (r) throw Error(r.message);
                let n = {};
                for (let [e, r] of Object.entries(t)) n[e] = {
                    methods: r.methods,
                    events: r.events,
                    chains: r.accounts.map(t => `${t.split(":")[0]}:${t.split(":")[1]}`)
                };
                return n
            }

            function tX(t) {
                return t.includes(":")
            }

            function t0(t) {
                return tX(t) ? t.split(":")[0] : t
            }

            function t1(t) {
                var e, r, n;
                let i = {};
                if (!t4(t)) return i;
                for (let [o, s] of Object.entries(t)) {
                    let t = tX(o) ? [o] : s.chains,
                        a = s.methods || [],
                        u = s.events || [],
                        c = t0(o);
                    i[c] = tK(tH({}, i[c]), {
                        chains: tx(t, null == (e = i[c]) ? void 0 : e.chains),
                        methods: tx(a, null == (r = i[c]) ? void 0 : r.methods),
                        events: tx(u, null == (n = i[c]) ? void 0 : n.events)
                    })
                }
                return i
            }
            let t2 = {
                    INVALID_METHOD: {
                        message: "Invalid method.",
                        code: 1001
                    },
                    INVALID_EVENT: {
                        message: "Invalid event.",
                        code: 1002
                    },
                    INVALID_UPDATE_REQUEST: {
                        message: "Invalid update request.",
                        code: 1003
                    },
                    INVALID_EXTEND_REQUEST: {
                        message: "Invalid extend request.",
                        code: 1004
                    },
                    INVALID_SESSION_SETTLE_REQUEST: {
                        message: "Invalid session settle request.",
                        code: 1005
                    },
                    UNAUTHORIZED_METHOD: {
                        message: "Unauthorized method.",
                        code: 3001
                    },
                    UNAUTHORIZED_EVENT: {
                        message: "Unauthorized event.",
                        code: 3002
                    },
                    UNAUTHORIZED_UPDATE_REQUEST: {
                        message: "Unauthorized update request.",
                        code: 3003
                    },
                    UNAUTHORIZED_EXTEND_REQUEST: {
                        message: "Unauthorized extend request.",
                        code: 3004
                    },
                    USER_REJECTED: {
                        message: "User rejected.",
                        code: 5e3
                    },
                    USER_REJECTED_CHAINS: {
                        message: "User rejected chains.",
                        code: 5001
                    },
                    USER_REJECTED_METHODS: {
                        message: "User rejected methods.",
                        code: 5002
                    },
                    USER_REJECTED_EVENTS: {
                        message: "User rejected events.",
                        code: 5003
                    },
                    UNSUPPORTED_CHAINS: {
                        message: "Unsupported chains.",
                        code: 5100
                    },
                    UNSUPPORTED_METHODS: {
                        message: "Unsupported methods.",
                        code: 5101
                    },
                    UNSUPPORTED_EVENTS: {
                        message: "Unsupported events.",
                        code: 5102
                    },
                    UNSUPPORTED_ACCOUNTS: {
                        message: "Unsupported accounts.",
                        code: 5103
                    },
                    UNSUPPORTED_NAMESPACE_KEY: {
                        message: "Unsupported namespace key.",
                        code: 5104
                    },
                    USER_DISCONNECTED: {
                        message: "User disconnected.",
                        code: 6e3
                    },
                    SESSION_SETTLEMENT_FAILED: {
                        message: "Session settlement failed.",
                        code: 7e3
                    },
                    WC_METHOD_UNSUPPORTED: {
                        message: "Unsupported wc_ method.",
                        code: 10001
                    }
                },
                t6 = {
                    NOT_INITIALIZED: {
                        message: "Not initialized.",
                        code: 1
                    },
                    NO_MATCHING_KEY: {
                        message: "No matching key.",
                        code: 2
                    },
                    RESTORE_WILL_OVERRIDE: {
                        message: "Restore will override.",
                        code: 3
                    },
                    RESUBSCRIBED: {
                        message: "Resubscribed.",
                        code: 4
                    },
                    MISSING_OR_INVALID: {
                        message: "Missing or invalid.",
                        code: 5
                    },
                    EXPIRED: {
                        message: "Expired.",
                        code: 6
                    },
                    UNKNOWN_TYPE: {
                        message: "Unknown type.",
                        code: 7
                    },
                    MISMATCHED_TOPIC: {
                        message: "Mismatched topic.",
                        code: 8
                    },
                    NON_CONFORMING_NAMESPACES: {
                        message: "Non conforming namespaces.",
                        code: 9
                    }
                };

            function t3(t, e) {
                let {
                    message: r,
                    code: n
                } = t6[t];
                return {
                    message: e ? `${r} ${e}` : r,
                    code: n
                }
            }

            function t5(t, e) {
                let {
                    message: r,
                    code: n
                } = t2[t];
                return {
                    message: e ? `${r} ${e}` : r,
                    code: n
                }
            }

            function t8(t, e) {
                return !!Array.isArray(t) && (!("u" > typeof e) || !t.length || t.every(e))
            }

            function t4(t) {
                return Object.getPrototypeOf(t) === Object.prototype && Object.keys(t).length
            }

            function t9(t) {
                return typeof t > "u"
            }

            function t7(t, e) {
                return !!(e && t9(t)) || "string" == typeof t && !!t.trim().length
            }

            function et(t, e) {
                return !!(e && t9(t)) || "number" == typeof t && !isNaN(t)
            }

            function ee(t, e) {
                let {
                    requiredNamespaces: r
                } = e, n = Object.keys(t.namespaces), i = Object.keys(r), o = !0;
                return !!tl(i, n) && (n.forEach(e => {
                    let {
                        accounts: n,
                        methods: i,
                        events: s
                    } = t.namespaces[e], a = tV(n), u = r[e];
                    tl(w(e, u), a) && tl(u.methods, i) && tl(u.events, s) || (o = !1)
                }), o)
            }

            function er(t) {
                return !!(t7(t, !1) && t.includes(":")) && 2 === t.split(":").length
            }

            function en(t) {
                if (t7(t, !1) && t.includes(":")) {
                    let e = t.split(":");
                    if (3 === e.length) {
                        let t = e[0] + ":" + e[1];
                        return !!e[2] && er(t)
                    }
                }
                return !1
            }

            function ei(t) {
                if (t7(t, !1)) try {
                    return "u" > typeof new URL(t)
                } catch {}
                return !1
            }

            function eo(t) {
                var e;
                return null == (e = t ? .proposer) ? void 0 : e.publicKey
            }

            function es(t) {
                return t ? .topic
            }

            function ea(t, e) {
                let r = null;
                return t7(t ? .publicKey, !1) || (r = t3("MISSING_OR_INVALID", `${e} controller public key should be a string`)), r
            }

            function eu(t) {
                let e = !0;
                return t8(t) ? t.length && (e = t.every(t => t7(t, !1))) : e = !1, e
            }

            function ec(t, e, r) {
                let n = null;
                return t8(e) && e.length ? e.forEach(t => {
                    n || er(t) || (n = t5("UNSUPPORTED_CHAINS", `${r}, chain ${t} should be a string and conform to "namespace:chainId" format`))
                }) : er(t) || (n = t5("UNSUPPORTED_CHAINS", `${r}, chains must be defined as "namespace:chainId" e.g. "eip155:1": {...} in the namespace key OR as an array of CAIP-2 chainIds e.g. eip155: { chains: ["eip155:1", "eip155:5"] }`)), n
            }

            function el(t, e, r) {
                let n = null;
                return Object.entries(t).forEach(([t, i]) => {
                    if (n) return;
                    let o = ec(t, w(t, i), `${e} ${r}`);
                    o && (n = o)
                }), n
            }

            function eh(t, e) {
                let r = null;
                return t8(t) ? t.forEach(t => {
                    r || en(t) || (r = t5("UNSUPPORTED_ACCOUNTS", `${e}, account ${t} should be a string and conform to "namespace:chainId:address" format`))
                }) : r = t5("UNSUPPORTED_ACCOUNTS", `${e}, accounts should be an array of strings conforming to "namespace:chainId:address" format`), r
            }

            function ef(t, e) {
                let r = null;
                return Object.values(t).forEach(t => {
                    if (r) return;
                    let n = eh(t ? .accounts, `${e} namespace`);
                    n && (r = n)
                }), r
            }

            function ed(t, e) {
                let r = null;
                return eu(t ? .methods) ? eu(t ? .events) || (r = t5("UNSUPPORTED_EVENTS", `${e}, events should be an array of strings or empty array for no events`)) : r = t5("UNSUPPORTED_METHODS", `${e}, methods should be an array of strings or empty array for no methods`), r
            }

            function ep(t, e) {
                let r = null;
                return Object.values(t).forEach(t => {
                    if (r) return;
                    let n = ed(t, `${e}, namespace`);
                    n && (r = n)
                }), r
            }

            function ey(t, e, r) {
                let n = null;
                if (t && t4(t)) {
                    let i = ep(t, e);
                    i && (n = i);
                    let o = el(t, e, r);
                    o && (n = o)
                } else n = t3("MISSING_OR_INVALID", `${e}, ${r} should be an object with data`);
                return n
            }

            function em(t, e) {
                let r = null;
                if (t && t4(t)) {
                    let n = ep(t, e);
                    n && (r = n);
                    let i = ef(t, e);
                    i && (r = i)
                } else r = t3("MISSING_OR_INVALID", `${e}, namespaces should be an object with data`);
                return r
            }

            function eb(t) {
                return t7(t.protocol, !0)
            }

            function eg(t, e) {
                let r = !1;
                return e && !t ? r = !0 : t && t8(t) && t.length && t.forEach(t => {
                    r = eb(t)
                }), r
            }

            function ew(t) {
                return "number" == typeof t
            }

            function ev(t) {
                return "u" > typeof t
            }

            function eE(t) {
                return !(!t || "object" != typeof t || !t.code || !et(t.code, !1) || !t.message || !t7(t.message, !1))
            }

            function ex(t) {
                return !(t9(t) || !t7(t.method, !1))
            }

            function eS(t) {
                return !(t9(t) || t9(t.result) && t9(t.error) || !et(t.id, !1) || !t7(t.jsonrpc, !1))
            }

            function eO(t) {
                return !(t9(t) || !t7(t.name, !1))
            }

            function eC(t, e) {
                return !(!er(e) || !tQ(t).includes(e))
            }

            function e_(t, e, r) {
                return !!t7(r, !1) && tZ(t, e).includes(r)
            }

            function eA(t, e, r) {
                return !!t7(r, !1) && tY(t, e).includes(r)
            }

            function eP(t, e, r) {
                let n = null,
                    i = ek(t),
                    o = eI(e),
                    s = Object.keys(i),
                    a = Object.keys(o),
                    u = eD(Object.keys(t)),
                    c = eD(Object.keys(e)),
                    l = u.filter(t => !c.includes(t));
                return l.length && (n = t3("NON_CONFORMING_NAMESPACES", `${r} namespaces keys don't satisfy requiredNamespaces.
      Required: ${l.toString()}
      Received: ${Object.keys(e).toString()}`)), tl(s, a) || (n = t3("NON_CONFORMING_NAMESPACES", `${r} namespaces chains don't satisfy required namespaces.
      Required: ${s.toString()}
      Approved: ${a.toString()}`)), Object.keys(e).forEach(t => {
                    if (!t.includes(":") || n) return;
                    let i = tV(e[t].accounts);
                    i.includes(t) || (n = t3("NON_CONFORMING_NAMESPACES", `${r} namespaces accounts don't satisfy namespace accounts for ${t}
        Required: ${t}
        Approved: ${i.toString()}`))
                }), s.forEach(t => {
                    n || (tl(i[t].methods, o[t].methods) ? tl(i[t].events, o[t].events) || (n = t3("NON_CONFORMING_NAMESPACES", `${r} namespaces events don't satisfy namespace events for ${t}`)) : n = t3("NON_CONFORMING_NAMESPACES", `${r} namespaces methods don't satisfy namespace methods for ${t}`))
                }), n
            }

            function ek(t) {
                let e = {};
                return Object.keys(t).forEach(r => {
                    var n;
                    r.includes(":") ? e[r] = t[r] : null == (n = t[r].chains) || n.forEach(n => {
                        e[n] = {
                            methods: t[r].methods,
                            events: t[r].events
                        }
                    })
                }), e
            }

            function eD(t) {
                return [...new Set(t.map(t => t.includes(":") ? t.split(":")[0] : t))]
            }

            function eI(t) {
                let e = {};
                return Object.keys(t).forEach(r => {
                    if (r.includes(":")) e[r] = t[r];
                    else {
                        let n = tV(t[r].accounts);
                        n ? .forEach(n => {
                            e[n] = {
                                accounts: t[r].accounts.filter(t => t.includes(`${n}:`)),
                                methods: t[r].methods,
                                events: t[r].events
                            }
                        })
                    }
                }), e
            }

            function eM(t, e) {
                return et(t, !1) && t <= e.max && t >= e.min
            }

            function eB() {
                let t = tr();
                return new Promise(e => {
                    switch (t) {
                        case Y.browser:
                            e(eR());
                            break;
                        case Y.reactNative:
                            e(eT());
                            break;
                        case Y.node:
                            e(ej());
                            break;
                        default:
                            e(!0)
                    }
                })
            }

            function eR() {
                return te() && navigator ? .onLine
            }
            async function eT() {
                if (tt() && "u" > typeof r.g && null != r.g && r.g.NetInfo) {
                    let t = await (null == r.g ? void 0 : r.g.NetInfo.fetch());
                    return t ? .isConnected
                }
                return !0
            }

            function ej() {
                return !0
            }

            function eU(t) {
                switch (tr()) {
                    case Y.browser:
                        eN(t);
                        break;
                    case Y.reactNative:
                        eF(t);
                    case Y.node:
                }
            }

            function eN(t) {
                !tt() && te() && (window.addEventListener("online", () => t(!0)), window.addEventListener("offline", () => t(!1)))
            }

            function eF(t) {
                tt() && "u" > typeof r.g && null != r.g && r.g.NetInfo && r.g ? .NetInfo.addEventListener(e => t(e ? .isConnected))
            }
            let eL = {};
            class eq {
                static get(t) {
                    return eL[t]
                }
                static set(t, e) {
                    eL[t] = e
                }
                static delete(t) {
                    delete eL[t]
                }
            }
        },
        55417: function(t, e, r) {
            "use strict";
            let n = r(59148),
                i = r(89445),
                o = r(93129),
                s = r(90883),
                a = t => null == t,
                u = Symbol("encodeFragmentIdentifier");

            function c(t) {
                switch (t.arrayFormat) {
                    case "index":
                        return e => (r, n) => {
                            let i = r.length;
                            return void 0 === n || t.skipNull && null === n || t.skipEmptyString && "" === n ? r : null === n ? [...r, [f(e, t), "[", i, "]"].join("")] : [...r, [f(e, t), "[", f(i, t), "]=", f(n, t)].join("")]
                        };
                    case "bracket":
                        return e => (r, n) => void 0 === n || t.skipNull && null === n || t.skipEmptyString && "" === n ? r : null === n ? [...r, [f(e, t), "[]"].join("")] : [...r, [f(e, t), "[]=", f(n, t)].join("")];
                    case "colon-list-separator":
                        return e => (r, n) => void 0 === n || t.skipNull && null === n || t.skipEmptyString && "" === n ? r : null === n ? [...r, [f(e, t), ":list="].join("")] : [...r, [f(e, t), ":list=", f(n, t)].join("")];
                    case "comma":
                    case "separator":
                    case "bracket-separator":
                        {
                            let e = "bracket-separator" === t.arrayFormat ? "[]=" : "=";
                            return r => (n, i) => void 0 === i || t.skipNull && null === i || t.skipEmptyString && "" === i ? n : (i = null === i ? "" : i, 0 === n.length) ? [
                                [f(r, t), e, f(i, t)].join("")
                            ] : [
                                [n, f(i, t)].join(t.arrayFormatSeparator)
                            ]
                        }
                    default:
                        return e => (r, n) => void 0 === n || t.skipNull && null === n || t.skipEmptyString && "" === n ? r : null === n ? [...r, f(e, t)] : [...r, [f(e, t), "=", f(n, t)].join("")]
                }
            }

            function l(t) {
                let e;
                switch (t.arrayFormat) {
                    case "index":
                        return (t, r, n) => {
                            if (e = /\[(\d*)\]$/.exec(t), t = t.replace(/\[\d*\]$/, ""), !e) {
                                n[t] = r;
                                return
                            }
                            void 0 === n[t] && (n[t] = {}), n[t][e[1]] = r
                        };
                    case "bracket":
                        return (t, r, n) => {
                            if (e = /(\[\])$/.exec(t), t = t.replace(/\[\]$/, ""), !e) {
                                n[t] = r;
                                return
                            }
                            if (void 0 === n[t]) {
                                n[t] = [r];
                                return
                            }
                            n[t] = [].concat(n[t], r)
                        };
                    case "colon-list-separator":
                        return (t, r, n) => {
                            if (e = /(:list)$/.exec(t), t = t.replace(/:list$/, ""), !e) {
                                n[t] = r;
                                return
                            }
                            if (void 0 === n[t]) {
                                n[t] = [r];
                                return
                            }
                            n[t] = [].concat(n[t], r)
                        };
                    case "comma":
                    case "separator":
                        return (e, r, n) => {
                            let i = "string" == typeof r && r.includes(t.arrayFormatSeparator),
                                o = "string" == typeof r && !i && d(r, t).includes(t.arrayFormatSeparator);
                            r = o ? d(r, t) : r;
                            let s = i || o ? r.split(t.arrayFormatSeparator).map(e => d(e, t)) : null === r ? r : d(r, t);
                            n[e] = s
                        };
                    case "bracket-separator":
                        return (e, r, n) => {
                            let i = /(\[\])$/.test(e);
                            if (e = e.replace(/\[\]$/, ""), !i) {
                                n[e] = r ? d(r, t) : r;
                                return
                            }
                            let o = null === r ? [] : r.split(t.arrayFormatSeparator).map(e => d(e, t));
                            if (void 0 === n[e]) {
                                n[e] = o;
                                return
                            }
                            n[e] = [].concat(n[e], o)
                        };
                    default:
                        return (t, e, r) => {
                            if (void 0 === r[t]) {
                                r[t] = e;
                                return
                            }
                            r[t] = [].concat(r[t], e)
                        }
                }
            }

            function h(t) {
                if ("string" != typeof t || 1 !== t.length) throw TypeError("arrayFormatSeparator must be single character string")
            }

            function f(t, e) {
                return e.encode ? e.strict ? n(t) : encodeURIComponent(t) : t
            }

            function d(t, e) {
                return e.decode ? i(t) : t
            }

            function p(t) {
                return Array.isArray(t) ? t.sort() : "object" == typeof t ? p(Object.keys(t)).sort((t, e) => Number(t) - Number(e)).map(e => t[e]) : t
            }

            function y(t) {
                let e = t.indexOf("#");
                return -1 !== e && (t = t.slice(0, e)), t
            }

            function m(t) {
                let e = "",
                    r = t.indexOf("#");
                return -1 !== r && (e = t.slice(r)), e
            }

            function b(t) {
                let e = (t = y(t)).indexOf("?");
                return -1 === e ? "" : t.slice(e + 1)
            }

            function g(t, e) {
                return e.parseNumbers && !Number.isNaN(Number(t)) && "string" == typeof t && "" !== t.trim() ? t = Number(t) : e.parseBooleans && null !== t && ("true" === t.toLowerCase() || "false" === t.toLowerCase()) && (t = "true" === t.toLowerCase()), t
            }

            function w(t, e) {
                h((e = Object.assign({
                    decode: !0,
                    sort: !0,
                    arrayFormat: "none",
                    arrayFormatSeparator: ",",
                    parseNumbers: !1,
                    parseBooleans: !1
                }, e)).arrayFormatSeparator);
                let r = l(e),
                    n = Object.create(null);
                if ("string" != typeof t || !(t = t.trim().replace(/^[?#&]/, ""))) return n;
                for (let i of t.split("&")) {
                    if ("" === i) continue;
                    let [t, s] = o(e.decode ? i.replace(/\+/g, " ") : i, "=");
                    s = void 0 === s ? null : ["comma", "separator", "bracket-separator"].includes(e.arrayFormat) ? s : d(s, e), r(d(t, e), s, n)
                }
                for (let t of Object.keys(n)) {
                    let r = n[t];
                    if ("object" == typeof r && null !== r)
                        for (let t of Object.keys(r)) r[t] = g(r[t], e);
                    else n[t] = g(r, e)
                }
                return !1 === e.sort ? n : (!0 === e.sort ? Object.keys(n).sort() : Object.keys(n).sort(e.sort)).reduce((t, e) => {
                    let r = n[e];
                    return r && "object" == typeof r && !Array.isArray(r) ? t[e] = p(r) : t[e] = r, t
                }, Object.create(null))
            }
            e.extract = b, e.parse = w, e.stringify = (t, e) => {
                if (!t) return "";
                h((e = Object.assign({
                    encode: !0,
                    strict: !0,
                    arrayFormat: "none",
                    arrayFormatSeparator: ","
                }, e)).arrayFormatSeparator);
                let r = r => e.skipNull && a(t[r]) || e.skipEmptyString && "" === t[r],
                    n = c(e),
                    i = {};
                for (let e of Object.keys(t)) r(e) || (i[e] = t[e]);
                let o = Object.keys(i);
                return !1 !== e.sort && o.sort(e.sort), o.map(r => {
                    let i = t[r];
                    return void 0 === i ? "" : null === i ? f(r, e) : Array.isArray(i) ? 0 === i.length && "bracket-separator" === e.arrayFormat ? f(r, e) + "[]" : i.reduce(n(r), []).join("&") : f(r, e) + "=" + f(i, e)
                }).filter(t => t.length > 0).join("&")
            }, e.parseUrl = (t, e) => {
                e = Object.assign({
                    decode: !0
                }, e);
                let [r, n] = o(t, "#");
                return Object.assign({
                    url: r.split("?")[0] || "",
                    query: w(b(t), e)
                }, e && e.parseFragmentIdentifier && n ? {
                    fragmentIdentifier: d(n, e)
                } : {})
            }, e.stringifyUrl = (t, r) => {
                r = Object.assign({
                    encode: !0,
                    strict: !0,
                    [u]: !0
                }, r);
                let n = y(t.url).split("?")[0] || "",
                    i = e.extract(t.url),
                    o = Object.assign(e.parse(i, {
                        sort: !1
                    }), t.query),
                    s = e.stringify(o, r);
                s && (s = `?${s}`);
                let a = m(t.url);
                return t.fragmentIdentifier && (a = `#${r[u]?f(t.fragmentIdentifier,r):t.fragmentIdentifier}`), `${n}${s}${a}`
            }, e.pick = (t, r, n) => {
                n = Object.assign({
                    parseFragmentIdentifier: !0,
                    [u]: !1
                }, n);
                let {
                    url: i,
                    query: o,
                    fragmentIdentifier: a
                } = e.parseUrl(t, n);
                return e.stringifyUrl({
                    url: i,
                    query: s(o, r),
                    fragmentIdentifier: a
                }, n)
            }, e.exclude = (t, r, n) => {
                let i = Array.isArray(r) ? t => !r.includes(t) : (t, e) => !r(t, e);
                return e.pick(t, i, n)
            }
        },
        76454: function(t, e) {
            "use strict";

            function r(t) {
                let e;
                return "undefined" != typeof window && void 0 !== window[t] && (e = window[t]), e
            }

            function n(t) {
                let e = r(t);
                if (!e) throw Error(`${t} is not defined in Window`);
                return e
            }

            function i() {
                return n("document")
            }

            function o() {
                return r("document")
            }

            function s() {
                return n("navigator")
            }

            function a() {
                return r("navigator")
            }

            function u() {
                return n("location")
            }

            function c() {
                return r("location")
            }

            function l() {
                return n("crypto")
            }

            function h() {
                return r("crypto")
            }

            function f() {
                return n("localStorage")
            }

            function d() {
                return r("localStorage")
            }
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.getLocalStorage = e.getLocalStorageOrThrow = e.getCrypto = e.getCryptoOrThrow = e.getLocation = e.getLocationOrThrow = e.getNavigator = e.getNavigatorOrThrow = e.getDocument = e.getDocumentOrThrow = e.getFromWindowOrThrow = e.getFromWindow = void 0, e.getFromWindow = r, e.getFromWindowOrThrow = n, e.getDocumentOrThrow = i, e.getDocument = o, e.getNavigatorOrThrow = s, e.getNavigator = a, e.getLocationOrThrow = u, e.getLocation = c, e.getCryptoOrThrow = l, e.getCrypto = h, e.getLocalStorageOrThrow = f, e.getLocalStorage = d
        },
        3897: function(t, e, r) {
            "use strict";
            var n;
            n = {
                value: !0
            }, e.D = void 0;
            let i = r(76454);

            function o() {
                let t, e;
                try {
                    t = i.getDocumentOrThrow(), e = i.getLocationOrThrow()
                } catch (t) {
                    return null
                }

                function r() {
                    let r = t.getElementsByTagName("link"),
                        n = [];
                    for (let t = 0; t < r.length; t++) {
                        let i = r[t],
                            o = i.getAttribute("rel");
                        if (o && o.toLowerCase().indexOf("icon") > -1) {
                            let t = i.getAttribute("href");
                            if (t) {
                                if (-1 === t.toLowerCase().indexOf("https:") && -1 === t.toLowerCase().indexOf("http:") && 0 !== t.indexOf("//")) {
                                    let r = e.protocol + "//" + e.host;
                                    if (0 === t.indexOf("/")) r += t;
                                    else {
                                        let n = e.pathname.split("/");
                                        n.pop(), r += n.join("/") + "/" + t
                                    }
                                    n.push(r)
                                } else if (0 === t.indexOf("//")) {
                                    let r = e.protocol + t;
                                    n.push(r)
                                } else n.push(t)
                            }
                        }
                    }
                    return n
                }

                function n(...e) {
                    let r = t.getElementsByTagName("meta");
                    for (let t = 0; t < r.length; t++) {
                        let n = r[t],
                            i = ["itemprop", "property", "name"].map(t => n.getAttribute(t)).filter(t => !!t && e.includes(t));
                        if (i.length && i) {
                            let t = n.getAttribute("content");
                            if (t) return t
                        }
                    }
                    return ""
                }

                function o() {
                    return n("description", "og:description", "twitter:description", "keywords")
                }
                let s = function() {
                    let e = n("name", "og:site_name", "og:title", "twitter:title");
                    return e || (e = t.title), e
                }();
                return {
                    description: o(),
                    url: e.origin,
                    icons: r(),
                    name: s
                }
            }
            e.D = o
        },
        69894: function(t, e, r) {
            "use strict";
            var n, i, o = r(25566);

            function s(t) {
                return (s = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                })(t)
            }

            function a(t, e) {
                for (var r = 0; r < e.length; r++) {
                    var n = e[r];
                    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, c(n.key), n)
                }
            }

            function u(t, e, r) {
                return e && a(t.prototype, e), r && a(t, r), Object.defineProperty(t, "prototype", {
                    writable: !1
                }), t
            }

            function c(t) {
                var e = l(t, "string");
                return "symbol" === s(e) ? e : String(e)
            }

            function l(t, e) {
                if ("object" !== s(t) || null === t) return t;
                var r = t[Symbol.toPrimitive];
                if (void 0 !== r) {
                    var n = r.call(t, e || "default");
                    if ("object" !== s(n)) return n;
                    throw TypeError("@@toPrimitive must return a primitive value.")
                }
                return ("string" === e ? String : Number)(t)
            }

            function h(t, e) {
                if (!(t instanceof e)) throw TypeError("Cannot call a class as a function")
            }
            var f = r(61769).codes,
                d = f.ERR_AMBIGUOUS_ARGUMENT,
                p = f.ERR_INVALID_ARG_TYPE,
                y = f.ERR_INVALID_ARG_VALUE,
                m = f.ERR_INVALID_RETURN_VALUE,
                b = f.ERR_MISSING_ARGS,
                g = r(85768),
                w = r(85508).inspect,
                v = r(85508).types,
                E = v.isPromise,
                x = v.isRegExp,
                S = r(86705)(),
                O = r(22550)(),
                C = r(23837)("RegExp.prototype.test");

            function _() {
                var t = r(21751);
                n = t.isDeepEqual, i = t.isDeepStrictEqual
            }
            var A = !1,
                P = t.exports = B,
                k = {};

            function D(t) {
                if (t.message instanceof Error) throw t.message;
                throw new g(t)
            }

            function I(t, e, r, n, i) {
                var s, a = arguments.length;
                if (0 === a ? s = "Failed" : 1 === a ? (r = t, t = void 0) : (!1 === A && (A = !0, (o.emitWarning ? o.emitWarning : console.warn.bind(console))("assert.fail() with more than one argument is deprecated. Please use assert.strictEqual() instead or only pass a message.", "DeprecationWarning", "DEP0094")), 2 === a && (n = "!=")), r instanceof Error) throw r;
                var u = {
                    actual: t,
                    expected: e,
                    operator: void 0 === n ? "fail" : n,
                    stackStartFn: i || I
                };
                void 0 !== r && (u.message = r);
                var c = new g(u);
                throw s && (c.message = s, c.generatedMessage = !0), c
            }

            function M(t, e, r, n) {
                if (!r) {
                    var i = !1;
                    if (0 === e) i = !0, n = "No value argument passed to `assert.ok()`";
                    else if (n instanceof Error) throw n;
                    var o = new g({
                        actual: r,
                        expected: !0,
                        message: n,
                        operator: "==",
                        stackStartFn: t
                    });
                    throw o.generatedMessage = i, o
                }
            }

            function B() {
                for (var t = arguments.length, e = Array(t), r = 0; r < t; r++) e[r] = arguments[r];
                M.apply(void 0, [B, e.length].concat(e))
            }

            function R(t, e, r) {
                if (arguments.length < 2) throw new b("actual", "expected");
                void 0 === n && _(), i(t, e) && D({
                    actual: t,
                    expected: e,
                    message: r,
                    operator: "notDeepStrictEqual",
                    stackStartFn: R
                })
            }
            P.fail = I, P.AssertionError = g, P.ok = B, P.equal = function t(e, r, n) {
                if (arguments.length < 2) throw new b("actual", "expected");
                e != r && D({
                    actual: e,
                    expected: r,
                    message: n,
                    operator: "==",
                    stackStartFn: t
                })
            }, P.notEqual = function t(e, r, n) {
                if (arguments.length < 2) throw new b("actual", "expected");
                e == r && D({
                    actual: e,
                    expected: r,
                    message: n,
                    operator: "!=",
                    stackStartFn: t
                })
            }, P.deepEqual = function t(e, r, i) {
                if (arguments.length < 2) throw new b("actual", "expected");
                void 0 === n && _(), n(e, r) || D({
                    actual: e,
                    expected: r,
                    message: i,
                    operator: "deepEqual",
                    stackStartFn: t
                })
            }, P.notDeepEqual = function t(e, r, i) {
                if (arguments.length < 2) throw new b("actual", "expected");
                void 0 === n && _(), n(e, r) && D({
                    actual: e,
                    expected: r,
                    message: i,
                    operator: "notDeepEqual",
                    stackStartFn: t
                })
            }, P.deepStrictEqual = function t(e, r, o) {
                if (arguments.length < 2) throw new b("actual", "expected");
                void 0 === n && _(), i(e, r) || D({
                    actual: e,
                    expected: r,
                    message: o,
                    operator: "deepStrictEqual",
                    stackStartFn: t
                })
            }, P.notDeepStrictEqual = R, P.strictEqual = function t(e, r, n) {
                if (arguments.length < 2) throw new b("actual", "expected");
                O(e, r) || D({
                    actual: e,
                    expected: r,
                    message: n,
                    operator: "strictEqual",
                    stackStartFn: t
                })
            }, P.notStrictEqual = function t(e, r, n) {
                if (arguments.length < 2) throw new b("actual", "expected");
                O(e, r) && D({
                    actual: e,
                    expected: r,
                    message: n,
                    operator: "notStrictEqual",
                    stackStartFn: t
                })
            };
            var T = u(function t(e, r, n) {
                var i = this;
                h(this, t), r.forEach(function(t) {
                    t in e && (void 0 !== n && "string" == typeof n[t] && x(e[t]) && C(e[t], n[t]) ? i[t] = n[t] : i[t] = e[t])
                })
            });

            function j(t, e, r, n, o, s) {
                if (!(r in t) || !i(t[r], e[r])) {
                    if (!n) {
                        var a = new g({
                            actual: new T(t, o),
                            expected: new T(e, o, t),
                            operator: "deepStrictEqual",
                            stackStartFn: s
                        });
                        throw a.actual = t, a.expected = e, a.operator = s.name, a
                    }
                    D({
                        actual: t,
                        expected: e,
                        message: n,
                        operator: s.name,
                        stackStartFn: s
                    })
                }
            }

            function U(t, e, r, i) {
                if ("function" != typeof e) {
                    if (x(e)) return C(e, t);
                    if (2 == arguments.length) throw new p("expected", ["Function", "RegExp"], e);
                    if ("object" !== s(t) || null === t) {
                        var o = new g({
                            actual: t,
                            expected: e,
                            message: r,
                            operator: "deepStrictEqual",
                            stackStartFn: i
                        });
                        throw o.operator = i.name, o
                    }
                    var a = Object.keys(e);
                    if (e instanceof Error) a.push("name", "message");
                    else if (0 === a.length) throw new y("error", e, "may not be an empty object");
                    return void 0 === n && _(), a.forEach(function(n) {
                        "string" == typeof t[n] && x(e[n]) && C(e[n], t[n]) || j(t, e, n, r, a, i)
                    }), !0
                }
                return void 0 !== e.prototype && t instanceof e || !Error.isPrototypeOf(e) && !0 === e.call({}, t)
            }

            function N(t) {
                if ("function" != typeof t) throw new p("fn", "Function", t);
                try {
                    t()
                } catch (t) {
                    return t
                }
                return k
            }

            function F(t) {
                return E(t) || null !== t && "object" === s(t) && "function" == typeof t.then && "function" == typeof t.catch
            }

            function L(t) {
                return Promise.resolve().then(function() {
                    var e;
                    if ("function" == typeof t) {
                        if (!F(e = t())) throw new m("instance of Promise", "promiseFn", e)
                    } else if (F(t)) e = t;
                    else throw new p("promiseFn", ["Function", "Promise"], t);
                    return Promise.resolve().then(function() {
                        return e
                    }).then(function() {
                        return k
                    }).catch(function(t) {
                        return t
                    })
                })
            }

            function q(t, e, r, n) {
                if ("string" == typeof r) {
                    if (4 == arguments.length) throw new p("error", ["Object", "Error", "Function", "RegExp"], r);
                    if ("object" === s(e) && null !== e) {
                        if (e.message === r) throw new d("error/message", 'The error message "'.concat(e.message, '" is identical to the message.'))
                    } else if (e === r) throw new d("error/message", 'The error "'.concat(e, '" is identical to the message.'));
                    n = r, r = void 0
                } else if (null != r && "object" !== s(r) && "function" != typeof r) throw new p("error", ["Object", "Error", "Function", "RegExp"], r);
                if (e === k) {
                    var i = "";
                    r && r.name && (i += " (".concat(r.name, ")")), i += n ? ": ".concat(n) : ".";
                    var o = "rejects" === t.name ? "rejection" : "exception";
                    D({
                        actual: void 0,
                        expected: r,
                        operator: t.name,
                        message: "Missing expected ".concat(o).concat(i),
                        stackStartFn: t
                    })
                }
                if (r && !U(e, r, n, t)) throw e
            }

            function $(t, e, r, n) {
                if (e !== k) {
                    if ("string" == typeof r && (n = r, r = void 0), !r || U(e, r)) {
                        var i = n ? ": ".concat(n) : ".",
                            o = "doesNotReject" === t.name ? "rejection" : "exception";
                        D({
                            actual: e,
                            expected: r,
                            operator: t.name,
                            message: "Got unwanted ".concat(o).concat(i, "\n") + 'Actual message: "'.concat(e && e.message, '"'),
                            stackStartFn: t
                        })
                    }
                    throw e
                }
            }

            function W(t, e, r, n, i) {
                if (!x(e)) throw new p("regexp", "RegExp", e);
                var o = "match" === i;
                if ("string" != typeof t || C(e, t) !== o) {
                    if (r instanceof Error) throw r;
                    var a = !r;
                    r = r || ("string" != typeof t ? 'The "string" argument must be of type string. Received type ' + "".concat(s(t), " (").concat(w(t), ")") : (o ? "The input did not match the regular expression " : "The input was expected to not match the regular expression ") + "".concat(w(e), ". Input:\n\n").concat(w(t), "\n"));
                    var u = new g({
                        actual: t,
                        expected: e,
                        message: r,
                        operator: i,
                        stackStartFn: n
                    });
                    throw u.generatedMessage = a, u
                }
            }

            function G() {
                for (var t = arguments.length, e = Array(t), r = 0; r < t; r++) e[r] = arguments[r];
                M.apply(void 0, [G, e.length].concat(e))
            }
            P.throws = function t(e) {
                for (var r = arguments.length, n = Array(r > 1 ? r - 1 : 0), i = 1; i < r; i++) n[i - 1] = arguments[i];
                q.apply(void 0, [t, N(e)].concat(n))
            }, P.rejects = function t(e) {
                for (var r = arguments.length, n = Array(r > 1 ? r - 1 : 0), i = 1; i < r; i++) n[i - 1] = arguments[i];
                return L(e).then(function(e) {
                    return q.apply(void 0, [t, e].concat(n))
                })
            }, P.doesNotThrow = function t(e) {
                for (var r = arguments.length, n = Array(r > 1 ? r - 1 : 0), i = 1; i < r; i++) n[i - 1] = arguments[i];
                $.apply(void 0, [t, N(e)].concat(n))
            }, P.doesNotReject = function t(e) {
                for (var r = arguments.length, n = Array(r > 1 ? r - 1 : 0), i = 1; i < r; i++) n[i - 1] = arguments[i];
                return L(e).then(function(e) {
                    return $.apply(void 0, [t, e].concat(n))
                })
            }, P.ifError = function t(e) {
                if (null != e) {
                    var r = "ifError got unwanted exception: ";
                    "object" === s(e) && "string" == typeof e.message ? 0 === e.message.length && e.constructor ? r += e.constructor.name : r += e.message : r += w(e);
                    var n = new g({
                            actual: e,
                            expected: null,
                            operator: "ifError",
                            message: r,
                            stackStartFn: t
                        }),
                        i = e.stack;
                    if ("string" == typeof i) {
                        var o = i.split("\n");
                        o.shift();
                        for (var a = n.stack.split("\n"), u = 0; u < o.length; u++) {
                            var c = a.indexOf(o[u]);
                            if (-1 !== c) {
                                a = a.slice(0, c);
                                break
                            }
                        }
                        n.stack = "".concat(a.join("\n"), "\n").concat(o.join("\n"))
                    }
                    throw n
                }
            }, P.match = function t(e, r, n) {
                W(e, r, n, t, "match")
            }, P.doesNotMatch = function t(e, r, n) {
                W(e, r, n, t, "doesNotMatch")
            }, P.strict = S(G, P, {
                equal: P.strictEqual,
                deepEqual: P.deepStrictEqual,
                notEqual: P.notStrictEqual,
                notDeepEqual: P.notDeepStrictEqual
            }), P.strict.strict = P.strict
        },
        85768: function(t, e, r) {
            "use strict";
            var n = r(25566);

            function i(t, e) {
                var r = Object.keys(t);
                if (Object.getOwnPropertySymbols) {
                    var n = Object.getOwnPropertySymbols(t);
                    e && (n = n.filter(function(e) {
                        return Object.getOwnPropertyDescriptor(t, e).enumerable
                    })), r.push.apply(r, n)
                }
                return r
            }

            function o(t) {
                for (var e = 1; e < arguments.length; e++) {
                    var r = null != arguments[e] ? arguments[e] : {};
                    e % 2 ? i(Object(r), !0).forEach(function(e) {
                        s(t, e, r[e])
                    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : i(Object(r)).forEach(function(e) {
                        Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e))
                    })
                }
                return t
            }

            function s(t, e, r) {
                return (e = l(e)) in t ? Object.defineProperty(t, e, {
                    value: r,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = r, t
            }

            function a(t, e) {
                if (!(t instanceof e)) throw TypeError("Cannot call a class as a function")
            }

            function u(t, e) {
                for (var r = 0; r < e.length; r++) {
                    var n = e[r];
                    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, l(n.key), n)
                }
            }

            function c(t, e, r) {
                return e && u(t.prototype, e), r && u(t, r), Object.defineProperty(t, "prototype", {
                    writable: !1
                }), t
            }

            function l(t) {
                var e = h(t, "string");
                return "symbol" === x(e) ? e : String(e)
            }

            function h(t, e) {
                if ("object" !== x(t) || null === t) return t;
                var r = t[Symbol.toPrimitive];
                if (void 0 !== r) {
                    var n = r.call(t, e || "default");
                    if ("object" !== x(n)) return n;
                    throw TypeError("@@toPrimitive must return a primitive value.")
                }
                return ("string" === e ? String : Number)(t)
            }

            function f(t, e) {
                if ("function" != typeof e && null !== e) throw TypeError("Super expression must either be null or a function");
                t.prototype = Object.create(e && e.prototype, {
                    constructor: {
                        value: t,
                        writable: !0,
                        configurable: !0
                    }
                }), Object.defineProperty(t, "prototype", {
                    writable: !1
                }), e && v(t, e)
            }

            function d(t) {
                var e = g();
                return function() {
                    var r, n = E(t);
                    return r = e ? Reflect.construct(n, arguments, E(this).constructor) : n.apply(this, arguments), p(this, r)
                }
            }

            function p(t, e) {
                if (e && ("object" === x(e) || "function" == typeof e)) return e;
                if (void 0 !== e) throw TypeError("Derived constructors may only return object or undefined");
                return y(t)
            }

            function y(t) {
                if (void 0 === t) throw ReferenceError("this hasn't been initialised - super() hasn't been called");
                return t
            }

            function m(t) {
                var e = "function" == typeof Map ? new Map : void 0;
                return (m = function(t) {
                    if (null === t || !w(t)) return t;
                    if ("function" != typeof t) throw TypeError("Super expression must either be null or a function");
                    if (void 0 !== e) {
                        if (e.has(t)) return e.get(t);
                        e.set(t, r)
                    }

                    function r() {
                        return b(t, arguments, E(this).constructor)
                    }
                    return r.prototype = Object.create(t.prototype, {
                        constructor: {
                            value: r,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }), v(r, t)
                })(t)
            }

            function b(t, e, r) {
                return (b = g() ? Reflect.construct.bind() : function(t, e, r) {
                    var n = [null];
                    n.push.apply(n, e);
                    var i = new(Function.bind.apply(t, n));
                    return r && v(i, r.prototype), i
                }).apply(null, arguments)
            }

            function g() {
                if ("undefined" == typeof Reflect || !Reflect.construct || Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), !0
                } catch (t) {
                    return !1
                }
            }

            function w(t) {
                return -1 !== Function.toString.call(t).indexOf("[native code]")
            }

            function v(t, e) {
                return (v = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
                    return t.__proto__ = e, t
                })(t, e)
            }

            function E(t) {
                return (E = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                })(t)
            }

            function x(t) {
                return (x = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                })(t)
            }
            var S = r(85508).inspect,
                O = r(61769).codes.ERR_INVALID_ARG_TYPE;

            function C(t, e, r) {
                return (void 0 === r || r > t.length) && (r = t.length), t.substring(r - e.length, r) === e
            }

            function _(t, e) {
                if (e = Math.floor(e), 0 == t.length || 0 == e) return "";
                var r = t.length * e;
                for (e = Math.floor(Math.log(e) / Math.log(2)); e;) t += t, e--;
                return t + t.substring(0, r - t.length)
            }
            var A = "",
                P = "",
                k = "",
                D = "",
                I = {
                    deepStrictEqual: "Expected values to be strictly deep-equal:",
                    strictEqual: "Expected values to be strictly equal:",
                    strictEqualObject: 'Expected "actual" to be reference-equal to "expected":',
                    deepEqual: "Expected values to be loosely deep-equal:",
                    equal: "Expected values to be loosely equal:",
                    notDeepStrictEqual: 'Expected "actual" not to be strictly deep-equal to:',
                    notStrictEqual: 'Expected "actual" to be strictly unequal to:',
                    notStrictEqualObject: 'Expected "actual" not to be reference-equal to "expected":',
                    notDeepEqual: 'Expected "actual" not to be loosely deep-equal to:',
                    notEqual: 'Expected "actual" to be loosely unequal to:',
                    notIdentical: "Values identical but not reference-equal:"
                },
                M = 10;

            function B(t) {
                var e = Object.keys(t),
                    r = Object.create(Object.getPrototypeOf(t));
                return e.forEach(function(e) {
                    r[e] = t[e]
                }), Object.defineProperty(r, "message", {
                    value: t.message
                }), r
            }

            function R(t) {
                return S(t, {
                    compact: !1,
                    customInspect: !1,
                    depth: 1e3,
                    maxArrayLength: 1 / 0,
                    showHidden: !1,
                    breakLength: 1 / 0,
                    showProxy: !1,
                    sorted: !0,
                    getters: !0
                })
            }

            function T(t, e, r) {
                var i = "",
                    o = "",
                    s = 0,
                    a = "",
                    u = !1,
                    c = R(t),
                    l = c.split("\n"),
                    h = R(e).split("\n"),
                    f = 0,
                    d = "";
                if ("strictEqual" === r && "object" === x(t) && "object" === x(e) && null !== t && null !== e && (r = "strictEqualObject"), 1 === l.length && 1 === h.length && l[0] !== h[0]) {
                    var p = l[0].length + h[0].length;
                    if (p <= M) {
                        if (("object" !== x(t) || null === t) && ("object" !== x(e) || null === e) && (0 !== t || 0 !== e)) return "".concat(I[r], "\n\n") + "".concat(l[0], " !== ").concat(h[0], "\n")
                    } else if ("strictEqualObject" !== r && p < (n.stderr && n.stderr.isTTY ? n.stderr.columns : 80)) {
                        for (; l[0][f] === h[0][f];) f++;
                        f > 2 && (d = "\n  ".concat(_(" ", f), "^"), f = 0)
                    }
                }
                for (var y = l[l.length - 1], m = h[h.length - 1]; y === m && (f++ < 2 ? a = "\n  ".concat(y).concat(a) : i = y, l.pop(), h.pop(), 0 !== l.length && 0 !== h.length);) y = l[l.length - 1], m = h[h.length - 1];
                var b = Math.max(l.length, h.length);
                if (0 === b) {
                    var g = c.split("\n");
                    if (g.length > 30)
                        for (g[26] = "".concat(A, "...").concat(D); g.length > 27;) g.pop();
                    return "".concat(I.notIdentical, "\n\n").concat(g.join("\n"), "\n")
                }
                f > 3 && (a = "\n".concat(A, "...").concat(D).concat(a), u = !0), "" !== i && (a = "\n  ".concat(i).concat(a), i = "");
                var w = 0,
                    v = I[r] + "\n".concat(P, "+ actual").concat(D, " ").concat(k, "- expected").concat(D),
                    E = " ".concat(A, "...").concat(D, " Lines skipped");
                for (f = 0; f < b; f++) {
                    var S = f - s;
                    if (l.length < f + 1) S > 1 && f > 2 && (S > 4 ? (o += "\n".concat(A, "...").concat(D), u = !0) : S > 3 && (o += "\n  ".concat(h[f - 2]), w++), o += "\n  ".concat(h[f - 1]), w++), s = f, i += "\n".concat(k, "-").concat(D, " ").concat(h[f]), w++;
                    else if (h.length < f + 1) S > 1 && f > 2 && (S > 4 ? (o += "\n".concat(A, "...").concat(D), u = !0) : S > 3 && (o += "\n  ".concat(l[f - 2]), w++), o += "\n  ".concat(l[f - 1]), w++), s = f, o += "\n".concat(P, "+").concat(D, " ").concat(l[f]), w++;
                    else {
                        var O = h[f],
                            B = l[f],
                            T = B !== O && (!C(B, ",") || B.slice(0, -1) !== O);
                        T && C(O, ",") && O.slice(0, -1) === B && (T = !1, B += ","), T ? (S > 1 && f > 2 && (S > 4 ? (o += "\n".concat(A, "...").concat(D), u = !0) : S > 3 && (o += "\n  ".concat(l[f - 2]), w++), o += "\n  ".concat(l[f - 1]), w++), s = f, o += "\n".concat(P, "+").concat(D, " ").concat(B), i += "\n".concat(k, "-").concat(D, " ").concat(O), w += 2) : (o += i, i = "", (1 === S || 0 === f) && (o += "\n  ".concat(B), w++))
                    }
                    if (w > 20 && f < b - 2) return "".concat(v).concat(E, "\n").concat(o, "\n").concat(A, "...").concat(D).concat(i, "\n") + "".concat(A, "...").concat(D)
                }
                return "".concat(v).concat(u ? E : "", "\n").concat(o).concat(i).concat(a).concat(d)
            }
            var j = function(t, e) {
                f(i, t);
                var r = d(i);

                function i(t) {
                    if (a(this, i), "object" !== x(t) || null === t) throw new O("options", "Object", t);
                    var e, o = t.message,
                        s = t.operator,
                        u = t.stackStartFn,
                        c = t.actual,
                        l = t.expected,
                        h = Error.stackTraceLimit;
                    if (Error.stackTraceLimit = 0, null != o) e = r.call(this, String(o));
                    else if (n.stderr && n.stderr.isTTY && (n.stderr && n.stderr.getColorDepth && 1 !== n.stderr.getColorDepth() ? (A = "\x1b[34m", P = "\x1b[32m", D = "\x1b[39m", k = "\x1b[31m") : (A = "", P = "", D = "", k = "")), "object" === x(c) && null !== c && "object" === x(l) && null !== l && "stack" in c && c instanceof Error && "stack" in l && l instanceof Error && (c = B(c), l = B(l)), "deepStrictEqual" === s || "strictEqual" === s) e = r.call(this, T(c, l, s));
                    else if ("notDeepStrictEqual" === s || "notStrictEqual" === s) {
                        var f = I[s],
                            d = R(c).split("\n");
                        if ("notStrictEqual" === s && "object" === x(c) && null !== c && (f = I.notStrictEqualObject), d.length > 30)
                            for (d[26] = "".concat(A, "...").concat(D); d.length > 27;) d.pop();
                        e = 1 === d.length ? r.call(this, "".concat(f, " ").concat(d[0])) : r.call(this, "".concat(f, "\n\n").concat(d.join("\n"), "\n"))
                    } else {
                        var m = R(c),
                            b = "",
                            g = I[s];
                        "notDeepEqual" === s || "notEqual" === s ? (m = "".concat(I[s], "\n\n").concat(m)).length > 1024 && (m = "".concat(m.slice(0, 1021), "...")) : (b = "".concat(R(l)), m.length > 512 && (m = "".concat(m.slice(0, 509), "...")), b.length > 512 && (b = "".concat(b.slice(0, 509), "...")), "deepEqual" === s || "equal" === s ? m = "".concat(g, "\n\n").concat(m, "\n\nshould equal\n\n") : b = " ".concat(s, " ").concat(b)), e = r.call(this, "".concat(m).concat(b))
                    }
                    return Error.stackTraceLimit = h, e.generatedMessage = !o, Object.defineProperty(y(e), "name", {
                        value: "AssertionError [ERR_ASSERTION]",
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }), e.code = "ERR_ASSERTION", e.actual = c, e.expected = l, e.operator = s, Error.captureStackTrace && Error.captureStackTrace(y(e), u), e.stack, e.name = "AssertionError", p(e)
                }
                return c(i, [{
                    key: "toString",
                    value: function() {
                        return "".concat(this.name, " [").concat(this.code, "]: ").concat(this.message)
                    }
                }, {
                    key: e,
                    value: function(t, e) {
                        return S(this, o(o({}, e), {}, {
                            customInspect: !1,
                            depth: 0
                        }))
                    }
                }]), i
            }(m(Error), S.custom);
            t.exports = j
        },
        61769: function(t, e, r) {
            "use strict";

            function n(t) {
                return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                })(t)
            }

            function i(t, e) {
                for (var r = 0; r < e.length; r++) {
                    var n = e[r];
                    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, s(n.key), n)
                }
            }

            function o(t, e, r) {
                return e && i(t.prototype, e), r && i(t, r), Object.defineProperty(t, "prototype", {
                    writable: !1
                }), t
            }

            function s(t) {
                var e = a(t, "string");
                return "symbol" === n(e) ? e : String(e)
            }

            function a(t, e) {
                if ("object" !== n(t) || null === t) return t;
                var r = t[Symbol.toPrimitive];
                if (void 0 !== r) {
                    var i = r.call(t, e || "default");
                    if ("object" !== n(i)) return i;
                    throw TypeError("@@toPrimitive must return a primitive value.")
                }
                return ("string" === e ? String : Number)(t)
            }

            function u(t, e) {
                if (!(t instanceof e)) throw TypeError("Cannot call a class as a function")
            }

            function c(t, e) {
                if ("function" != typeof e && null !== e) throw TypeError("Super expression must either be null or a function");
                t.prototype = Object.create(e && e.prototype, {
                    constructor: {
                        value: t,
                        writable: !0,
                        configurable: !0
                    }
                }), Object.defineProperty(t, "prototype", {
                    writable: !1
                }), e && l(t, e)
            }

            function l(t, e) {
                return (l = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
                    return t.__proto__ = e, t
                })(t, e)
            }

            function h(t) {
                var e = p();
                return function() {
                    var r, n = y(t);
                    return r = e ? Reflect.construct(n, arguments, y(this).constructor) : n.apply(this, arguments), f(this, r)
                }
            }

            function f(t, e) {
                if (e && ("object" === n(e) || "function" == typeof e)) return e;
                if (void 0 !== e) throw TypeError("Derived constructors may only return object or undefined");
                return d(t)
            }

            function d(t) {
                if (void 0 === t) throw ReferenceError("this hasn't been initialised - super() hasn't been called");
                return t
            }

            function p() {
                if ("undefined" == typeof Reflect || !Reflect.construct || Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), !0
                } catch (t) {
                    return !1
                }
            }

            function y(t) {
                return (y = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                })(t)
            }
            var m, b, g = {};

            function w(t, e, r) {
                function n(t, r, n) {
                    return "string" == typeof e ? e : e(t, r, n)
                }
                r || (r = Error);
                var i = function(e) {
                    c(i, e);
                    var r = h(i);

                    function i(e, o, s) {
                        var a;
                        return u(this, i), (a = r.call(this, n(e, o, s))).code = t, a
                    }
                    return o(i)
                }(r);
                g[t] = i
            }

            function v(t, e) {
                if (!Array.isArray(t)) return "of ".concat(e, " ").concat(String(t));
                var r = t.length;
                return (t = t.map(function(t) {
                    return String(t)
                }), r > 2) ? "one of ".concat(e, " ").concat(t.slice(0, r - 1).join(", "), ", or ") + t[r - 1] : 2 === r ? "one of ".concat(e, " ").concat(t[0], " or ").concat(t[1]) : "of ".concat(e, " ").concat(t[0])
            }

            function E(t, e, r) {
                return t.substr(!r || r < 0 ? 0 : +r, e.length) === e
            }

            function x(t, e, r) {
                return (void 0 === r || r > t.length) && (r = t.length), t.substring(r - e.length, r) === e
            }

            function S(t, e, r) {
                return "number" != typeof r && (r = 0), !(r + e.length > t.length) && -1 !== t.indexOf(e, r)
            }
            w("ERR_AMBIGUOUS_ARGUMENT", 'The "%s" argument is ambiguous. %s', TypeError), w("ERR_INVALID_ARG_TYPE", function(t, e, i) {
                if (void 0 === m && (m = r(69894)), m("string" == typeof t, "'name' must be a string"), "string" == typeof e && E(e, "not ") ? (o = "must not be", e = e.replace(/^not /, "")) : o = "must be", x(t, " argument")) s = "The ".concat(t, " ").concat(o, " ").concat(v(e, "type"));
                else {
                    var o, s, a = S(t, ".") ? "property" : "argument";
                    s = 'The "'.concat(t, '" ').concat(a, " ").concat(o, " ").concat(v(e, "type"))
                }
                return s + ". Received type ".concat(n(i))
            }, TypeError), w("ERR_INVALID_ARG_VALUE", function(t, e) {
                var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "is invalid";
                void 0 === b && (b = r(85508));
                var i = b.inspect(e);
                return i.length > 128 && (i = "".concat(i.slice(0, 128), "...")), "The argument '".concat(t, "' ").concat(n, ". Received ").concat(i)
            }, TypeError, RangeError), w("ERR_INVALID_RETURN_VALUE", function(t, e, r) {
                var i;
                return i = r && r.constructor && r.constructor.name ? "instance of ".concat(r.constructor.name) : "type ".concat(n(r)), "Expected ".concat(t, ' to be returned from the "').concat(e, '"') + " function but got ".concat(i, ".")
            }, TypeError), w("ERR_MISSING_ARGS", function() {
                for (var t = arguments.length, e = Array(t), n = 0; n < t; n++) e[n] = arguments[n];
                void 0 === m && (m = r(69894)), m(e.length > 0, "At least one arg needs to be specified");
                var i = "The ",
                    o = e.length;
                switch (e = e.map(function(t) {
                    return '"'.concat(t, '"')
                }), o) {
                    case 1:
                        i += "".concat(e[0], " argument");
                        break;
                    case 2:
                        i += "".concat(e[0], " and ").concat(e[1], " arguments");
                        break;
                    default:
                        i += e.slice(0, o - 1).join(", ") + ", and ".concat(e[o - 1], " arguments")
                }
                return "".concat(i, " must be specified")
            }, TypeError), t.exports.codes = g
        },
        21751: function(t, e, r) {
            "use strict";

            function n(t, e) {
                return u(t) || a(t, e) || o(t, e) || i()
            }

            function i() {
                throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }

            function o(t, e) {
                if (t) {
                    if ("string" == typeof t) return s(t, e);
                    var r = Object.prototype.toString.call(t).slice(8, -1);
                    if ("Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r) return Array.from(t);
                    if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return s(t, e)
                }
            }

            function s(t, e) {
                (null == e || e > t.length) && (e = t.length);
                for (var r = 0, n = Array(e); r < e; r++) n[r] = t[r];
                return n
            }

            function a(t, e) {
                var r = null == t ? null : "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                if (null != r) {
                    var n, i, o, s, a = [],
                        u = !0,
                        c = !1;
                    try {
                        if (o = (r = r.call(t)).next, 0 === e) {
                            if (Object(r) !== r) return;
                            u = !1
                        } else
                            for (; !(u = (n = o.call(r)).done) && (a.push(n.value), a.length !== e); u = !0);
                    } catch (t) {
                        c = !0, i = t
                    } finally {
                        try {
                            if (!u && null != r.return && (s = r.return(), Object(s) !== s)) return
                        } finally {
                            if (c) throw i
                        }
                    }
                    return a
                }
            }

            function u(t) {
                if (Array.isArray(t)) return t
            }

            function c(t) {
                return (c = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                })(t)
            }
            var l = void 0 !== /a/g.flags,
                h = function(t) {
                    var e = [];
                    return t.forEach(function(t) {
                        return e.push(t)
                    }), e
                },
                f = function(t) {
                    var e = [];
                    return t.forEach(function(t, r) {
                        return e.push([r, t])
                    }), e
                },
                d = Object.is ? Object.is : r(60466),
                p = Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols : function() {
                    return []
                },
                y = Number.isNaN ? Number.isNaN : r(30664);

            function m(t) {
                return t.call.bind(t)
            }
            var b = m(Object.prototype.hasOwnProperty),
                g = m(Object.prototype.propertyIsEnumerable),
                w = m(Object.prototype.toString),
                v = r(85508).types,
                E = v.isAnyArrayBuffer,
                x = v.isArrayBufferView,
                S = v.isDate,
                O = v.isMap,
                C = v.isRegExp,
                _ = v.isSet,
                A = v.isNativeError,
                P = v.isBoxedPrimitive,
                k = v.isNumberObject,
                D = v.isStringObject,
                I = v.isBooleanObject,
                M = v.isBigIntObject,
                B = v.isSymbolObject,
                R = v.isFloat32Array,
                T = v.isFloat64Array;

            function j(t) {
                if (0 === t.length || t.length > 10) return !0;
                for (var e = 0; e < t.length; e++) {
                    var r = t.charCodeAt(e);
                    if (r < 48 || r > 57) return !0
                }
                return 10 === t.length && t >= 4294967296
            }

            function U(t) {
                return Object.keys(t).filter(j).concat(p(t).filter(Object.prototype.propertyIsEnumerable.bind(t)))
            }
            /*!
             * The buffer module from node.js, for the browser.
             *
             * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
             * @license  MIT
             */
            function N(t, e) {
                if (t === e) return 0;
                for (var r = t.length, n = e.length, i = 0, o = Math.min(r, n); i < o; ++i)
                    if (t[i] !== e[i]) {
                        r = t[i], n = e[i];
                        break
                    }
                return r < n ? -1 : n < r ? 1 : 0
            }
            var F = void 0,
                L = !0,
                q = !1,
                $ = 0,
                W = 1,
                G = 2,
                z = 3;

            function H(t, e) {
                return l ? t.source === e.source && t.flags === e.flags : RegExp.prototype.toString.call(t) === RegExp.prototype.toString.call(e)
            }

            function K(t, e) {
                if (t.byteLength !== e.byteLength) return !1;
                for (var r = 0; r < t.byteLength; r++)
                    if (t[r] !== e[r]) return !1;
                return !0
            }

            function V(t, e) {
                return t.byteLength === e.byteLength && 0 === N(new Uint8Array(t.buffer, t.byteOffset, t.byteLength), new Uint8Array(e.buffer, e.byteOffset, e.byteLength))
            }

            function Q(t, e) {
                return t.byteLength === e.byteLength && 0 === N(new Uint8Array(t), new Uint8Array(e))
            }

            function Z(t, e) {
                return k(t) ? k(e) && d(Number.prototype.valueOf.call(t), Number.prototype.valueOf.call(e)) : D(t) ? D(e) && String.prototype.valueOf.call(t) === String.prototype.valueOf.call(e) : I(t) ? I(e) && Boolean.prototype.valueOf.call(t) === Boolean.prototype.valueOf.call(e) : M(t) ? M(e) && BigInt.prototype.valueOf.call(t) === BigInt.prototype.valueOf.call(e) : B(e) && Symbol.prototype.valueOf.call(t) === Symbol.prototype.valueOf.call(e)
            }

            function Y(t, e, r, n) {
                if (t === e) return 0 !== t || !r || d(t, e);
                if (r) {
                    if ("object" !== c(t)) return "number" == typeof t && y(t) && y(e);
                    if ("object" !== c(e) || null === t || null === e || Object.getPrototypeOf(t) !== Object.getPrototypeOf(e)) return !1
                } else {
                    if (null === t || "object" !== c(t)) return (null === e || "object" !== c(e)) && t == e;
                    if (null === e || "object" !== c(e)) return !1
                }
                var i = w(t);
                if (i !== w(e)) return !1;
                if (Array.isArray(t)) {
                    if (t.length !== e.length) return !1;
                    var o = U(t, F),
                        s = U(e, F);
                    return o.length === s.length && X(t, e, r, n, W, o)
                }
                if ("[object Object]" === i && (!O(t) && O(e) || !_(t) && _(e))) return !1;
                if (S(t)) {
                    if (!S(e) || Date.prototype.getTime.call(t) !== Date.prototype.getTime.call(e)) return !1
                } else if (C(t)) {
                    if (!C(e) || !H(t, e)) return !1
                } else if (A(t) || t instanceof Error) {
                    if (t.message !== e.message || t.name !== e.name) return !1
                } else if (x(t)) {
                    if (!r && (R(t) || T(t))) {
                        if (!K(t, e)) return !1
                    } else if (!V(t, e)) return !1;
                    var a = U(t, F),
                        u = U(e, F);
                    return a.length === u.length && X(t, e, r, n, $, a)
                } else if (_(t)) return !!_(e) && t.size === e.size && X(t, e, r, n, G);
                else if (O(t)) return !!O(e) && t.size === e.size && X(t, e, r, n, z);
                else if (E(t)) {
                    if (!Q(t, e)) return !1
                } else if (P(t) && !Z(t, e)) return !1;
                return X(t, e, r, n, $)
            }

            function J(t, e) {
                return e.filter(function(e) {
                    return g(t, e)
                })
            }

            function X(t, e, r, n, i, o) {
                if (5 == arguments.length) {
                    o = Object.keys(t);
                    var s = Object.keys(e);
                    if (o.length !== s.length) return !1
                }
                for (var a = 0; a < o.length; a++)
                    if (!b(e, o[a])) return !1;
                if (r && 5 == arguments.length) {
                    var u = p(t);
                    if (0 !== u.length) {
                        var c = 0;
                        for (a = 0; a < u.length; a++) {
                            var l = u[a];
                            if (g(t, l)) {
                                if (!g(e, l)) return !1;
                                o.push(l), c++
                            } else if (g(e, l)) return !1
                        }
                        var h = p(e);
                        if (u.length !== h.length && J(e, h).length !== c) return !1
                    } else {
                        var f = p(e);
                        if (0 !== f.length && 0 !== J(e, f).length) return !1
                    }
                }
                if (0 === o.length && (i === $ || i === W && 0 === t.length || 0 === t.size)) return !0;
                if (void 0 === n) n = {
                    val1: new Map,
                    val2: new Map,
                    position: 0
                };
                else {
                    var d = n.val1.get(t);
                    if (void 0 !== d) {
                        var y = n.val2.get(e);
                        if (void 0 !== y) return d === y
                    }
                    n.position++
                }
                n.val1.set(t, n.position), n.val2.set(e, n.position);
                var m = ta(t, e, r, o, n, i);
                return n.val1.delete(t), n.val2.delete(e), m
            }

            function tt(t, e, r, n) {
                for (var i = h(t), o = 0; o < i.length; o++) {
                    var s = i[o];
                    if (Y(e, s, r, n)) return t.delete(s), !0
                }
                return !1
            }

            function te(t) {
                switch (c(t)) {
                    case "undefined":
                        return null;
                    case "object":
                        return;
                    case "symbol":
                        return !1;
                    case "string":
                        t = +t;
                    case "number":
                        if (y(t)) return !1
                }
                return !0
            }

            function tr(t, e, r) {
                var n = te(r);
                return null != n ? n : e.has(n) && !t.has(n)
            }

            function tn(t, e, r, n, i) {
                var o = te(r);
                if (null != o) return o;
                var s = e.get(o);
                return !!((void 0 !== s || e.has(o)) && Y(n, s, !1, i)) && !t.has(o) && Y(n, s, !1, i)
            }

            function ti(t, e, r, n) {
                for (var i = null, o = h(t), s = 0; s < o.length; s++) {
                    var a = o[s];
                    if ("object" === c(a) && null !== a) null === i && (i = new Set), i.add(a);
                    else if (!e.has(a)) {
                        if (r || !tr(t, e, a)) return !1;
                        null === i && (i = new Set), i.add(a)
                    }
                }
                if (null !== i) {
                    for (var u = h(e), l = 0; l < u.length; l++) {
                        var f = u[l];
                        if ("object" === c(f) && null !== f) {
                            if (!tt(i, f, r, n)) return !1
                        } else if (!r && !t.has(f) && !tt(i, f, r, n)) return !1
                    }
                    return 0 === i.size
                }
                return !0
            }

            function to(t, e, r, n, i, o) {
                for (var s = h(t), a = 0; a < s.length; a++) {
                    var u = s[a];
                    if (Y(r, u, i, o) && Y(n, e.get(u), i, o)) return t.delete(u), !0
                }
                return !1
            }

            function ts(t, e, r, i) {
                for (var o = null, s = f(t), a = 0; a < s.length; a++) {
                    var u = n(s[a], 2),
                        l = u[0],
                        h = u[1];
                    if ("object" === c(l) && null !== l) null === o && (o = new Set), o.add(l);
                    else {
                        var d = e.get(l);
                        if (void 0 === d && !e.has(l) || !Y(h, d, r, i)) {
                            if (r || !tn(t, e, l, h, i)) return !1;
                            null === o && (o = new Set), o.add(l)
                        }
                    }
                }
                if (null !== o) {
                    for (var p = f(e), y = 0; y < p.length; y++) {
                        var m = n(p[y], 2),
                            b = m[0],
                            g = m[1];
                        if ("object" === c(b) && null !== b) {
                            if (!to(o, t, b, g, r, i)) return !1
                        } else if (!r && (!t.has(b) || !Y(t.get(b), g, !1, i)) && !to(o, t, b, g, !1, i)) return !1
                    }
                    return 0 === o.size
                }
                return !0
            }

            function ta(t, e, r, n, i, o) {
                var s = 0;
                if (o === G) {
                    if (!ti(t, e, r, i)) return !1
                } else if (o === z) {
                    if (!ts(t, e, r, i)) return !1
                } else if (o === W)
                    for (; s < t.length; s++)
                        if (b(t, s)) {
                            if (!b(e, s) || !Y(t[s], e[s], r, i)) return !1
                        } else {
                            if (b(e, s)) return !1;
                            for (var a = Object.keys(t); s < a.length; s++) {
                                var u = a[s];
                                if (!b(e, u) || !Y(t[u], e[u], r, i)) return !1
                            }
                            if (a.length !== Object.keys(e).length) return !1;
                            return !0
                        }
                for (s = 0; s < n.length; s++) {
                    var c = n[s];
                    if (!Y(t[c], e[c], r, i)) return !1
                }
                return !0
            }

            function tu(t, e) {
                return Y(t, e, q)
            }

            function tc(t, e) {
                return Y(t, e, L)
            }
            t.exports = {
                isDeepEqual: tu,
                isDeepStrictEqual: tc
            }
        },
        18282: function(t, e, r) {
            "use strict";
            var n = r(73306).Buffer;

            function i(t) {
                if (t.length >= 255) throw TypeError("Alphabet too long");
                for (var e = new Uint8Array(256), r = 0; r < e.length; r++) e[r] = 255;
                for (var i = 0; i < t.length; i++) {
                    var o = t.charAt(i),
                        s = o.charCodeAt(0);
                    if (255 !== e[s]) throw TypeError(o + " is ambiguous");
                    e[s] = i
                }
                var a = t.length,
                    u = t.charAt(0),
                    c = Math.log(a) / Math.log(256),
                    l = Math.log(256) / Math.log(a);

                function h(t) {
                    if ("string" != typeof t) throw TypeError("Expected String");
                    if (0 === t.length) return n.alloc(0);
                    for (var r = 0, i = 0, o = 0; t[r] === u;) i++, r++;
                    for (var s = (t.length - r) * c + 1 >>> 0, l = new Uint8Array(s); t[r];) {
                        var h = e[t.charCodeAt(r)];
                        if (255 === h) return;
                        for (var f = 0, d = s - 1;
                            (0 !== h || f < o) && -1 !== d; d--, f++) h += a * l[d] >>> 0, l[d] = h % 256 >>> 0, h = h / 256 >>> 0;
                        if (0 !== h) throw Error("Non-zero carry");
                        o = f, r++
                    }
                    for (var p = s - o; p !== s && 0 === l[p];) p++;
                    var y = n.allocUnsafe(i + (s - p));
                    y.fill(0, 0, i);
                    for (var m = i; p !== s;) y[m++] = l[p++];
                    return y
                }

                function f(t) {
                    var e = h(t);
                    if (e) return e;
                    throw Error("Non-base" + a + " character")
                }
                return {
                    encode: function(e) {
                        if ((Array.isArray(e) || e instanceof Uint8Array) && (e = n.from(e)), !n.isBuffer(e)) throw TypeError("Expected Buffer");
                        if (0 === e.length) return "";
                        for (var r = 0, i = 0, o = 0, s = e.length; o !== s && 0 === e[o];) o++, r++;
                        for (var c = (s - o) * l + 1 >>> 0, h = new Uint8Array(c); o !== s;) {
                            for (var f = e[o], d = 0, p = c - 1;
                                (0 !== f || d < i) && -1 !== p; p--, d++) f += 256 * h[p] >>> 0, h[p] = f % a >>> 0, f = f / a >>> 0;
                            if (0 !== f) throw Error("Non-zero carry");
                            i = d, o++
                        }
                        for (var y = c - i; y !== c && 0 === h[y];) y++;
                        for (var m = u.repeat(r); y < c; ++y) m += t.charAt(h[y]);
                        return m
                    },
                    decodeUnsafe: h,
                    decode: f
                }
            }
            t.exports = i
        },
        21089: function(t, e, r) {
            "use strict";
            var n, i = r(82957).Buffer;

            function o(t) {
                {
                    let e = i.from(t);
                    e.reverse();
                    let r = e.toString("hex");
                    return 0 === r.length ? BigInt(0) : BigInt(`0x${r}`)
                }
            }

            function s(t, e) {
                {
                    let r = t.toString(16),
                        n = i.from(r.padStart(2 * e, "0").slice(0, 2 * e), "hex");
                    return n.reverse(), n
                }
            }
            n = {
                value: !0
            }, e.oU = o, n = function(t) {
                {
                    let e = t.toString("hex");
                    return 0 === e.length ? BigInt(0) : BigInt(`0x${e}`)
                }
            }, e.k$ = s
        },
        44373: function(t, e, r) {
            ! function(t, e) {
                "use strict";

                function n(t, e) {
                    if (!t) throw Error(e || "Assertion failed")
                }

                function i(t, e) {
                    t.super_ = e;
                    var r = function() {};
                    r.prototype = e.prototype, t.prototype = new r, t.prototype.constructor = t
                }

                function o(t, e, r) {
                    if (o.isBN(t)) return t;
                    this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== t && (("le" === e || "be" === e) && (r = e, e = 10), this._init(t || 0, e || 10, r || "be"))
                }
                "object" == typeof t ? t.exports = o : e.BN = o, o.BN = o, o.wordSize = 26;
                try {
                    h = "undefined" != typeof window && void 0 !== window.Buffer ? window.Buffer : r(46601).Buffer
                } catch (t) {}

                function s(t, e) {
                    var r = t.charCodeAt(e);
                    return r >= 48 && r <= 57 ? r - 48 : r >= 65 && r <= 70 ? r - 55 : r >= 97 && r <= 102 ? r - 87 : void n(!1, "Invalid character in " + t)
                }

                function a(t, e, r) {
                    var n = s(t, r);
                    return r - 1 >= e && (n |= s(t, r - 1) << 4), n
                }

                function u(t, e, r, i) {
                    for (var o = 0, s = 0, a = Math.min(t.length, r), u = e; u < a; u++) {
                        var c = t.charCodeAt(u) - 48;
                        o *= i, s = c >= 49 ? c - 49 + 10 : c >= 17 ? c - 17 + 10 : c, n(c >= 0 && s < i, "Invalid character"), o += s
                    }
                    return o
                }

                function c(t, e) {
                    t.words = e.words, t.length = e.length, t.negative = e.negative, t.red = e.red
                }
                if (o.isBN = function(t) {
                        return t instanceof o || null !== t && "object" == typeof t && t.constructor.wordSize === o.wordSize && Array.isArray(t.words)
                    }, o.max = function(t, e) {
                        return t.cmp(e) > 0 ? t : e
                    }, o.min = function(t, e) {
                        return 0 > t.cmp(e) ? t : e
                    }, o.prototype._init = function(t, e, r) {
                        if ("number" == typeof t) return this._initNumber(t, e, r);
                        if ("object" == typeof t) return this._initArray(t, e, r);
                        "hex" === e && (e = 16), n(e === (0 | e) && e >= 2 && e <= 36);
                        var i = 0;
                        "-" === (t = t.toString().replace(/\s+/g, ""))[0] && (i++, this.negative = 1), i < t.length && (16 === e ? this._parseHex(t, i, r) : (this._parseBase(t, e, i), "le" === r && this._initArray(this.toArray(), e, r)))
                    }, o.prototype._initNumber = function(t, e, r) {
                        t < 0 && (this.negative = 1, t = -t), t < 67108864 ? (this.words = [67108863 & t], this.length = 1) : t < 4503599627370496 ? (this.words = [67108863 & t, t / 67108864 & 67108863], this.length = 2) : (n(t < 9007199254740992), this.words = [67108863 & t, t / 67108864 & 67108863, 1], this.length = 3), "le" === r && this._initArray(this.toArray(), e, r)
                    }, o.prototype._initArray = function(t, e, r) {
                        if (n("number" == typeof t.length), t.length <= 0) return this.words = [0], this.length = 1, this;
                        this.length = Math.ceil(t.length / 3), this.words = Array(this.length);
                        for (var i, o, s = 0; s < this.length; s++) this.words[s] = 0;
                        var a = 0;
                        if ("be" === r)
                            for (s = t.length - 1, i = 0; s >= 0; s -= 3) o = t[s] | t[s - 1] << 8 | t[s - 2] << 16, this.words[i] |= o << a & 67108863, this.words[i + 1] = o >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, i++);
                        else if ("le" === r)
                            for (s = 0, i = 0; s < t.length; s += 3) o = t[s] | t[s + 1] << 8 | t[s + 2] << 16, this.words[i] |= o << a & 67108863, this.words[i + 1] = o >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, i++);
                        return this._strip()
                    }, o.prototype._parseHex = function(t, e, r) {
                        this.length = Math.ceil((t.length - e) / 6), this.words = Array(this.length);
                        for (var n, i = 0; i < this.length; i++) this.words[i] = 0;
                        var o = 0,
                            s = 0;
                        if ("be" === r)
                            for (i = t.length - 1; i >= e; i -= 2) n = a(t, e, i) << o, this.words[s] |= 67108863 & n, o >= 18 ? (o -= 18, s += 1, this.words[s] |= n >>> 26) : o += 8;
                        else
                            for (i = (t.length - e) % 2 == 0 ? e + 1 : e; i < t.length; i += 2) n = a(t, e, i) << o, this.words[s] |= 67108863 & n, o >= 18 ? (o -= 18, s += 1, this.words[s] |= n >>> 26) : o += 8;
                        this._strip()
                    }, o.prototype._parseBase = function(t, e, r) {
                        this.words = [0], this.length = 1;
                        for (var n = 0, i = 1; i <= 67108863; i *= e) n++;
                        n--, i = i / e | 0;
                        for (var o = t.length - r, s = o % n, a = Math.min(o, o - s) + r, c = 0, l = r; l < a; l += n) c = u(t, l, l + n, e), this.imuln(i), this.words[0] + c < 67108864 ? this.words[0] += c : this._iaddn(c);
                        if (0 !== s) {
                            var h = 1;
                            for (c = u(t, l, t.length, e), l = 0; l < s; l++) h *= e;
                            this.imuln(h), this.words[0] + c < 67108864 ? this.words[0] += c : this._iaddn(c)
                        }
                        this._strip()
                    }, o.prototype.copy = function(t) {
                        t.words = Array(this.length);
                        for (var e = 0; e < this.length; e++) t.words[e] = this.words[e];
                        t.length = this.length, t.negative = this.negative, t.red = this.red
                    }, o.prototype._move = function(t) {
                        c(t, this)
                    }, o.prototype.clone = function() {
                        var t = new o(null);
                        return this.copy(t), t
                    }, o.prototype._expand = function(t) {
                        for (; this.length < t;) this.words[this.length++] = 0;
                        return this
                    }, o.prototype._strip = function() {
                        for (; this.length > 1 && 0 === this.words[this.length - 1];) this.length--;
                        return this._normSign()
                    }, o.prototype._normSign = function() {
                        return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this
                    }, "undefined" != typeof Symbol && "function" == typeof Symbol.for) try {
                    o.prototype[Symbol.for("nodejs.util.inspect.custom")] = l
                } catch (t) {
                    o.prototype.inspect = l
                } else o.prototype.inspect = l;

                function l() {
                    return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">"
                }
                var h, f = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"],
                    d = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                    p = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
                o.prototype.toString = function(t, e) {
                    if (e = 0 | e || 1, 16 === (t = t || 10) || "hex" === t) {
                        r = "";
                        for (var r, i = 0, o = 0, s = 0; s < this.length; s++) {
                            var a = this.words[s],
                                u = ((a << i | o) & 16777215).toString(16);
                            o = a >>> 24 - i & 16777215, (i += 2) >= 26 && (i -= 26, s--), r = 0 !== o || s !== this.length - 1 ? f[6 - u.length] + u + r : u + r
                        }
                        for (0 !== o && (r = o.toString(16) + r); r.length % e != 0;) r = "0" + r;
                        return 0 !== this.negative && (r = "-" + r), r
                    }
                    if (t === (0 | t) && t >= 2 && t <= 36) {
                        var c = d[t],
                            l = p[t];
                        r = "";
                        var h = this.clone();
                        for (h.negative = 0; !h.isZero();) {
                            var y = h.modrn(l).toString(t);
                            r = (h = h.idivn(l)).isZero() ? y + r : f[c - y.length] + y + r
                        }
                        for (this.isZero() && (r = "0" + r); r.length % e != 0;) r = "0" + r;
                        return 0 !== this.negative && (r = "-" + r), r
                    }
                    n(!1, "Base should be between 2 and 36")
                }, o.prototype.toNumber = function() {
                    var t = this.words[0];
                    return 2 === this.length ? t += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? t += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && n(!1, "Number can only safely store up to 53 bits"), 0 !== this.negative ? -t : t
                }, o.prototype.toJSON = function() {
                    return this.toString(16, 2)
                }, h && (o.prototype.toBuffer = function(t, e) {
                    return this.toArrayLike(h, t, e)
                }), o.prototype.toArray = function(t, e) {
                    return this.toArrayLike(Array, t, e)
                };
                var y = function(t, e) {
                    return t.allocUnsafe ? t.allocUnsafe(e) : new t(e)
                };

                function m(t) {
                    for (var e = Array(t.bitLength()), r = 0; r < e.length; r++) {
                        var n = r / 26 | 0,
                            i = r % 26;
                        e[r] = t.words[n] >>> i & 1
                    }
                    return e
                }

                function b(t, e, r) {
                    r.negative = e.negative ^ t.negative;
                    var n = t.length + e.length | 0;
                    r.length = n, n = n - 1 | 0;
                    var i = 0 | t.words[0],
                        o = 0 | e.words[0],
                        s = i * o,
                        a = 67108863 & s,
                        u = s / 67108864 | 0;
                    r.words[0] = a;
                    for (var c = 1; c < n; c++) {
                        for (var l = u >>> 26, h = 67108863 & u, f = Math.min(c, e.length - 1), d = Math.max(0, c - t.length + 1); d <= f; d++) {
                            var p = c - d | 0;
                            l += (s = (i = 0 | t.words[p]) * (o = 0 | e.words[d]) + h) / 67108864 | 0, h = 67108863 & s
                        }
                        r.words[c] = 0 | h, u = 0 | l
                    }
                    return 0 !== u ? r.words[c] = 0 | u : r.length--, r._strip()
                }
                o.prototype.toArrayLike = function(t, e, r) {
                    this._strip();
                    var i = this.byteLength(),
                        o = r || Math.max(1, i);
                    n(i <= o, "byte array longer than desired length"), n(o > 0, "Requested array length <= 0");
                    var s = y(t, o);
                    return this["_toArrayLike" + ("le" === e ? "LE" : "BE")](s, i), s
                }, o.prototype._toArrayLikeLE = function(t, e) {
                    for (var r = 0, n = 0, i = 0, o = 0; i < this.length; i++) {
                        var s = this.words[i] << o | n;
                        t[r++] = 255 & s, r < t.length && (t[r++] = s >> 8 & 255), r < t.length && (t[r++] = s >> 16 & 255), 6 === o ? (r < t.length && (t[r++] = s >> 24 & 255), n = 0, o = 0) : (n = s >>> 24, o += 2)
                    }
                    if (r < t.length)
                        for (t[r++] = n; r < t.length;) t[r++] = 0
                }, o.prototype._toArrayLikeBE = function(t, e) {
                    for (var r = t.length - 1, n = 0, i = 0, o = 0; i < this.length; i++) {
                        var s = this.words[i] << o | n;
                        t[r--] = 255 & s, r >= 0 && (t[r--] = s >> 8 & 255), r >= 0 && (t[r--] = s >> 16 & 255), 6 === o ? (r >= 0 && (t[r--] = s >> 24 & 255), n = 0, o = 0) : (n = s >>> 24, o += 2)
                    }
                    if (r >= 0)
                        for (t[r--] = n; r >= 0;) t[r--] = 0
                }, Math.clz32 ? o.prototype._countBits = function(t) {
                    return 32 - Math.clz32(t)
                } : o.prototype._countBits = function(t) {
                    var e = t,
                        r = 0;
                    return e >= 4096 && (r += 13, e >>>= 13), e >= 64 && (r += 7, e >>>= 7), e >= 8 && (r += 4, e >>>= 4), e >= 2 && (r += 2, e >>>= 2), r + e
                }, o.prototype._zeroBits = function(t) {
                    if (0 === t) return 26;
                    var e = t,
                        r = 0;
                    return (8191 & e) == 0 && (r += 13, e >>>= 13), (127 & e) == 0 && (r += 7, e >>>= 7), (15 & e) == 0 && (r += 4, e >>>= 4), (3 & e) == 0 && (r += 2, e >>>= 2), (1 & e) == 0 && r++, r
                }, o.prototype.bitLength = function() {
                    var t = this.words[this.length - 1],
                        e = this._countBits(t);
                    return (this.length - 1) * 26 + e
                }, o.prototype.zeroBits = function() {
                    if (this.isZero()) return 0;
                    for (var t = 0, e = 0; e < this.length; e++) {
                        var r = this._zeroBits(this.words[e]);
                        if (t += r, 26 !== r) break
                    }
                    return t
                }, o.prototype.byteLength = function() {
                    return Math.ceil(this.bitLength() / 8)
                }, o.prototype.toTwos = function(t) {
                    return 0 !== this.negative ? this.abs().inotn(t).iaddn(1) : this.clone()
                }, o.prototype.fromTwos = function(t) {
                    return this.testn(t - 1) ? this.notn(t).iaddn(1).ineg() : this.clone()
                }, o.prototype.isNeg = function() {
                    return 0 !== this.negative
                }, o.prototype.neg = function() {
                    return this.clone().ineg()
                }, o.prototype.ineg = function() {
                    return this.isZero() || (this.negative ^= 1), this
                }, o.prototype.iuor = function(t) {
                    for (; this.length < t.length;) this.words[this.length++] = 0;
                    for (var e = 0; e < t.length; e++) this.words[e] = this.words[e] | t.words[e];
                    return this._strip()
                }, o.prototype.ior = function(t) {
                    return n((this.negative | t.negative) == 0), this.iuor(t)
                }, o.prototype.or = function(t) {
                    return this.length > t.length ? this.clone().ior(t) : t.clone().ior(this)
                }, o.prototype.uor = function(t) {
                    return this.length > t.length ? this.clone().iuor(t) : t.clone().iuor(this)
                }, o.prototype.iuand = function(t) {
                    var e;
                    e = this.length > t.length ? t : this;
                    for (var r = 0; r < e.length; r++) this.words[r] = this.words[r] & t.words[r];
                    return this.length = e.length, this._strip()
                }, o.prototype.iand = function(t) {
                    return n((this.negative | t.negative) == 0), this.iuand(t)
                }, o.prototype.and = function(t) {
                    return this.length > t.length ? this.clone().iand(t) : t.clone().iand(this)
                }, o.prototype.uand = function(t) {
                    return this.length > t.length ? this.clone().iuand(t) : t.clone().iuand(this)
                }, o.prototype.iuxor = function(t) {
                    this.length > t.length ? (e = this, r = t) : (e = t, r = this);
                    for (var e, r, n = 0; n < r.length; n++) this.words[n] = e.words[n] ^ r.words[n];
                    if (this !== e)
                        for (; n < e.length; n++) this.words[n] = e.words[n];
                    return this.length = e.length, this._strip()
                }, o.prototype.ixor = function(t) {
                    return n((this.negative | t.negative) == 0), this.iuxor(t)
                }, o.prototype.xor = function(t) {
                    return this.length > t.length ? this.clone().ixor(t) : t.clone().ixor(this)
                }, o.prototype.uxor = function(t) {
                    return this.length > t.length ? this.clone().iuxor(t) : t.clone().iuxor(this)
                }, o.prototype.inotn = function(t) {
                    n("number" == typeof t && t >= 0);
                    var e = 0 | Math.ceil(t / 26),
                        r = t % 26;
                    this._expand(e), r > 0 && e--;
                    for (var i = 0; i < e; i++) this.words[i] = 67108863 & ~this.words[i];
                    return r > 0 && (this.words[i] = ~this.words[i] & 67108863 >> 26 - r), this._strip()
                }, o.prototype.notn = function(t) {
                    return this.clone().inotn(t)
                }, o.prototype.setn = function(t, e) {
                    n("number" == typeof t && t >= 0);
                    var r = t / 26 | 0,
                        i = t % 26;
                    return this._expand(r + 1), e ? this.words[r] = this.words[r] | 1 << i : this.words[r] = this.words[r] & ~(1 << i), this._strip()
                }, o.prototype.iadd = function(t) {
                    if (0 !== this.negative && 0 === t.negative) return this.negative = 0, e = this.isub(t), this.negative ^= 1, this._normSign();
                    if (0 === this.negative && 0 !== t.negative) return t.negative = 0, e = this.isub(t), t.negative = 1, e._normSign();
                    this.length > t.length ? (r = this, n = t) : (r = t, n = this);
                    for (var e, r, n, i = 0, o = 0; o < n.length; o++) e = (0 | r.words[o]) + (0 | n.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                    for (; 0 !== i && o < r.length; o++) e = (0 | r.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                    if (this.length = r.length, 0 !== i) this.words[this.length] = i, this.length++;
                    else if (r !== this)
                        for (; o < r.length; o++) this.words[o] = r.words[o];
                    return this
                }, o.prototype.add = function(t) {
                    var e;
                    return 0 !== t.negative && 0 === this.negative ? (t.negative = 0, e = this.sub(t), t.negative ^= 1, e) : 0 === t.negative && 0 !== this.negative ? (this.negative = 0, e = t.sub(this), this.negative = 1, e) : this.length > t.length ? this.clone().iadd(t) : t.clone().iadd(this)
                }, o.prototype.isub = function(t) {
                    if (0 !== t.negative) {
                        t.negative = 0;
                        var e, r, n = this.iadd(t);
                        return t.negative = 1, n._normSign()
                    }
                    if (0 !== this.negative) return this.negative = 0, this.iadd(t), this.negative = 1, this._normSign();
                    var i = this.cmp(t);
                    if (0 === i) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
                    i > 0 ? (e = this, r = t) : (e = t, r = this);
                    for (var o = 0, s = 0; s < r.length; s++) o = (n = (0 | e.words[s]) - (0 | r.words[s]) + o) >> 26, this.words[s] = 67108863 & n;
                    for (; 0 !== o && s < e.length; s++) o = (n = (0 | e.words[s]) + o) >> 26, this.words[s] = 67108863 & n;
                    if (0 === o && s < e.length && e !== this)
                        for (; s < e.length; s++) this.words[s] = e.words[s];
                    return this.length = Math.max(this.length, s), e !== this && (this.negative = 1), this._strip()
                }, o.prototype.sub = function(t) {
                    return this.clone().isub(t)
                };
                var g = function(t, e, r) {
                    var n, i, o, s = t.words,
                        a = e.words,
                        u = r.words,
                        c = 0,
                        l = 0 | s[0],
                        h = 8191 & l,
                        f = l >>> 13,
                        d = 0 | s[1],
                        p = 8191 & d,
                        y = d >>> 13,
                        m = 0 | s[2],
                        b = 8191 & m,
                        g = m >>> 13,
                        w = 0 | s[3],
                        v = 8191 & w,
                        E = w >>> 13,
                        x = 0 | s[4],
                        S = 8191 & x,
                        O = x >>> 13,
                        C = 0 | s[5],
                        _ = 8191 & C,
                        A = C >>> 13,
                        P = 0 | s[6],
                        k = 8191 & P,
                        D = P >>> 13,
                        I = 0 | s[7],
                        M = 8191 & I,
                        B = I >>> 13,
                        R = 0 | s[8],
                        T = 8191 & R,
                        j = R >>> 13,
                        U = 0 | s[9],
                        N = 8191 & U,
                        F = U >>> 13,
                        L = 0 | a[0],
                        q = 8191 & L,
                        $ = L >>> 13,
                        W = 0 | a[1],
                        G = 8191 & W,
                        z = W >>> 13,
                        H = 0 | a[2],
                        K = 8191 & H,
                        V = H >>> 13,
                        Q = 0 | a[3],
                        Z = 8191 & Q,
                        Y = Q >>> 13,
                        J = 0 | a[4],
                        X = 8191 & J,
                        tt = J >>> 13,
                        te = 0 | a[5],
                        tr = 8191 & te,
                        tn = te >>> 13,
                        ti = 0 | a[6],
                        to = 8191 & ti,
                        ts = ti >>> 13,
                        ta = 0 | a[7],
                        tu = 8191 & ta,
                        tc = ta >>> 13,
                        tl = 0 | a[8],
                        th = 8191 & tl,
                        tf = tl >>> 13,
                        td = 0 | a[9],
                        tp = 8191 & td,
                        ty = td >>> 13;
                    r.negative = t.negative ^ e.negative, r.length = 19;
                    var tm = (c + (n = Math.imul(h, q)) | 0) + ((8191 & (i = (i = Math.imul(h, $)) + Math.imul(f, q) | 0)) << 13) | 0;
                    c = ((o = Math.imul(f, $)) + (i >>> 13) | 0) + (tm >>> 26) | 0, tm &= 67108863, n = Math.imul(p, q), i = (i = Math.imul(p, $)) + Math.imul(y, q) | 0, o = Math.imul(y, $);
                    var tb = (c + (n = n + Math.imul(h, G) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, z) | 0) + Math.imul(f, G) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(f, z) | 0) + (i >>> 13) | 0) + (tb >>> 26) | 0, tb &= 67108863, n = Math.imul(b, q), i = (i = Math.imul(b, $)) + Math.imul(g, q) | 0, o = Math.imul(g, $), n = n + Math.imul(p, G) | 0, i = (i = i + Math.imul(p, z) | 0) + Math.imul(y, G) | 0, o = o + Math.imul(y, z) | 0;
                    var tg = (c + (n = n + Math.imul(h, K) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, V) | 0) + Math.imul(f, K) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(f, V) | 0) + (i >>> 13) | 0) + (tg >>> 26) | 0, tg &= 67108863, n = Math.imul(v, q), i = (i = Math.imul(v, $)) + Math.imul(E, q) | 0, o = Math.imul(E, $), n = n + Math.imul(b, G) | 0, i = (i = i + Math.imul(b, z) | 0) + Math.imul(g, G) | 0, o = o + Math.imul(g, z) | 0, n = n + Math.imul(p, K) | 0, i = (i = i + Math.imul(p, V) | 0) + Math.imul(y, K) | 0, o = o + Math.imul(y, V) | 0;
                    var tw = (c + (n = n + Math.imul(h, Z) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, Y) | 0) + Math.imul(f, Z) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(f, Y) | 0) + (i >>> 13) | 0) + (tw >>> 26) | 0, tw &= 67108863, n = Math.imul(S, q), i = (i = Math.imul(S, $)) + Math.imul(O, q) | 0, o = Math.imul(O, $), n = n + Math.imul(v, G) | 0, i = (i = i + Math.imul(v, z) | 0) + Math.imul(E, G) | 0, o = o + Math.imul(E, z) | 0, n = n + Math.imul(b, K) | 0, i = (i = i + Math.imul(b, V) | 0) + Math.imul(g, K) | 0, o = o + Math.imul(g, V) | 0, n = n + Math.imul(p, Z) | 0, i = (i = i + Math.imul(p, Y) | 0) + Math.imul(y, Z) | 0, o = o + Math.imul(y, Y) | 0;
                    var tv = (c + (n = n + Math.imul(h, X) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, tt) | 0) + Math.imul(f, X) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(f, tt) | 0) + (i >>> 13) | 0) + (tv >>> 26) | 0, tv &= 67108863, n = Math.imul(_, q), i = (i = Math.imul(_, $)) + Math.imul(A, q) | 0, o = Math.imul(A, $), n = n + Math.imul(S, G) | 0, i = (i = i + Math.imul(S, z) | 0) + Math.imul(O, G) | 0, o = o + Math.imul(O, z) | 0, n = n + Math.imul(v, K) | 0, i = (i = i + Math.imul(v, V) | 0) + Math.imul(E, K) | 0, o = o + Math.imul(E, V) | 0, n = n + Math.imul(b, Z) | 0, i = (i = i + Math.imul(b, Y) | 0) + Math.imul(g, Z) | 0, o = o + Math.imul(g, Y) | 0, n = n + Math.imul(p, X) | 0, i = (i = i + Math.imul(p, tt) | 0) + Math.imul(y, X) | 0, o = o + Math.imul(y, tt) | 0;
                    var tE = (c + (n = n + Math.imul(h, tr) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, tn) | 0) + Math.imul(f, tr) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(f, tn) | 0) + (i >>> 13) | 0) + (tE >>> 26) | 0, tE &= 67108863, n = Math.imul(k, q), i = (i = Math.imul(k, $)) + Math.imul(D, q) | 0, o = Math.imul(D, $), n = n + Math.imul(_, G) | 0, i = (i = i + Math.imul(_, z) | 0) + Math.imul(A, G) | 0, o = o + Math.imul(A, z) | 0, n = n + Math.imul(S, K) | 0, i = (i = i + Math.imul(S, V) | 0) + Math.imul(O, K) | 0, o = o + Math.imul(O, V) | 0, n = n + Math.imul(v, Z) | 0, i = (i = i + Math.imul(v, Y) | 0) + Math.imul(E, Z) | 0, o = o + Math.imul(E, Y) | 0, n = n + Math.imul(b, X) | 0, i = (i = i + Math.imul(b, tt) | 0) + Math.imul(g, X) | 0, o = o + Math.imul(g, tt) | 0, n = n + Math.imul(p, tr) | 0, i = (i = i + Math.imul(p, tn) | 0) + Math.imul(y, tr) | 0, o = o + Math.imul(y, tn) | 0;
                    var tx = (c + (n = n + Math.imul(h, to) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, ts) | 0) + Math.imul(f, to) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(f, ts) | 0) + (i >>> 13) | 0) + (tx >>> 26) | 0, tx &= 67108863, n = Math.imul(M, q), i = (i = Math.imul(M, $)) + Math.imul(B, q) | 0, o = Math.imul(B, $), n = n + Math.imul(k, G) | 0, i = (i = i + Math.imul(k, z) | 0) + Math.imul(D, G) | 0, o = o + Math.imul(D, z) | 0, n = n + Math.imul(_, K) | 0, i = (i = i + Math.imul(_, V) | 0) + Math.imul(A, K) | 0, o = o + Math.imul(A, V) | 0, n = n + Math.imul(S, Z) | 0, i = (i = i + Math.imul(S, Y) | 0) + Math.imul(O, Z) | 0, o = o + Math.imul(O, Y) | 0, n = n + Math.imul(v, X) | 0, i = (i = i + Math.imul(v, tt) | 0) + Math.imul(E, X) | 0, o = o + Math.imul(E, tt) | 0, n = n + Math.imul(b, tr) | 0, i = (i = i + Math.imul(b, tn) | 0) + Math.imul(g, tr) | 0, o = o + Math.imul(g, tn) | 0, n = n + Math.imul(p, to) | 0, i = (i = i + Math.imul(p, ts) | 0) + Math.imul(y, to) | 0, o = o + Math.imul(y, ts) | 0;
                    var tS = (c + (n = n + Math.imul(h, tu) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, tc) | 0) + Math.imul(f, tu) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(f, tc) | 0) + (i >>> 13) | 0) + (tS >>> 26) | 0, tS &= 67108863, n = Math.imul(T, q), i = (i = Math.imul(T, $)) + Math.imul(j, q) | 0, o = Math.imul(j, $), n = n + Math.imul(M, G) | 0, i = (i = i + Math.imul(M, z) | 0) + Math.imul(B, G) | 0, o = o + Math.imul(B, z) | 0, n = n + Math.imul(k, K) | 0, i = (i = i + Math.imul(k, V) | 0) + Math.imul(D, K) | 0, o = o + Math.imul(D, V) | 0, n = n + Math.imul(_, Z) | 0, i = (i = i + Math.imul(_, Y) | 0) + Math.imul(A, Z) | 0, o = o + Math.imul(A, Y) | 0, n = n + Math.imul(S, X) | 0, i = (i = i + Math.imul(S, tt) | 0) + Math.imul(O, X) | 0, o = o + Math.imul(O, tt) | 0, n = n + Math.imul(v, tr) | 0, i = (i = i + Math.imul(v, tn) | 0) + Math.imul(E, tr) | 0, o = o + Math.imul(E, tn) | 0, n = n + Math.imul(b, to) | 0, i = (i = i + Math.imul(b, ts) | 0) + Math.imul(g, to) | 0, o = o + Math.imul(g, ts) | 0, n = n + Math.imul(p, tu) | 0, i = (i = i + Math.imul(p, tc) | 0) + Math.imul(y, tu) | 0, o = o + Math.imul(y, tc) | 0;
                    var tO = (c + (n = n + Math.imul(h, th) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, tf) | 0) + Math.imul(f, th) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(f, tf) | 0) + (i >>> 13) | 0) + (tO >>> 26) | 0, tO &= 67108863, n = Math.imul(N, q), i = (i = Math.imul(N, $)) + Math.imul(F, q) | 0, o = Math.imul(F, $), n = n + Math.imul(T, G) | 0, i = (i = i + Math.imul(T, z) | 0) + Math.imul(j, G) | 0, o = o + Math.imul(j, z) | 0, n = n + Math.imul(M, K) | 0, i = (i = i + Math.imul(M, V) | 0) + Math.imul(B, K) | 0, o = o + Math.imul(B, V) | 0, n = n + Math.imul(k, Z) | 0, i = (i = i + Math.imul(k, Y) | 0) + Math.imul(D, Z) | 0, o = o + Math.imul(D, Y) | 0, n = n + Math.imul(_, X) | 0, i = (i = i + Math.imul(_, tt) | 0) + Math.imul(A, X) | 0, o = o + Math.imul(A, tt) | 0, n = n + Math.imul(S, tr) | 0, i = (i = i + Math.imul(S, tn) | 0) + Math.imul(O, tr) | 0, o = o + Math.imul(O, tn) | 0, n = n + Math.imul(v, to) | 0, i = (i = i + Math.imul(v, ts) | 0) + Math.imul(E, to) | 0, o = o + Math.imul(E, ts) | 0, n = n + Math.imul(b, tu) | 0, i = (i = i + Math.imul(b, tc) | 0) + Math.imul(g, tu) | 0, o = o + Math.imul(g, tc) | 0, n = n + Math.imul(p, th) | 0, i = (i = i + Math.imul(p, tf) | 0) + Math.imul(y, th) | 0, o = o + Math.imul(y, tf) | 0;
                    var tC = (c + (n = n + Math.imul(h, tp) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, ty) | 0) + Math.imul(f, tp) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(f, ty) | 0) + (i >>> 13) | 0) + (tC >>> 26) | 0, tC &= 67108863, n = Math.imul(N, G), i = (i = Math.imul(N, z)) + Math.imul(F, G) | 0, o = Math.imul(F, z), n = n + Math.imul(T, K) | 0, i = (i = i + Math.imul(T, V) | 0) + Math.imul(j, K) | 0, o = o + Math.imul(j, V) | 0, n = n + Math.imul(M, Z) | 0, i = (i = i + Math.imul(M, Y) | 0) + Math.imul(B, Z) | 0, o = o + Math.imul(B, Y) | 0, n = n + Math.imul(k, X) | 0, i = (i = i + Math.imul(k, tt) | 0) + Math.imul(D, X) | 0, o = o + Math.imul(D, tt) | 0, n = n + Math.imul(_, tr) | 0, i = (i = i + Math.imul(_, tn) | 0) + Math.imul(A, tr) | 0, o = o + Math.imul(A, tn) | 0, n = n + Math.imul(S, to) | 0, i = (i = i + Math.imul(S, ts) | 0) + Math.imul(O, to) | 0, o = o + Math.imul(O, ts) | 0, n = n + Math.imul(v, tu) | 0, i = (i = i + Math.imul(v, tc) | 0) + Math.imul(E, tu) | 0, o = o + Math.imul(E, tc) | 0, n = n + Math.imul(b, th) | 0, i = (i = i + Math.imul(b, tf) | 0) + Math.imul(g, th) | 0, o = o + Math.imul(g, tf) | 0;
                    var t_ = (c + (n = n + Math.imul(p, tp) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(p, ty) | 0) + Math.imul(y, tp) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(y, ty) | 0) + (i >>> 13) | 0) + (t_ >>> 26) | 0, t_ &= 67108863, n = Math.imul(N, K), i = (i = Math.imul(N, V)) + Math.imul(F, K) | 0, o = Math.imul(F, V), n = n + Math.imul(T, Z) | 0, i = (i = i + Math.imul(T, Y) | 0) + Math.imul(j, Z) | 0, o = o + Math.imul(j, Y) | 0, n = n + Math.imul(M, X) | 0, i = (i = i + Math.imul(M, tt) | 0) + Math.imul(B, X) | 0, o = o + Math.imul(B, tt) | 0, n = n + Math.imul(k, tr) | 0, i = (i = i + Math.imul(k, tn) | 0) + Math.imul(D, tr) | 0, o = o + Math.imul(D, tn) | 0, n = n + Math.imul(_, to) | 0, i = (i = i + Math.imul(_, ts) | 0) + Math.imul(A, to) | 0, o = o + Math.imul(A, ts) | 0, n = n + Math.imul(S, tu) | 0, i = (i = i + Math.imul(S, tc) | 0) + Math.imul(O, tu) | 0, o = o + Math.imul(O, tc) | 0, n = n + Math.imul(v, th) | 0, i = (i = i + Math.imul(v, tf) | 0) + Math.imul(E, th) | 0, o = o + Math.imul(E, tf) | 0;
                    var tA = (c + (n = n + Math.imul(b, tp) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(b, ty) | 0) + Math.imul(g, tp) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(g, ty) | 0) + (i >>> 13) | 0) + (tA >>> 26) | 0, tA &= 67108863, n = Math.imul(N, Z), i = (i = Math.imul(N, Y)) + Math.imul(F, Z) | 0, o = Math.imul(F, Y), n = n + Math.imul(T, X) | 0, i = (i = i + Math.imul(T, tt) | 0) + Math.imul(j, X) | 0, o = o + Math.imul(j, tt) | 0, n = n + Math.imul(M, tr) | 0, i = (i = i + Math.imul(M, tn) | 0) + Math.imul(B, tr) | 0, o = o + Math.imul(B, tn) | 0, n = n + Math.imul(k, to) | 0, i = (i = i + Math.imul(k, ts) | 0) + Math.imul(D, to) | 0, o = o + Math.imul(D, ts) | 0, n = n + Math.imul(_, tu) | 0, i = (i = i + Math.imul(_, tc) | 0) + Math.imul(A, tu) | 0, o = o + Math.imul(A, tc) | 0, n = n + Math.imul(S, th) | 0, i = (i = i + Math.imul(S, tf) | 0) + Math.imul(O, th) | 0, o = o + Math.imul(O, tf) | 0;
                    var tP = (c + (n = n + Math.imul(v, tp) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(v, ty) | 0) + Math.imul(E, tp) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(E, ty) | 0) + (i >>> 13) | 0) + (tP >>> 26) | 0, tP &= 67108863, n = Math.imul(N, X), i = (i = Math.imul(N, tt)) + Math.imul(F, X) | 0, o = Math.imul(F, tt), n = n + Math.imul(T, tr) | 0, i = (i = i + Math.imul(T, tn) | 0) + Math.imul(j, tr) | 0, o = o + Math.imul(j, tn) | 0, n = n + Math.imul(M, to) | 0, i = (i = i + Math.imul(M, ts) | 0) + Math.imul(B, to) | 0, o = o + Math.imul(B, ts) | 0, n = n + Math.imul(k, tu) | 0, i = (i = i + Math.imul(k, tc) | 0) + Math.imul(D, tu) | 0, o = o + Math.imul(D, tc) | 0, n = n + Math.imul(_, th) | 0, i = (i = i + Math.imul(_, tf) | 0) + Math.imul(A, th) | 0, o = o + Math.imul(A, tf) | 0;
                    var tk = (c + (n = n + Math.imul(S, tp) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(S, ty) | 0) + Math.imul(O, tp) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(O, ty) | 0) + (i >>> 13) | 0) + (tk >>> 26) | 0, tk &= 67108863, n = Math.imul(N, tr), i = (i = Math.imul(N, tn)) + Math.imul(F, tr) | 0, o = Math.imul(F, tn), n = n + Math.imul(T, to) | 0, i = (i = i + Math.imul(T, ts) | 0) + Math.imul(j, to) | 0, o = o + Math.imul(j, ts) | 0, n = n + Math.imul(M, tu) | 0, i = (i = i + Math.imul(M, tc) | 0) + Math.imul(B, tu) | 0, o = o + Math.imul(B, tc) | 0, n = n + Math.imul(k, th) | 0, i = (i = i + Math.imul(k, tf) | 0) + Math.imul(D, th) | 0, o = o + Math.imul(D, tf) | 0;
                    var tD = (c + (n = n + Math.imul(_, tp) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(_, ty) | 0) + Math.imul(A, tp) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(A, ty) | 0) + (i >>> 13) | 0) + (tD >>> 26) | 0, tD &= 67108863, n = Math.imul(N, to), i = (i = Math.imul(N, ts)) + Math.imul(F, to) | 0, o = Math.imul(F, ts), n = n + Math.imul(T, tu) | 0, i = (i = i + Math.imul(T, tc) | 0) + Math.imul(j, tu) | 0, o = o + Math.imul(j, tc) | 0, n = n + Math.imul(M, th) | 0, i = (i = i + Math.imul(M, tf) | 0) + Math.imul(B, th) | 0, o = o + Math.imul(B, tf) | 0;
                    var tI = (c + (n = n + Math.imul(k, tp) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(k, ty) | 0) + Math.imul(D, tp) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(D, ty) | 0) + (i >>> 13) | 0) + (tI >>> 26) | 0, tI &= 67108863, n = Math.imul(N, tu), i = (i = Math.imul(N, tc)) + Math.imul(F, tu) | 0, o = Math.imul(F, tc), n = n + Math.imul(T, th) | 0, i = (i = i + Math.imul(T, tf) | 0) + Math.imul(j, th) | 0, o = o + Math.imul(j, tf) | 0;
                    var tM = (c + (n = n + Math.imul(M, tp) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(M, ty) | 0) + Math.imul(B, tp) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(B, ty) | 0) + (i >>> 13) | 0) + (tM >>> 26) | 0, tM &= 67108863, n = Math.imul(N, th), i = (i = Math.imul(N, tf)) + Math.imul(F, th) | 0, o = Math.imul(F, tf);
                    var tB = (c + (n = n + Math.imul(T, tp) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(T, ty) | 0) + Math.imul(j, tp) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(j, ty) | 0) + (i >>> 13) | 0) + (tB >>> 26) | 0, tB &= 67108863;
                    var tR = (c + (n = Math.imul(N, tp)) | 0) + ((8191 & (i = (i = Math.imul(N, ty)) + Math.imul(F, tp) | 0)) << 13) | 0;
                    return c = ((o = Math.imul(F, ty)) + (i >>> 13) | 0) + (tR >>> 26) | 0, tR &= 67108863, u[0] = tm, u[1] = tb, u[2] = tg, u[3] = tw, u[4] = tv, u[5] = tE, u[6] = tx, u[7] = tS, u[8] = tO, u[9] = tC, u[10] = t_, u[11] = tA, u[12] = tP, u[13] = tk, u[14] = tD, u[15] = tI, u[16] = tM, u[17] = tB, u[18] = tR, 0 !== c && (u[19] = c, r.length++), r
                };

                function w(t, e, r) {
                    r.negative = e.negative ^ t.negative, r.length = t.length + e.length;
                    for (var n = 0, i = 0, o = 0; o < r.length - 1; o++) {
                        var s = i;
                        i = 0;
                        for (var a = 67108863 & n, u = Math.min(o, e.length - 1), c = Math.max(0, o - t.length + 1); c <= u; c++) {
                            var l = o - c,
                                h = (0 | t.words[l]) * (0 | e.words[c]),
                                f = 67108863 & h;
                            s = s + (h / 67108864 | 0) | 0, a = 67108863 & (f = f + a | 0), i += (s = s + (f >>> 26) | 0) >>> 26, s &= 67108863
                        }
                        r.words[o] = a, n = s, s = i
                    }
                    return 0 !== n ? r.words[o] = n : r.length--, r._strip()
                }

                function v(t, e, r) {
                    return w(t, e, r)
                }

                function E(t, e) {
                    this.x = t, this.y = e
                }
                Math.imul || (g = b), o.prototype.mulTo = function(t, e) {
                    var r = this.length + t.length;
                    return 10 === this.length && 10 === t.length ? g(this, t, e) : r < 63 ? b(this, t, e) : r < 1024 ? w(this, t, e) : v(this, t, e)
                }, E.prototype.makeRBT = function(t) {
                    for (var e = Array(t), r = o.prototype._countBits(t) - 1, n = 0; n < t; n++) e[n] = this.revBin(n, r, t);
                    return e
                }, E.prototype.revBin = function(t, e, r) {
                    if (0 === t || t === r - 1) return t;
                    for (var n = 0, i = 0; i < e; i++) n |= (1 & t) << e - i - 1, t >>= 1;
                    return n
                }, E.prototype.permute = function(t, e, r, n, i, o) {
                    for (var s = 0; s < o; s++) n[s] = e[t[s]], i[s] = r[t[s]]
                }, E.prototype.transform = function(t, e, r, n, i, o) {
                    this.permute(o, t, e, r, n, i);
                    for (var s = 1; s < i; s <<= 1)
                        for (var a = s << 1, u = Math.cos(2 * Math.PI / a), c = Math.sin(2 * Math.PI / a), l = 0; l < i; l += a)
                            for (var h = u, f = c, d = 0; d < s; d++) {
                                var p = r[l + d],
                                    y = n[l + d],
                                    m = r[l + d + s],
                                    b = n[l + d + s],
                                    g = h * m - f * b;
                                b = h * b + f * m, m = g, r[l + d] = p + m, n[l + d] = y + b, r[l + d + s] = p - m, n[l + d + s] = y - b, d !== a && (g = u * h - c * f, f = u * f + c * h, h = g)
                            }
                }, E.prototype.guessLen13b = function(t, e) {
                    var r = 1 | Math.max(e, t),
                        n = 1 & r,
                        i = 0;
                    for (r = r / 2 | 0; r; r >>>= 1) i++;
                    return 1 << i + 1 + n
                }, E.prototype.conjugate = function(t, e, r) {
                    if (!(r <= 1))
                        for (var n = 0; n < r / 2; n++) {
                            var i = t[n];
                            t[n] = t[r - n - 1], t[r - n - 1] = i, i = e[n], e[n] = -e[r - n - 1], e[r - n - 1] = -i
                        }
                }, E.prototype.normalize13b = function(t, e) {
                    for (var r = 0, n = 0; n < e / 2; n++) {
                        var i = 8192 * Math.round(t[2 * n + 1] / e) + Math.round(t[2 * n] / e) + r;
                        t[n] = 67108863 & i, r = i < 67108864 ? 0 : i / 67108864 | 0
                    }
                    return t
                }, E.prototype.convert13b = function(t, e, r, i) {
                    for (var o = 0, s = 0; s < e; s++) o += 0 | t[s], r[2 * s] = 8191 & o, o >>>= 13, r[2 * s + 1] = 8191 & o, o >>>= 13;
                    for (s = 2 * e; s < i; ++s) r[s] = 0;
                    n(0 === o), n((-8192 & o) == 0)
                }, E.prototype.stub = function(t) {
                    for (var e = Array(t), r = 0; r < t; r++) e[r] = 0;
                    return e
                }, E.prototype.mulp = function(t, e, r) {
                    var n = 2 * this.guessLen13b(t.length, e.length),
                        i = this.makeRBT(n),
                        o = this.stub(n),
                        s = Array(n),
                        a = Array(n),
                        u = Array(n),
                        c = Array(n),
                        l = Array(n),
                        h = Array(n),
                        f = r.words;
                    f.length = n, this.convert13b(t.words, t.length, s, n), this.convert13b(e.words, e.length, c, n), this.transform(s, o, a, u, n, i), this.transform(c, o, l, h, n, i);
                    for (var d = 0; d < n; d++) {
                        var p = a[d] * l[d] - u[d] * h[d];
                        u[d] = a[d] * h[d] + u[d] * l[d], a[d] = p
                    }
                    return this.conjugate(a, u, n), this.transform(a, u, f, o, n, i), this.conjugate(f, o, n), this.normalize13b(f, n), r.negative = t.negative ^ e.negative, r.length = t.length + e.length, r._strip()
                }, o.prototype.mul = function(t) {
                    var e = new o(null);
                    return e.words = Array(this.length + t.length), this.mulTo(t, e)
                }, o.prototype.mulf = function(t) {
                    var e = new o(null);
                    return e.words = Array(this.length + t.length), v(this, t, e)
                }, o.prototype.imul = function(t) {
                    return this.clone().mulTo(t, this)
                }, o.prototype.imuln = function(t) {
                    var e = t < 0;
                    e && (t = -t), n("number" == typeof t), n(t < 67108864);
                    for (var r = 0, i = 0; i < this.length; i++) {
                        var o = (0 | this.words[i]) * t,
                            s = (67108863 & o) + (67108863 & r);
                        r >>= 26, r += (o / 67108864 | 0) + (s >>> 26), this.words[i] = 67108863 & s
                    }
                    return 0 !== r && (this.words[i] = r, this.length++), e ? this.ineg() : this
                }, o.prototype.muln = function(t) {
                    return this.clone().imuln(t)
                }, o.prototype.sqr = function() {
                    return this.mul(this)
                }, o.prototype.isqr = function() {
                    return this.imul(this.clone())
                }, o.prototype.pow = function(t) {
                    var e = m(t);
                    if (0 === e.length) return new o(1);
                    for (var r = this, n = 0; n < e.length && 0 === e[n]; n++, r = r.sqr());
                    if (++n < e.length)
                        for (var i = r.sqr(); n < e.length; n++, i = i.sqr()) 0 !== e[n] && (r = r.mul(i));
                    return r
                }, o.prototype.iushln = function(t) {
                    n("number" == typeof t && t >= 0);
                    var e, r = t % 26,
                        i = (t - r) / 26,
                        o = 67108863 >>> 26 - r << 26 - r;
                    if (0 !== r) {
                        var s = 0;
                        for (e = 0; e < this.length; e++) {
                            var a = this.words[e] & o,
                                u = (0 | this.words[e]) - a << r;
                            this.words[e] = u | s, s = a >>> 26 - r
                        }
                        s && (this.words[e] = s, this.length++)
                    }
                    if (0 !== i) {
                        for (e = this.length - 1; e >= 0; e--) this.words[e + i] = this.words[e];
                        for (e = 0; e < i; e++) this.words[e] = 0;
                        this.length += i
                    }
                    return this._strip()
                }, o.prototype.ishln = function(t) {
                    return n(0 === this.negative), this.iushln(t)
                }, o.prototype.iushrn = function(t, e, r) {
                    n("number" == typeof t && t >= 0), i = e ? (e - e % 26) / 26 : 0;
                    var i, o = t % 26,
                        s = Math.min((t - o) / 26, this.length),
                        a = 67108863 ^ 67108863 >>> o << o,
                        u = r;
                    if (i -= s, i = Math.max(0, i), u) {
                        for (var c = 0; c < s; c++) u.words[c] = this.words[c];
                        u.length = s
                    }
                    if (0 === s);
                    else if (this.length > s)
                        for (this.length -= s, c = 0; c < this.length; c++) this.words[c] = this.words[c + s];
                    else this.words[0] = 0, this.length = 1;
                    var l = 0;
                    for (c = this.length - 1; c >= 0 && (0 !== l || c >= i); c--) {
                        var h = 0 | this.words[c];
                        this.words[c] = l << 26 - o | h >>> o, l = h & a
                    }
                    return u && 0 !== l && (u.words[u.length++] = l), 0 === this.length && (this.words[0] = 0, this.length = 1), this._strip()
                }, o.prototype.ishrn = function(t, e, r) {
                    return n(0 === this.negative), this.iushrn(t, e, r)
                }, o.prototype.shln = function(t) {
                    return this.clone().ishln(t)
                }, o.prototype.ushln = function(t) {
                    return this.clone().iushln(t)
                }, o.prototype.shrn = function(t) {
                    return this.clone().ishrn(t)
                }, o.prototype.ushrn = function(t) {
                    return this.clone().iushrn(t)
                }, o.prototype.testn = function(t) {
                    n("number" == typeof t && t >= 0);
                    var e = t % 26,
                        r = (t - e) / 26,
                        i = 1 << e;
                    return !(this.length <= r) && !!(this.words[r] & i)
                }, o.prototype.imaskn = function(t) {
                    n("number" == typeof t && t >= 0);
                    var e = t % 26,
                        r = (t - e) / 26;
                    if (n(0 === this.negative, "imaskn works only with positive numbers"), this.length <= r) return this;
                    if (0 !== e && r++, this.length = Math.min(r, this.length), 0 !== e) {
                        var i = 67108863 ^ 67108863 >>> e << e;
                        this.words[this.length - 1] &= i
                    }
                    return this._strip()
                }, o.prototype.maskn = function(t) {
                    return this.clone().imaskn(t)
                }, o.prototype.iaddn = function(t) {
                    return (n("number" == typeof t), n(t < 67108864), t < 0) ? this.isubn(-t) : 0 !== this.negative ? (1 === this.length && (0 | this.words[0]) <= t ? (this.words[0] = t - (0 | this.words[0]), this.negative = 0) : (this.negative = 0, this.isubn(t), this.negative = 1), this) : this._iaddn(t)
                }, o.prototype._iaddn = function(t) {
                    this.words[0] += t;
                    for (var e = 0; e < this.length && this.words[e] >= 67108864; e++) this.words[e] -= 67108864, e === this.length - 1 ? this.words[e + 1] = 1 : this.words[e + 1]++;
                    return this.length = Math.max(this.length, e + 1), this
                }, o.prototype.isubn = function(t) {
                    if (n("number" == typeof t), n(t < 67108864), t < 0) return this.iaddn(-t);
                    if (0 !== this.negative) return this.negative = 0, this.iaddn(t), this.negative = 1, this;
                    if (this.words[0] -= t, 1 === this.length && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
                    else
                        for (var e = 0; e < this.length && this.words[e] < 0; e++) this.words[e] += 67108864, this.words[e + 1] -= 1;
                    return this._strip()
                }, o.prototype.addn = function(t) {
                    return this.clone().iaddn(t)
                }, o.prototype.subn = function(t) {
                    return this.clone().isubn(t)
                }, o.prototype.iabs = function() {
                    return this.negative = 0, this
                }, o.prototype.abs = function() {
                    return this.clone().iabs()
                }, o.prototype._ishlnsubmul = function(t, e, r) {
                    var i, o, s = t.length + r;
                    this._expand(s);
                    var a = 0;
                    for (i = 0; i < t.length; i++) {
                        o = (0 | this.words[i + r]) + a;
                        var u = (0 | t.words[i]) * e;
                        o -= 67108863 & u, a = (o >> 26) - (u / 67108864 | 0), this.words[i + r] = 67108863 & o
                    }
                    for (; i < this.length - r; i++) a = (o = (0 | this.words[i + r]) + a) >> 26, this.words[i + r] = 67108863 & o;
                    if (0 === a) return this._strip();
                    for (n(-1 === a), a = 0, i = 0; i < this.length; i++) a = (o = -(0 | this.words[i]) + a) >> 26, this.words[i] = 67108863 & o;
                    return this.negative = 1, this._strip()
                }, o.prototype._wordDiv = function(t, e) {
                    var r, n = this.length - t.length,
                        i = this.clone(),
                        s = t,
                        a = 0 | s.words[s.length - 1];
                    0 != (n = 26 - this._countBits(a)) && (s = s.ushln(n), i.iushln(n), a = 0 | s.words[s.length - 1]);
                    var u = i.length - s.length;
                    if ("mod" !== e) {
                        (r = new o(null)).length = u + 1, r.words = Array(r.length);
                        for (var c = 0; c < r.length; c++) r.words[c] = 0
                    }
                    var l = i.clone()._ishlnsubmul(s, 1, u);
                    0 === l.negative && (i = l, r && (r.words[u] = 1));
                    for (var h = u - 1; h >= 0; h--) {
                        var f = (0 | i.words[s.length + h]) * 67108864 + (0 | i.words[s.length + h - 1]);
                        for (f = Math.min(f / a | 0, 67108863), i._ishlnsubmul(s, f, h); 0 !== i.negative;) f--, i.negative = 0, i._ishlnsubmul(s, 1, h), i.isZero() || (i.negative ^= 1);
                        r && (r.words[h] = f)
                    }
                    return r && r._strip(), i._strip(), "div" !== e && 0 !== n && i.iushrn(n), {
                        div: r || null,
                        mod: i
                    }
                }, o.prototype.divmod = function(t, e, r) {
                    var i, s, a;
                    return (n(!t.isZero()), this.isZero()) ? {
                        div: new o(0),
                        mod: new o(0)
                    } : 0 !== this.negative && 0 === t.negative ? (a = this.neg().divmod(t, e), "mod" !== e && (i = a.div.neg()), "div" !== e && (s = a.mod.neg(), r && 0 !== s.negative && s.iadd(t)), {
                        div: i,
                        mod: s
                    }) : 0 === this.negative && 0 !== t.negative ? (a = this.divmod(t.neg(), e), "mod" !== e && (i = a.div.neg()), {
                        div: i,
                        mod: a.mod
                    }) : (this.negative & t.negative) != 0 ? (a = this.neg().divmod(t.neg(), e), "div" !== e && (s = a.mod.neg(), r && 0 !== s.negative && s.isub(t)), {
                        div: a.div,
                        mod: s
                    }) : t.length > this.length || 0 > this.cmp(t) ? {
                        div: new o(0),
                        mod: this
                    } : 1 === t.length ? "div" === e ? {
                        div: this.divn(t.words[0]),
                        mod: null
                    } : "mod" === e ? {
                        div: null,
                        mod: new o(this.modrn(t.words[0]))
                    } : {
                        div: this.divn(t.words[0]),
                        mod: new o(this.modrn(t.words[0]))
                    } : this._wordDiv(t, e)
                }, o.prototype.div = function(t) {
                    return this.divmod(t, "div", !1).div
                }, o.prototype.mod = function(t) {
                    return this.divmod(t, "mod", !1).mod
                }, o.prototype.umod = function(t) {
                    return this.divmod(t, "mod", !0).mod
                }, o.prototype.divRound = function(t) {
                    var e = this.divmod(t);
                    if (e.mod.isZero()) return e.div;
                    var r = 0 !== e.div.negative ? e.mod.isub(t) : e.mod,
                        n = t.ushrn(1),
                        i = t.andln(1),
                        o = r.cmp(n);
                    return o < 0 || 1 === i && 0 === o ? e.div : 0 !== e.div.negative ? e.div.isubn(1) : e.div.iaddn(1)
                }, o.prototype.modrn = function(t) {
                    var e = t < 0;
                    e && (t = -t), n(t <= 67108863);
                    for (var r = 67108864 % t, i = 0, o = this.length - 1; o >= 0; o--) i = (r * i + (0 | this.words[o])) % t;
                    return e ? -i : i
                }, o.prototype.modn = function(t) {
                    return this.modrn(t)
                }, o.prototype.idivn = function(t) {
                    var e = t < 0;
                    e && (t = -t), n(t <= 67108863);
                    for (var r = 0, i = this.length - 1; i >= 0; i--) {
                        var o = (0 | this.words[i]) + 67108864 * r;
                        this.words[i] = o / t | 0, r = o % t
                    }
                    return this._strip(), e ? this.ineg() : this
                }, o.prototype.divn = function(t) {
                    return this.clone().idivn(t)
                }, o.prototype.egcd = function(t) {
                    n(0 === t.negative), n(!t.isZero());
                    var e = this,
                        r = t.clone();
                    e = 0 !== e.negative ? e.umod(t) : e.clone();
                    for (var i = new o(1), s = new o(0), a = new o(0), u = new o(1), c = 0; e.isEven() && r.isEven();) e.iushrn(1), r.iushrn(1), ++c;
                    for (var l = r.clone(), h = e.clone(); !e.isZero();) {
                        for (var f = 0, d = 1;
                            (e.words[0] & d) == 0 && f < 26; ++f, d <<= 1);
                        if (f > 0)
                            for (e.iushrn(f); f-- > 0;)(i.isOdd() || s.isOdd()) && (i.iadd(l), s.isub(h)), i.iushrn(1), s.iushrn(1);
                        for (var p = 0, y = 1;
                            (r.words[0] & y) == 0 && p < 26; ++p, y <<= 1);
                        if (p > 0)
                            for (r.iushrn(p); p-- > 0;)(a.isOdd() || u.isOdd()) && (a.iadd(l), u.isub(h)), a.iushrn(1), u.iushrn(1);
                        e.cmp(r) >= 0 ? (e.isub(r), i.isub(a), s.isub(u)) : (r.isub(e), a.isub(i), u.isub(s))
                    }
                    return {
                        a: a,
                        b: u,
                        gcd: r.iushln(c)
                    }
                }, o.prototype._invmp = function(t) {
                    n(0 === t.negative), n(!t.isZero());
                    var e, r = this,
                        i = t.clone();
                    r = 0 !== r.negative ? r.umod(t) : r.clone();
                    for (var s = new o(1), a = new o(0), u = i.clone(); r.cmpn(1) > 0 && i.cmpn(1) > 0;) {
                        for (var c = 0, l = 1;
                            (r.words[0] & l) == 0 && c < 26; ++c, l <<= 1);
                        if (c > 0)
                            for (r.iushrn(c); c-- > 0;) s.isOdd() && s.iadd(u), s.iushrn(1);
                        for (var h = 0, f = 1;
                            (i.words[0] & f) == 0 && h < 26; ++h, f <<= 1);
                        if (h > 0)
                            for (i.iushrn(h); h-- > 0;) a.isOdd() && a.iadd(u), a.iushrn(1);
                        r.cmp(i) >= 0 ? (r.isub(i), s.isub(a)) : (i.isub(r), a.isub(s))
                    }
                    return 0 > (e = 0 === r.cmpn(1) ? s : a).cmpn(0) && e.iadd(t), e
                }, o.prototype.gcd = function(t) {
                    if (this.isZero()) return t.abs();
                    if (t.isZero()) return this.abs();
                    var e = this.clone(),
                        r = t.clone();
                    e.negative = 0, r.negative = 0;
                    for (var n = 0; e.isEven() && r.isEven(); n++) e.iushrn(1), r.iushrn(1);
                    for (;;) {
                        for (; e.isEven();) e.iushrn(1);
                        for (; r.isEven();) r.iushrn(1);
                        var i = e.cmp(r);
                        if (i < 0) {
                            var o = e;
                            e = r, r = o
                        } else if (0 === i || 0 === r.cmpn(1)) break;
                        e.isub(r)
                    }
                    return r.iushln(n)
                }, o.prototype.invm = function(t) {
                    return this.egcd(t).a.umod(t)
                }, o.prototype.isEven = function() {
                    return (1 & this.words[0]) == 0
                }, o.prototype.isOdd = function() {
                    return (1 & this.words[0]) == 1
                }, o.prototype.andln = function(t) {
                    return this.words[0] & t
                }, o.prototype.bincn = function(t) {
                    n("number" == typeof t);
                    var e = t % 26,
                        r = (t - e) / 26,
                        i = 1 << e;
                    if (this.length <= r) return this._expand(r + 1), this.words[r] |= i, this;
                    for (var o = i, s = r; 0 !== o && s < this.length; s++) {
                        var a = 0 | this.words[s];
                        a += o, o = a >>> 26, a &= 67108863, this.words[s] = a
                    }
                    return 0 !== o && (this.words[s] = o, this.length++), this
                }, o.prototype.isZero = function() {
                    return 1 === this.length && 0 === this.words[0]
                }, o.prototype.cmpn = function(t) {
                    var e, r = t < 0;
                    if (0 !== this.negative && !r) return -1;
                    if (0 === this.negative && r) return 1;
                    if (this._strip(), this.length > 1) e = 1;
                    else {
                        r && (t = -t), n(t <= 67108863, "Number is too big");
                        var i = 0 | this.words[0];
                        e = i === t ? 0 : i < t ? -1 : 1
                    }
                    return 0 !== this.negative ? 0 | -e : e
                }, o.prototype.cmp = function(t) {
                    if (0 !== this.negative && 0 === t.negative) return -1;
                    if (0 === this.negative && 0 !== t.negative) return 1;
                    var e = this.ucmp(t);
                    return 0 !== this.negative ? 0 | -e : e
                }, o.prototype.ucmp = function(t) {
                    if (this.length > t.length) return 1;
                    if (this.length < t.length) return -1;
                    for (var e = 0, r = this.length - 1; r >= 0; r--) {
                        var n = 0 | this.words[r],
                            i = 0 | t.words[r];
                        if (n !== i) {
                            n < i ? e = -1 : n > i && (e = 1);
                            break
                        }
                    }
                    return e
                }, o.prototype.gtn = function(t) {
                    return 1 === this.cmpn(t)
                }, o.prototype.gt = function(t) {
                    return 1 === this.cmp(t)
                }, o.prototype.gten = function(t) {
                    return this.cmpn(t) >= 0
                }, o.prototype.gte = function(t) {
                    return this.cmp(t) >= 0
                }, o.prototype.ltn = function(t) {
                    return -1 === this.cmpn(t)
                }, o.prototype.lt = function(t) {
                    return -1 === this.cmp(t)
                }, o.prototype.lten = function(t) {
                    return 0 >= this.cmpn(t)
                }, o.prototype.lte = function(t) {
                    return 0 >= this.cmp(t)
                }, o.prototype.eqn = function(t) {
                    return 0 === this.cmpn(t)
                }, o.prototype.eq = function(t) {
                    return 0 === this.cmp(t)
                }, o.red = function(t) {
                    return new P(t)
                }, o.prototype.toRed = function(t) {
                    return n(!this.red, "Already a number in reduction context"), n(0 === this.negative, "red works only with positives"), t.convertTo(this)._forceRed(t)
                }, o.prototype.fromRed = function() {
                    return n(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this)
                }, o.prototype._forceRed = function(t) {
                    return this.red = t, this
                }, o.prototype.forceRed = function(t) {
                    return n(!this.red, "Already a number in reduction context"), this._forceRed(t)
                }, o.prototype.redAdd = function(t) {
                    return n(this.red, "redAdd works only with red numbers"), this.red.add(this, t)
                }, o.prototype.redIAdd = function(t) {
                    return n(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, t)
                }, o.prototype.redSub = function(t) {
                    return n(this.red, "redSub works only with red numbers"), this.red.sub(this, t)
                }, o.prototype.redISub = function(t) {
                    return n(this.red, "redISub works only with red numbers"), this.red.isub(this, t)
                }, o.prototype.redShl = function(t) {
                    return n(this.red, "redShl works only with red numbers"), this.red.shl(this, t)
                }, o.prototype.redMul = function(t) {
                    return n(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.mul(this, t)
                }, o.prototype.redIMul = function(t) {
                    return n(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.imul(this, t)
                }, o.prototype.redSqr = function() {
                    return n(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this)
                }, o.prototype.redISqr = function() {
                    return n(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this)
                }, o.prototype.redSqrt = function() {
                    return n(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this)
                }, o.prototype.redInvm = function() {
                    return n(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this)
                }, o.prototype.redNeg = function() {
                    return n(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this)
                }, o.prototype.redPow = function(t) {
                    return n(this.red && !t.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, t)
                };
                var x = {
                    k256: null,
                    p224: null,
                    p192: null,
                    p25519: null
                };

                function S(t, e) {
                    this.name = t, this.p = new o(e, 16), this.n = this.p.bitLength(), this.k = new o(1).iushln(this.n).isub(this.p), this.tmp = this._tmp()
                }

                function O() {
                    S.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")
                }

                function C() {
                    S.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")
                }

                function _() {
                    S.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")
                }

                function A() {
                    S.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")
                }

                function P(t) {
                    if ("string" == typeof t) {
                        var e = o._prime(t);
                        this.m = e.p, this.prime = e
                    } else n(t.gtn(1), "modulus must be greater than 1"), this.m = t, this.prime = null
                }

                function k(t) {
                    P.call(this, t), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new o(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv)
                }
                S.prototype._tmp = function() {
                    var t = new o(null);
                    return t.words = Array(Math.ceil(this.n / 13)), t
                }, S.prototype.ireduce = function(t) {
                    var e, r = t;
                    do this.split(r, this.tmp), e = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength(); while (e > this.n);
                    var n = e < this.n ? -1 : r.ucmp(this.p);
                    return 0 === n ? (r.words[0] = 0, r.length = 1) : n > 0 ? r.isub(this.p) : void 0 !== r.strip ? r.strip() : r._strip(), r
                }, S.prototype.split = function(t, e) {
                    t.iushrn(this.n, 0, e)
                }, S.prototype.imulK = function(t) {
                    return t.imul(this.k)
                }, i(O, S), O.prototype.split = function(t, e) {
                    for (var r = 4194303, n = Math.min(t.length, 9), i = 0; i < n; i++) e.words[i] = t.words[i];
                    if (e.length = n, t.length <= 9) {
                        t.words[0] = 0, t.length = 1;
                        return
                    }
                    var o = t.words[9];
                    for (i = 10, e.words[e.length++] = o & r; i < t.length; i++) {
                        var s = 0 | t.words[i];
                        t.words[i - 10] = (s & r) << 4 | o >>> 22, o = s
                    }
                    o >>>= 22, t.words[i - 10] = o, 0 === o && t.length > 10 ? t.length -= 10 : t.length -= 9
                }, O.prototype.imulK = function(t) {
                    t.words[t.length] = 0, t.words[t.length + 1] = 0, t.length += 2;
                    for (var e = 0, r = 0; r < t.length; r++) {
                        var n = 0 | t.words[r];
                        e += 977 * n, t.words[r] = 67108863 & e, e = 64 * n + (e / 67108864 | 0)
                    }
                    return 0 === t.words[t.length - 1] && (t.length--, 0 === t.words[t.length - 1] && t.length--), t
                }, i(C, S), i(_, S), i(A, S), A.prototype.imulK = function(t) {
                    for (var e = 0, r = 0; r < t.length; r++) {
                        var n = (0 | t.words[r]) * 19 + e,
                            i = 67108863 & n;
                        n >>>= 26, t.words[r] = i, e = n
                    }
                    return 0 !== e && (t.words[t.length++] = e), t
                }, o._prime = function(t) {
                    var e;
                    if (x[t]) return x[t];
                    if ("k256" === t) e = new O;
                    else if ("p224" === t) e = new C;
                    else if ("p192" === t) e = new _;
                    else if ("p25519" === t) e = new A;
                    else throw Error("Unknown prime " + t);
                    return x[t] = e, e
                }, P.prototype._verify1 = function(t) {
                    n(0 === t.negative, "red works only with positives"), n(t.red, "red works only with red numbers")
                }, P.prototype._verify2 = function(t, e) {
                    n((t.negative | e.negative) == 0, "red works only with positives"), n(t.red && t.red === e.red, "red works only with red numbers")
                }, P.prototype.imod = function(t) {
                    return this.prime ? this.prime.ireduce(t)._forceRed(this) : (c(t, t.umod(this.m)._forceRed(this)), t)
                }, P.prototype.neg = function(t) {
                    return t.isZero() ? t.clone() : this.m.sub(t)._forceRed(this)
                }, P.prototype.add = function(t, e) {
                    this._verify2(t, e);
                    var r = t.add(e);
                    return r.cmp(this.m) >= 0 && r.isub(this.m), r._forceRed(this)
                }, P.prototype.iadd = function(t, e) {
                    this._verify2(t, e);
                    var r = t.iadd(e);
                    return r.cmp(this.m) >= 0 && r.isub(this.m), r
                }, P.prototype.sub = function(t, e) {
                    this._verify2(t, e);
                    var r = t.sub(e);
                    return 0 > r.cmpn(0) && r.iadd(this.m), r._forceRed(this)
                }, P.prototype.isub = function(t, e) {
                    this._verify2(t, e);
                    var r = t.isub(e);
                    return 0 > r.cmpn(0) && r.iadd(this.m), r
                }, P.prototype.shl = function(t, e) {
                    return this._verify1(t), this.imod(t.ushln(e))
                }, P.prototype.imul = function(t, e) {
                    return this._verify2(t, e), this.imod(t.imul(e))
                }, P.prototype.mul = function(t, e) {
                    return this._verify2(t, e), this.imod(t.mul(e))
                }, P.prototype.isqr = function(t) {
                    return this.imul(t, t.clone())
                }, P.prototype.sqr = function(t) {
                    return this.mul(t, t)
                }, P.prototype.sqrt = function(t) {
                    if (t.isZero()) return t.clone();
                    var e = this.m.andln(3);
                    if (n(e % 2 == 1), 3 === e) {
                        var r = this.m.add(new o(1)).iushrn(2);
                        return this.pow(t, r)
                    }
                    for (var i = this.m.subn(1), s = 0; !i.isZero() && 0 === i.andln(1);) s++, i.iushrn(1);
                    n(!i.isZero());
                    var a = new o(1).toRed(this),
                        u = a.redNeg(),
                        c = this.m.subn(1).iushrn(1),
                        l = this.m.bitLength();
                    for (l = new o(2 * l * l).toRed(this); 0 !== this.pow(l, c).cmp(u);) l.redIAdd(u);
                    for (var h = this.pow(l, i), f = this.pow(t, i.addn(1).iushrn(1)), d = this.pow(t, i), p = s; 0 !== d.cmp(a);) {
                        for (var y = d, m = 0; 0 !== y.cmp(a); m++) y = y.redSqr();
                        n(m < p);
                        var b = this.pow(h, new o(1).iushln(p - m - 1));
                        f = f.redMul(b), h = b.redSqr(), d = d.redMul(h), p = m
                    }
                    return f
                }, P.prototype.invm = function(t) {
                    var e = t._invmp(this.m);
                    return 0 !== e.negative ? (e.negative = 0, this.imod(e).redNeg()) : this.imod(e)
                }, P.prototype.pow = function(t, e) {
                    if (e.isZero()) return new o(1).toRed(this);
                    if (0 === e.cmpn(1)) return t.clone();
                    var r = 4,
                        n = Array(16);
                    n[0] = new o(1).toRed(this), n[1] = t;
                    for (var i = 2; i < n.length; i++) n[i] = this.mul(n[i - 1], t);
                    var s = n[0],
                        a = 0,
                        u = 0,
                        c = e.bitLength() % 26;
                    for (0 === c && (c = 26), i = e.length - 1; i >= 0; i--) {
                        for (var l = e.words[i], h = c - 1; h >= 0; h--) {
                            var f = l >> h & 1;
                            if (s !== n[0] && (s = this.sqr(s)), 0 === f && 0 === a) {
                                u = 0;
                                continue
                            }
                            a <<= 1, a |= f, (++u === r || 0 === i && 0 === h) && (s = this.mul(s, n[a]), u = 0, a = 0)
                        }
                        c = 26
                    }
                    return s
                }, P.prototype.convertTo = function(t) {
                    var e = t.umod(this.m);
                    return e === t ? e.clone() : e
                }, P.prototype.convertFrom = function(t) {
                    var e = t.clone();
                    return e.red = null, e
                }, o.mont = function(t) {
                    return new k(t)
                }, i(k, P), k.prototype.convertTo = function(t) {
                    return this.imod(t.ushln(this.shift))
                }, k.prototype.convertFrom = function(t) {
                    var e = this.imod(t.mul(this.rinv));
                    return e.red = null, e
                }, k.prototype.imul = function(t, e) {
                    if (t.isZero() || e.isZero()) return t.words[0] = 0, t.length = 1, t;
                    var r = t.imul(e),
                        n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                        i = r.isub(n).iushrn(this.shift),
                        o = i;
                    return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : 0 > i.cmpn(0) && (o = i.iadd(this.m)), o._forceRed(this)
                }, k.prototype.mul = function(t, e) {
                    if (t.isZero() || e.isZero()) return new o(0)._forceRed(this);
                    var r = t.mul(e),
                        n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                        i = r.isub(n).iushrn(this.shift),
                        s = i;
                    return i.cmp(this.m) >= 0 ? s = i.isub(this.m) : 0 > i.cmpn(0) && (s = i.iadd(this.m)), s._forceRed(this)
                }, k.prototype.invm = function(t) {
                    return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)
                }
            }(t = r.nmd(t), this)
        },
        88806: function(t, e, r) {
            "use strict";
            var n = r(82957).Buffer,
                i = this && this.__createBinding || (Object.create ? function(t, e, r, n) {
                    void 0 === n && (n = r), Object.defineProperty(t, n, {
                        enumerable: !0,
                        get: function() {
                            return e[r]
                        }
                    })
                } : function(t, e, r, n) {
                    void 0 === n && (n = r), t[n] = e[r]
                }),
                o = this && this.__setModuleDefault || (Object.create ? function(t, e) {
                    Object.defineProperty(t, "default", {
                        enumerable: !0,
                        value: e
                    })
                } : function(t, e) {
                    t.default = e
                }),
                s = this && this.__decorate || function(t, e, r, n) {
                    var i, o = arguments.length,
                        s = o < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, r) : n;
                    if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(t, e, r, n);
                    else
                        for (var a = t.length - 1; a >= 0; a--)(i = t[a]) && (s = (o < 3 ? i(s) : o > 3 ? i(e, r, s) : i(e, r)) || s);
                    return o > 3 && s && Object.defineProperty(e, r, s), s
                },
                a = this && this.__importStar || function(t) {
                    if (t && t.__esModule) return t;
                    var e = {};
                    if (null != t)
                        for (var r in t) "default" !== r && Object.hasOwnProperty.call(t, r) && i(e, t, r);
                    return o(e, t), e
                },
                u = this && this.__importDefault || function(t) {
                    return t && t.__esModule ? t : {
                        default: t
                    }
                };
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.deserializeUnchecked = e.deserialize = e.serialize = e.BinaryReader = e.BinaryWriter = e.BorshError = e.baseDecode = e.baseEncode = void 0;
            let c = u(r(44373)),
                l = u(r(22525)),
                h = a(r(65768)),
                f = new("function" != typeof TextDecoder ? h.TextDecoder : TextDecoder)("utf-8", {
                    fatal: !0
                });

            function d(t) {
                return "string" == typeof t && (t = n.from(t, "utf8")), l.default.encode(n.from(t))
            }

            function p(t) {
                return n.from(l.default.decode(t))
            }
            e.baseEncode = d, e.baseDecode = p;
            let y = 1024;
            class m extends Error {
                constructor(t) {
                    super(t), this.fieldPath = [], this.originalMessage = t
                }
                addToFieldPath(t) {
                    this.fieldPath.splice(0, 0, t), this.message = this.originalMessage + ": " + this.fieldPath.join(".")
                }
            }
            e.BorshError = m;
            class b {
                constructor() {
                    this.buf = n.alloc(y), this.length = 0
                }
                maybeResize() {
                    this.buf.length < 16 + this.length && (this.buf = n.concat([this.buf, n.alloc(y)]))
                }
                writeU8(t) {
                    this.maybeResize(), this.buf.writeUInt8(t, this.length), this.length += 1
                }
                writeU16(t) {
                    this.maybeResize(), this.buf.writeUInt16LE(t, this.length), this.length += 2
                }
                writeU32(t) {
                    this.maybeResize(), this.buf.writeUInt32LE(t, this.length), this.length += 4
                }
                writeU64(t) {
                    this.maybeResize(), this.writeBuffer(n.from(new c.default(t).toArray("le", 8)))
                }
                writeU128(t) {
                    this.maybeResize(), this.writeBuffer(n.from(new c.default(t).toArray("le", 16)))
                }
                writeU256(t) {
                    this.maybeResize(), this.writeBuffer(n.from(new c.default(t).toArray("le", 32)))
                }
                writeU512(t) {
                    this.maybeResize(), this.writeBuffer(n.from(new c.default(t).toArray("le", 64)))
                }
                writeBuffer(t) {
                    this.buf = n.concat([n.from(this.buf.subarray(0, this.length)), t, n.alloc(y)]), this.length += t.length
                }
                writeString(t) {
                    this.maybeResize();
                    let e = n.from(t, "utf8");
                    this.writeU32(e.length), this.writeBuffer(e)
                }
                writeFixedArray(t) {
                    this.writeBuffer(n.from(t))
                }
                writeArray(t, e) {
                    for (let r of (this.maybeResize(), this.writeU32(t.length), t)) this.maybeResize(), e(r)
                }
                toArray() {
                    return this.buf.subarray(0, this.length)
                }
            }

            function g(t, e, r) {
                let n = r.value;
                r.value = function(...t) {
                    try {
                        return n.apply(this, t)
                    } catch (t) {
                        if (t instanceof RangeError && ["ERR_BUFFER_OUT_OF_BOUNDS", "ERR_OUT_OF_RANGE"].indexOf(t.code) >= 0) throw new m("Reached the end of buffer when deserializing");
                        throw t
                    }
                }
            }
            e.BinaryWriter = b;
            class w {
                constructor(t) {
                    this.buf = t, this.offset = 0
                }
                readU8() {
                    let t = this.buf.readUInt8(this.offset);
                    return this.offset += 1, t
                }
                readU16() {
                    let t = this.buf.readUInt16LE(this.offset);
                    return this.offset += 2, t
                }
                readU32() {
                    let t = this.buf.readUInt32LE(this.offset);
                    return this.offset += 4, t
                }
                readU64() {
                    let t = this.readBuffer(8);
                    return new c.default(t, "le")
                }
                readU128() {
                    let t = this.readBuffer(16);
                    return new c.default(t, "le")
                }
                readU256() {
                    let t = this.readBuffer(32);
                    return new c.default(t, "le")
                }
                readU512() {
                    let t = this.readBuffer(64);
                    return new c.default(t, "le")
                }
                readBuffer(t) {
                    if (this.offset + t > this.buf.length) throw new m(`Expected buffer length ${t} isn't within bounds`);
                    let e = this.buf.slice(this.offset, this.offset + t);
                    return this.offset += t, e
                }
                readString() {
                    let t = this.readU32(),
                        e = this.readBuffer(t);
                    try {
                        return f.decode(e)
                    } catch (t) {
                        throw new m(`Error decoding UTF-8 string: ${t}`)
                    }
                }
                readFixedArray(t) {
                    return new Uint8Array(this.readBuffer(t))
                }
                readArray(t) {
                    let e = this.readU32(),
                        r = [];
                    for (let n = 0; n < e; ++n) r.push(t());
                    return r
                }
            }

            function v(t) {
                return t.charAt(0).toUpperCase() + t.slice(1)
            }

            function E(t, e, r, n, i) {
                try {
                    if ("string" == typeof n) i[`write${v(n)}`](r);
                    else if (n instanceof Array) {
                        if ("number" == typeof n[0]) {
                            if (r.length !== n[0]) throw new m(`Expecting byte array of length ${n[0]}, but got ${r.length} bytes`);
                            i.writeFixedArray(r)
                        } else if (2 === n.length && "number" == typeof n[1]) {
                            if (r.length !== n[1]) throw new m(`Expecting byte array of length ${n[1]}, but got ${r.length} bytes`);
                            for (let e = 0; e < n[1]; e++) E(t, null, r[e], n[0], i)
                        } else i.writeArray(r, r => {
                            E(t, e, r, n[0], i)
                        })
                    } else if (void 0 !== n.kind) switch (n.kind) {
                        case "option":
                            null == r ? i.writeU8(0) : (i.writeU8(1), E(t, e, r, n.type, i));
                            break;
                        case "map":
                            i.writeU32(r.size), r.forEach((r, o) => {
                                E(t, e, o, n.key, i), E(t, e, r, n.value, i)
                            });
                            break;
                        default:
                            throw new m(`FieldType ${n} unrecognized`)
                    } else x(t, r, i)
                } catch (t) {
                    throw t instanceof m && t.addToFieldPath(e), t
                }
            }

            function x(t, e, r) {
                if ("function" == typeof e.borshSerialize) {
                    e.borshSerialize(r);
                    return
                }
                let n = t.get(e.constructor);
                if (!n) throw new m(`Class ${e.constructor.name} is missing in schema`);
                if ("struct" === n.kind) n.fields.map(([n, i]) => {
                    E(t, n, e[n], i, r)
                });
                else if ("enum" === n.kind) {
                    let i = e[n.field];
                    for (let o = 0; o < n.values.length; ++o) {
                        let [s, a] = n.values[o];
                        if (s === i) {
                            r.writeU8(o), E(t, s, e[s], a, r);
                            break
                        }
                    }
                } else throw new m(`Unexpected schema kind: ${n.kind} for ${e.constructor.name}`)
            }

            function S(t, e, r = b) {
                let n = new r;
                return x(t, e, n), n.toArray()
            }

            function O(t, e, r, n) {
                try {
                    if ("string" == typeof r) return n[`read${v(r)}`]();
                    if (r instanceof Array) {
                        if ("number" == typeof r[0]) return n.readFixedArray(r[0]);
                        if ("number" != typeof r[1]) return n.readArray(() => O(t, e, r[0], n)); {
                            let e = [];
                            for (let i = 0; i < r[1]; i++) e.push(O(t, null, r[0], n));
                            return e
                        }
                    }
                    if ("option" === r.kind) {
                        if (n.readU8()) return O(t, e, r.type, n);
                        return
                    }
                    if ("map" === r.kind) {
                        let i = new Map,
                            o = n.readU32();
                        for (let s = 0; s < o; s++) {
                            let o = O(t, e, r.key, n),
                                s = O(t, e, r.value, n);
                            i.set(o, s)
                        }
                        return i
                    }
                    return C(t, r, n)
                } catch (t) {
                    throw t instanceof m && t.addToFieldPath(e), t
                }
            }

            function C(t, e, r) {
                if ("function" == typeof e.borshDeserialize) return e.borshDeserialize(r);
                let n = t.get(e);
                if (!n) throw new m(`Class ${e.name} is missing in schema`);
                if ("struct" === n.kind) {
                    let n = {};
                    for (let [i, o] of t.get(e).fields) n[i] = O(t, i, o, r);
                    return new e(n)
                }
                if ("enum" === n.kind) {
                    let i = r.readU8();
                    if (i >= n.values.length) throw new m(`Enum index: ${i} is out of range`);
                    let [o, s] = n.values[i], a = O(t, o, s, r);
                    return new e({
                        [o]: a
                    })
                }
                throw new m(`Unexpected schema kind: ${n.kind} for ${e.constructor.name}`)
            }

            function _(t, e, r, n = w) {
                let i = new n(r),
                    o = C(t, e, i);
                if (i.offset < r.length) throw new m(`Unexpected ${r.length-i.offset} bytes after deserialized data`);
                return o
            }

            function A(t, e, r, n = w) {
                return C(t, e, new n(r))
            }
            s([g], w.prototype, "readU8", null), s([g], w.prototype, "readU16", null), s([g], w.prototype, "readU32", null), s([g], w.prototype, "readU64", null), s([g], w.prototype, "readU128", null), s([g], w.prototype, "readU256", null), s([g], w.prototype, "readU512", null), s([g], w.prototype, "readString", null), s([g], w.prototype, "readFixedArray", null), s([g], w.prototype, "readArray", null), e.BinaryReader = w, e.serialize = S, e.deserialize = _, e.deserializeUnchecked = A
        },
        22525: function(t, e, r) {
            var n = r(18282),
                i = "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz";
            t.exports = n(i)
        },
        96861: function(t, e, r) {
            "use strict";
            var n = r(82957).Buffer;
            /**
             * Support for translating between Buffer instances and JavaScript
             * native types.
             *
             * {@link module:Layout~Layout|Layout} is the basis of a class
             * hierarchy that associates property names with sequences of encoded
             * bytes.
             *
             * Layouts are supported for these scalar (numeric) types:
             * * {@link module:Layout~UInt|Unsigned integers in little-endian
             *   format} with {@link module:Layout.u8|8-bit}, {@link
             *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},
             *   {@link module:Layout.u32|32-bit}, {@link
             *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}
             *   representation ranges;
             * * {@link module:Layout~UIntBE|Unsigned integers in big-endian
             *   format} with {@link module:Layout.u16be|16-bit}, {@link
             *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},
             *   {@link module:Layout.u40be|40-bit}, and {@link
             *   module:Layout.u48be|48-bit} representation ranges;
             * * {@link module:Layout~Int|Signed integers in little-endian
             *   format} with {@link module:Layout.s8|8-bit}, {@link
             *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},
             *   {@link module:Layout.s32|32-bit}, {@link
             *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}
             *   representation ranges;
             * * {@link module:Layout~IntBE|Signed integers in big-endian format}
             *   with {@link module:Layout.s16be|16-bit}, {@link
             *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},
             *   {@link module:Layout.s40be|40-bit}, and {@link
             *   module:Layout.s48be|48-bit} representation ranges;
             * * 64-bit integral values that decode to an exact (if magnitude is
             *   less than 2^53) or nearby integral Number in {@link
             *   module:Layout.nu64|unsigned little-endian}, {@link
             *   module:Layout.nu64be|unsigned big-endian}, {@link
             *   module:Layout.ns64|signed little-endian}, and {@link
             *   module:Layout.ns64be|unsigned big-endian} encodings;
             * * 32-bit floating point values with {@link
             *   module:Layout.f32|little-endian} and {@link
             *   module:Layout.f32be|big-endian} representations;
             * * 64-bit floating point values with {@link
             *   module:Layout.f64|little-endian} and {@link
             *   module:Layout.f64be|big-endian} representations;
             * * {@link module:Layout.const|Constants} that take no space in the
             *   encoded expression.
             *
             * and for these aggregate types:
             * * {@link module:Layout.seq|Sequence}s of instances of a {@link
             *   module:Layout~Layout|Layout}, with JavaScript representation as
             *   an Array and constant or data-dependent {@link
             *   module:Layout~Sequence#count|length};
             * * {@link module:Layout.struct|Structure}s that aggregate a
             *   heterogeneous sequence of {@link module:Layout~Layout|Layout}
             *   instances, with JavaScript representation as an Object;
             * * {@link module:Layout.union|Union}s that support multiple {@link
             *   module:Layout~VariantLayout|variant layouts} over a fixed
             *   (padded) or variable (not padded) span of bytes, using an
             *   unsigned integer at the start of the data or a separate {@link
             *   module:Layout.unionLayoutDiscriminator|layout element} to
             *   determine which layout to use when interpreting the buffer
             *   contents;
             * * {@link module:Layout.bits|BitStructure}s that contain a sequence
             *   of individual {@link
             *   module:Layout~BitStructure#addField|BitField}s packed into an 8,
             *   16, 24, or 32-bit unsigned integer starting at the least- or
             *   most-significant bit;
             * * {@link module:Layout.cstr|C strings} of varying length;
             * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link
             *   module:Layout~Blob#length|length} raw data.
             *
             * All {@link module:Layout~Layout|Layout} instances are immutable
             * after construction, to prevent internal state from becoming
             * inconsistent.
             *
             * @local Layout
             * @local ExternalLayout
             * @local GreedyCount
             * @local OffsetLayout
             * @local UInt
             * @local UIntBE
             * @local Int
             * @local IntBE
             * @local NearUInt64
             * @local NearUInt64BE
             * @local NearInt64
             * @local NearInt64BE
             * @local Float
             * @local FloatBE
             * @local Double
             * @local DoubleBE
             * @local Sequence
             * @local Structure
             * @local UnionDiscriminator
             * @local UnionLayoutDiscriminator
             * @local Union
             * @local VariantLayout
             * @local BitStructure
             * @local BitField
             * @local Boolean
             * @local Blob
             * @local CString
             * @local Constant
             * @local bindConstructorLayout
             * @module Layout
             * @license MIT
             * @author Peter A. Bigot
             * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}
             */
            class i {
                constructor(t, e) {
                    if (!Number.isInteger(t)) throw TypeError("span must be an integer");
                    this.span = t, this.property = e
                }
                makeDestinationObject() {
                    return {}
                }
                decode(t, e) {
                    throw Error("Layout is abstract")
                }
                encode(t, e, r) {
                    throw Error("Layout is abstract")
                }
                getSpan(t, e) {
                    if (0 > this.span) throw RangeError("indeterminate span");
                    return this.span
                }
                replicate(t) {
                    let e = Object.create(this.constructor.prototype);
                    return Object.assign(e, this), e.property = t, e
                }
                fromArray(t) {}
            }

            function o(t, e) {
                return e.property ? t + "[" + e.property + "]" : t
            }

            function s(t, e) {
                if ("function" != typeof t) throw TypeError("Class must be constructor");
                if (t.hasOwnProperty("layout_")) throw Error("Class is already bound to a layout");
                if (!(e && e instanceof i)) throw TypeError("layout must be a Layout");
                if (e.hasOwnProperty("boundConstructor_")) throw Error("layout is already bound to a constructor");
                t.layout_ = e, e.boundConstructor_ = t, e.makeDestinationObject = () => new t, Object.defineProperty(t.prototype, "encode", {
                    value: function(t, r) {
                        return e.encode(this, t, r)
                    },
                    writable: !0
                }), Object.defineProperty(t, "decode", {
                    value: function(t, r) {
                        return e.decode(t, r)
                    },
                    writable: !0
                })
            }
            e.Layout = i, e.nameWithProperty = o, e.bindConstructorLayout = s;
            class a extends i {
                isCount() {
                    throw Error("ExternalLayout is abstract")
                }
            }
            class u extends a {
                constructor(t, e) {
                    if (void 0 === t && (t = 1), !Number.isInteger(t) || 0 >= t) throw TypeError("elementSpan must be a (positive) integer");
                    super(-1, e), this.elementSpan = t
                }
                isCount() {
                    return !0
                }
                decode(t, e) {
                    return void 0 === e && (e = 0), Math.floor((t.length - e) / this.elementSpan)
                }
                encode(t, e, r) {
                    return 0
                }
            }
            class c extends a {
                constructor(t, e, r) {
                    if (!(t instanceof i)) throw TypeError("layout must be a Layout");
                    if (void 0 === e) e = 0;
                    else if (!Number.isInteger(e)) throw TypeError("offset must be integer or undefined");
                    super(t.span, r || t.property), this.layout = t, this.offset = e
                }
                isCount() {
                    return this.layout instanceof l || this.layout instanceof h
                }
                decode(t, e) {
                    return void 0 === e && (e = 0), this.layout.decode(t, e + this.offset)
                }
                encode(t, e, r) {
                    return void 0 === r && (r = 0), this.layout.encode(t, e, r + this.offset)
                }
            }
            class l extends i {
                constructor(t, e) {
                    if (super(t, e), 6 < this.span) throw RangeError("span must not exceed 6 bytes")
                }
                decode(t, e) {
                    return void 0 === e && (e = 0), t.readUIntLE(e, this.span)
                }
                encode(t, e, r) {
                    return void 0 === r && (r = 0), e.writeUIntLE(t, r, this.span), this.span
                }
            }
            class h extends i {
                constructor(t, e) {
                    if (super(t, e), 6 < this.span) throw RangeError("span must not exceed 6 bytes")
                }
                decode(t, e) {
                    return void 0 === e && (e = 0), t.readUIntBE(e, this.span)
                }
                encode(t, e, r) {
                    return void 0 === r && (r = 0), e.writeUIntBE(t, r, this.span), this.span
                }
            }
            class f extends i {
                constructor(t, e) {
                    if (super(t, e), 6 < this.span) throw RangeError("span must not exceed 6 bytes")
                }
                decode(t, e) {
                    return void 0 === e && (e = 0), t.readIntLE(e, this.span)
                }
                encode(t, e, r) {
                    return void 0 === r && (r = 0), e.writeIntLE(t, r, this.span), this.span
                }
            }
            class d extends i {
                constructor(t, e) {
                    if (super(t, e), 6 < this.span) throw RangeError("span must not exceed 6 bytes")
                }
                decode(t, e) {
                    return void 0 === e && (e = 0), t.readIntBE(e, this.span)
                }
                encode(t, e, r) {
                    return void 0 === r && (r = 0), e.writeIntBE(t, r, this.span), this.span
                }
            }
            let p = 4294967296;

            function y(t) {
                let e = Math.floor(t / p),
                    r = t - e * p;
                return {
                    hi32: e,
                    lo32: r
                }
            }

            function m(t, e) {
                return t * p + e
            }
            class b extends i {
                constructor(t) {
                    super(8, t)
                }
                decode(t, e) {
                    void 0 === e && (e = 0);
                    let r = t.readUInt32LE(e);
                    return m(t.readUInt32LE(e + 4), r)
                }
                encode(t, e, r) {
                    void 0 === r && (r = 0);
                    let n = y(t);
                    return e.writeUInt32LE(n.lo32, r), e.writeUInt32LE(n.hi32, r + 4), 8
                }
            }
            class g extends i {
                constructor(t) {
                    super(8, t)
                }
                decode(t, e) {
                    return void 0 === e && (e = 0), m(t.readUInt32BE(e), t.readUInt32BE(e + 4))
                }
                encode(t, e, r) {
                    void 0 === r && (r = 0);
                    let n = y(t);
                    return e.writeUInt32BE(n.hi32, r), e.writeUInt32BE(n.lo32, r + 4), 8
                }
            }
            class w extends i {
                constructor(t) {
                    super(8, t)
                }
                decode(t, e) {
                    void 0 === e && (e = 0);
                    let r = t.readUInt32LE(e);
                    return m(t.readInt32LE(e + 4), r)
                }
                encode(t, e, r) {
                    void 0 === r && (r = 0);
                    let n = y(t);
                    return e.writeUInt32LE(n.lo32, r), e.writeInt32LE(n.hi32, r + 4), 8
                }
            }
            class v extends i {
                constructor(t) {
                    super(8, t)
                }
                decode(t, e) {
                    return void 0 === e && (e = 0), m(t.readInt32BE(e), t.readUInt32BE(e + 4))
                }
                encode(t, e, r) {
                    void 0 === r && (r = 0);
                    let n = y(t);
                    return e.writeInt32BE(n.hi32, r), e.writeUInt32BE(n.lo32, r + 4), 8
                }
            }
            class E extends i {
                constructor(t) {
                    super(4, t)
                }
                decode(t, e) {
                    return void 0 === e && (e = 0), t.readFloatLE(e)
                }
                encode(t, e, r) {
                    return void 0 === r && (r = 0), e.writeFloatLE(t, r), 4
                }
            }
            class x extends i {
                constructor(t) {
                    super(4, t)
                }
                decode(t, e) {
                    return void 0 === e && (e = 0), t.readFloatBE(e)
                }
                encode(t, e, r) {
                    return void 0 === r && (r = 0), e.writeFloatBE(t, r), 4
                }
            }
            class S extends i {
                constructor(t) {
                    super(8, t)
                }
                decode(t, e) {
                    return void 0 === e && (e = 0), t.readDoubleLE(e)
                }
                encode(t, e, r) {
                    return void 0 === r && (r = 0), e.writeDoubleLE(t, r), 8
                }
            }
            class O extends i {
                constructor(t) {
                    super(8, t)
                }
                decode(t, e) {
                    return void 0 === e && (e = 0), t.readDoubleBE(e)
                }
                encode(t, e, r) {
                    return void 0 === r && (r = 0), e.writeDoubleBE(t, r), 8
                }
            }
            class C extends i {
                constructor(t, e, r) {
                    if (!(t instanceof i)) throw TypeError("elementLayout must be a Layout");
                    if (!(e instanceof a && e.isCount() || Number.isInteger(e) && 0 <= e)) throw TypeError("count must be non-negative integer or an unsigned integer ExternalLayout");
                    let n = -1;
                    e instanceof a || !(0 < t.span) || (n = e * t.span), super(n, r), this.elementLayout = t, this.count = e
                }
                getSpan(t, e) {
                    if (0 <= this.span) return this.span;
                    void 0 === e && (e = 0);
                    let r = 0,
                        n = this.count;
                    if (n instanceof a && (n = n.decode(t, e)), 0 < this.elementLayout.span) r = n * this.elementLayout.span;
                    else {
                        let i = 0;
                        for (; i < n;) r += this.elementLayout.getSpan(t, e + r), ++i
                    }
                    return r
                }
                decode(t, e) {
                    void 0 === e && (e = 0);
                    let r = [],
                        n = 0,
                        i = this.count;
                    for (i instanceof a && (i = i.decode(t, e)); n < i;) r.push(this.elementLayout.decode(t, e)), e += this.elementLayout.getSpan(t, e), n += 1;
                    return r
                }
                encode(t, e, r) {
                    void 0 === r && (r = 0);
                    let n = this.elementLayout,
                        i = t.reduce((t, i) => t + n.encode(i, e, r + t), 0);
                    return this.count instanceof a && this.count.encode(t.length, e, r), i
                }
            }
            class _ extends i {
                constructor(t, e, r) {
                    if (!(Array.isArray(t) && t.reduce((t, e) => t && e instanceof i, !0))) throw TypeError("fields must be array of Layout instances");
                    for (let n of ("boolean" == typeof e && void 0 === r && (r = e, e = void 0), t))
                        if (0 > n.span && void 0 === n.property) throw Error("fields cannot contain unnamed variable-length layout");
                    let n = -1;
                    try {
                        n = t.reduce((t, e) => t + e.getSpan(), 0)
                    } catch (t) {}
                    super(n, e), this.fields = t, this.decodePrefixes = !!r
                }
                getSpan(t, e) {
                    if (0 <= this.span) return this.span;
                    void 0 === e && (e = 0);
                    let r = 0;
                    try {
                        r = this.fields.reduce((r, n) => {
                            let i = n.getSpan(t, e);
                            return e += i, r + i
                        }, 0)
                    } catch (t) {
                        throw RangeError("indeterminate span")
                    }
                    return r
                }
                decode(t, e) {
                    void 0 === e && (e = 0);
                    let r = this.makeDestinationObject();
                    for (let n of this.fields)
                        if (void 0 !== n.property && (r[n.property] = n.decode(t, e)), e += n.getSpan(t, e), this.decodePrefixes && t.length === e) break;
                    return r
                }
                encode(t, e, r) {
                    void 0 === r && (r = 0);
                    let n = r,
                        i = 0,
                        o = 0;
                    for (let n of this.fields) {
                        let s = n.span;
                        if (o = 0 < s ? s : 0, void 0 !== n.property) {
                            let i = t[n.property];
                            void 0 !== i && (o = n.encode(i, e, r), 0 > s && (s = n.getSpan(e, r)))
                        }
                        i = r, r += s
                    }
                    return i + o - n
                }
                fromArray(t) {
                    let e = this.makeDestinationObject();
                    for (let r of this.fields) void 0 !== r.property && 0 < t.length && (e[r.property] = t.shift());
                    return e
                }
                layoutFor(t) {
                    if ("string" != typeof t) throw TypeError("property must be string");
                    for (let e of this.fields)
                        if (e.property === t) return e
                }
                offsetOf(t) {
                    if ("string" != typeof t) throw TypeError("property must be string");
                    let e = 0;
                    for (let r of this.fields) {
                        if (r.property === t) return e;
                        0 > r.span ? e = -1 : 0 <= e && (e += r.span)
                    }
                }
            }
            class A {
                constructor(t) {
                    this.property = t
                }
                decode() {
                    throw Error("UnionDiscriminator is abstract")
                }
                encode() {
                    throw Error("UnionDiscriminator is abstract")
                }
            }
            class P extends A {
                constructor(t, e) {
                    if (!(t instanceof a && t.isCount())) throw TypeError("layout must be an unsigned integer ExternalLayout");
                    super(e || t.property || "variant"), this.layout = t
                }
                decode(t, e) {
                    return this.layout.decode(t, e)
                }
                encode(t, e, r) {
                    return this.layout.encode(t, e, r)
                }
            }
            class k extends i {
                constructor(t, e, r) {
                    let n = t instanceof l || t instanceof h;
                    if (n) t = new P(new c(t));
                    else if (t instanceof a && t.isCount()) t = new P(t);
                    else if (!(t instanceof A)) throw TypeError("discr must be a UnionDiscriminator or an unsigned integer layout");
                    if (void 0 === e && (e = null), !(null === e || e instanceof i)) throw TypeError("defaultLayout must be null or a Layout");
                    if (null !== e) {
                        if (0 > e.span) throw Error("defaultLayout must have constant span");
                        void 0 === e.property && (e = e.replicate("content"))
                    }
                    let o = -1;
                    e && 0 <= (o = e.span) && n && (o += t.layout.span), super(o, r), this.discriminator = t, this.usesPrefixDiscriminator = n, this.defaultLayout = e, this.registry = {};
                    let s = this.defaultGetSourceVariant.bind(this);
                    this.getSourceVariant = function(t) {
                        return s(t)
                    }, this.configGetSourceVariant = function(t) {
                        s = t.bind(this)
                    }
                }
                getSpan(t, e) {
                    if (0 <= this.span) return this.span;
                    void 0 === e && (e = 0);
                    let r = this.getVariant(t, e);
                    if (!r) throw Error("unable to determine span for unrecognized variant");
                    return r.getSpan(t, e)
                }
                defaultGetSourceVariant(t) {
                    if (t.hasOwnProperty(this.discriminator.property)) {
                        if (this.defaultLayout && t.hasOwnProperty(this.defaultLayout.property)) return;
                        let e = this.registry[t[this.discriminator.property]];
                        if (e && (!e.layout || t.hasOwnProperty(e.property))) return e
                    } else
                        for (let e in this.registry) {
                            let r = this.registry[e];
                            if (t.hasOwnProperty(r.property)) return r
                        }
                    throw Error("unable to infer src variant")
                }
                decode(t, e) {
                    let r;
                    void 0 === e && (e = 0);
                    let n = this.discriminator,
                        i = n.decode(t, e),
                        o = this.registry[i];
                    if (void 0 === o) {
                        let s = 0;
                        o = this.defaultLayout, this.usesPrefixDiscriminator && (s = n.layout.span), (r = this.makeDestinationObject())[n.property] = i, r[o.property] = this.defaultLayout.decode(t, e + s)
                    } else r = o.decode(t, e);
                    return r
                }
                encode(t, e, r) {
                    void 0 === r && (r = 0);
                    let n = this.getSourceVariant(t);
                    if (void 0 === n) {
                        let n = this.discriminator,
                            i = this.defaultLayout,
                            o = 0;
                        return this.usesPrefixDiscriminator && (o = n.layout.span), n.encode(t[n.property], e, r), o + i.encode(t[i.property], e, r + o)
                    }
                    return n.encode(t, e, r)
                }
                addVariant(t, e, r) {
                    let n = new D(this, t, e, r);
                    return this.registry[t] = n, n
                }
                getVariant(t, e) {
                    let r = t;
                    return n.isBuffer(t) && (void 0 === e && (e = 0), r = this.discriminator.decode(t, e)), this.registry[r]
                }
            }
            class D extends i {
                constructor(t, e, r, n) {
                    if (!(t instanceof k)) throw TypeError("union must be a Union");
                    if (!Number.isInteger(e) || 0 > e) throw TypeError("variant must be a (non-negative) integer");
                    if ("string" == typeof r && void 0 === n && (n = r, r = null), r) {
                        if (!(r instanceof i)) throw TypeError("layout must be a Layout");
                        if (null !== t.defaultLayout && 0 <= r.span && r.span > t.defaultLayout.span) throw Error("variant span exceeds span of containing union");
                        if ("string" != typeof n) throw TypeError("variant must have a String property")
                    }
                    let o = t.span;
                    0 > t.span && 0 <= (o = r ? r.span : 0) && t.usesPrefixDiscriminator && (o += t.discriminator.layout.span), super(o, n), this.union = t, this.variant = e, this.layout = r || null
                }
                getSpan(t, e) {
                    if (0 <= this.span) return this.span;
                    void 0 === e && (e = 0);
                    let r = 0;
                    return this.union.usesPrefixDiscriminator && (r = this.union.discriminator.layout.span), r + this.layout.getSpan(t, e + r)
                }
                decode(t, e) {
                    let r = this.makeDestinationObject();
                    if (void 0 === e && (e = 0), this !== this.union.getVariant(t, e)) throw Error("variant mismatch");
                    let n = 0;
                    return this.union.usesPrefixDiscriminator && (n = this.union.discriminator.layout.span), this.layout ? r[this.property] = this.layout.decode(t, e + n) : this.property ? r[this.property] = !0 : this.union.usesPrefixDiscriminator && (r[this.union.discriminator.property] = this.variant), r
                }
                encode(t, e, r) {
                    void 0 === r && (r = 0);
                    let n = 0;
                    if (this.union.usesPrefixDiscriminator && (n = this.union.discriminator.layout.span), this.layout && !t.hasOwnProperty(this.property)) throw TypeError("variant lacks property " + this.property);
                    this.union.discriminator.encode(this.variant, e, r);
                    let i = n;
                    if (this.layout && (this.layout.encode(t[this.property], e, r + n), i += this.layout.getSpan(e, r + n), 0 <= this.union.span && i > this.union.span)) throw Error("encoded variant overruns containing union");
                    return i
                }
                fromArray(t) {
                    if (this.layout) return this.layout.fromArray(t)
                }
            }

            function I(t) {
                return 0 > t && (t += 4294967296), t
            }
            class M extends i {
                constructor(t, e, r) {
                    if (!(t instanceof l || t instanceof h)) throw TypeError("word must be a UInt or UIntBE layout");
                    if ("string" == typeof e && void 0 === r && (r = e, e = void 0), 4 < t.span) throw RangeError("word cannot exceed 32 bits");
                    super(t.span, r), this.word = t, this.msb = !!e, this.fields = [];
                    let n = 0;
                    this._packedSetValue = function(t) {
                        return n = I(t), this
                    }, this._packedGetValue = function() {
                        return n
                    }
                }
                decode(t, e) {
                    let r = this.makeDestinationObject();
                    void 0 === e && (e = 0);
                    let n = this.word.decode(t, e);
                    for (let t of (this._packedSetValue(n), this.fields)) void 0 !== t.property && (r[t.property] = t.decode(n));
                    return r
                }
                encode(t, e, r) {
                    void 0 === r && (r = 0);
                    let n = this.word.decode(e, r);
                    for (let e of (this._packedSetValue(n), this.fields))
                        if (void 0 !== e.property) {
                            let r = t[e.property];
                            void 0 !== r && e.encode(r)
                        }
                    return this.word.encode(this._packedGetValue(), e, r)
                }
                addField(t, e) {
                    let r = new B(this, t, e);
                    return this.fields.push(r), r
                }
                addBoolean(t) {
                    let e = new R(this, t);
                    return this.fields.push(e), e
                }
                fieldFor(t) {
                    if ("string" != typeof t) throw TypeError("property must be string");
                    for (let e of this.fields)
                        if (e.property === t) return e
                }
            }
            class B {
                constructor(t, e, r) {
                    if (!(t instanceof M)) throw TypeError("container must be a BitStructure");
                    if (!Number.isInteger(e) || 0 >= e) throw TypeError("bits must be positive integer");
                    let n = 8 * t.span,
                        i = t.fields.reduce((t, e) => t + e.bits, 0);
                    if (e + i > n) throw Error("bits too long for span remainder (" + (n - i) + " of " + n + " remain)");
                    this.container = t, this.bits = e, this.valueMask = (1 << e) - 1, 32 === e && (this.valueMask = 4294967295), this.start = i, this.container.msb && (this.start = n - i - e), this.wordMask = I(this.valueMask << this.start), this.property = r
                }
                decode() {
                    return I(this.container._packedGetValue() & this.wordMask) >>> this.start
                }
                encode(t) {
                    if (!Number.isInteger(t) || t !== I(t & this.valueMask)) throw TypeError(o("BitField.encode", this) + " value must be integer not exceeding " + this.valueMask);
                    let e = this.container._packedGetValue(),
                        r = I(t << this.start);
                    this.container._packedSetValue(I(e & ~this.wordMask) | r)
                }
            }
            class R extends B {
                constructor(t, e) {
                    super(t, 1, e)
                }
                decode(t, e) {
                    return !!B.prototype.decode.call(this, t, e)
                }
                encode(t) {
                    return "boolean" == typeof t && (t = +t), B.prototype.encode.call(this, t)
                }
            }
            class T extends i {
                constructor(t, e) {
                    if (!(t instanceof a && t.isCount() || Number.isInteger(t) && 0 <= t)) throw TypeError("length must be positive integer or an unsigned integer ExternalLayout");
                    let r = -1;
                    t instanceof a || (r = t), super(r, e), this.length = t
                }
                getSpan(t, e) {
                    let r = this.span;
                    return 0 > r && (r = this.length.decode(t, e)), r
                }
                decode(t, e) {
                    void 0 === e && (e = 0);
                    let r = this.span;
                    return 0 > r && (r = this.length.decode(t, e)), t.slice(e, e + r)
                }
                encode(t, e, r) {
                    let i = this.length;
                    if (this.length instanceof a && (i = t.length), !(n.isBuffer(t) && i === t.length)) throw TypeError(o("Blob.encode", this) + " requires (length " + i + ") Buffer as src");
                    if (r + i > e.length) throw RangeError("encoding overruns Buffer");
                    return e.write(t.toString("hex"), r, i, "hex"), this.length instanceof a && this.length.encode(i, e, r), i
                }
            }
            class j extends i {
                constructor(t) {
                    super(-1, t)
                }
                getSpan(t, e) {
                    if (!n.isBuffer(t)) throw TypeError("b must be a Buffer");
                    void 0 === e && (e = 0);
                    let r = e;
                    for (; r < t.length && 0 !== t[r];) r += 1;
                    return 1 + r - e
                }
                decode(t, e, r) {
                    void 0 === e && (e = 0);
                    let n = this.getSpan(t, e);
                    return t.slice(e, e + n - 1).toString("utf-8")
                }
                encode(t, e, r) {
                    void 0 === r && (r = 0), "string" != typeof t && (t = t.toString());
                    let i = new n(t, "utf8"),
                        o = i.length;
                    if (r + o > e.length) throw RangeError("encoding overruns Buffer");
                    return i.copy(e, r), e[r + o] = 0, o + 1
                }
            }
            class U extends i {
                constructor(t, e) {
                    if ("string" == typeof t && void 0 === e && (e = t, t = void 0), void 0 === t) t = -1;
                    else if (!Number.isInteger(t)) throw TypeError("maxSpan must be an integer");
                    super(-1, e), this.maxSpan = t
                }
                getSpan(t, e) {
                    if (!n.isBuffer(t)) throw TypeError("b must be a Buffer");
                    return void 0 === e && (e = 0), t.length - e
                }
                decode(t, e, r) {
                    void 0 === e && (e = 0);
                    let n = this.getSpan(t, e);
                    if (0 <= this.maxSpan && this.maxSpan < n) throw RangeError("text length exceeds maxSpan");
                    return t.slice(e, e + n).toString("utf-8")
                }
                encode(t, e, r) {
                    void 0 === r && (r = 0), "string" != typeof t && (t = t.toString());
                    let i = new n(t, "utf8"),
                        o = i.length;
                    if (0 <= this.maxSpan && this.maxSpan < o) throw RangeError("text length exceeds maxSpan");
                    if (r + o > e.length) throw RangeError("encoding overruns Buffer");
                    return i.copy(e, r), o
                }
            }
            class N extends i {
                constructor(t, e) {
                    super(0, e), this.value = t
                }
                decode(t, e, r) {
                    return this.value
                }
                encode(t, e, r) {
                    return 0
                }
            }
            e.ExternalLayout = a, e.GreedyCount = u, e.OffsetLayout = c, e.UInt = l, e.UIntBE = h, e.Int = f, e.IntBE = d, e.Float = E, e.FloatBE = x, e.Double = S, e.DoubleBE = O, e.Sequence = C, e.Structure = _, e.UnionDiscriminator = A, e.UnionLayoutDiscriminator = P, e.Union = k, e.VariantLayout = D, e.BitStructure = M, e.BitField = B, e.Boolean = R, e.Blob = T, e.CString = j, e.UTF8 = U, e.Constant = N, e.greedy = (t, e) => new u(t, e), e.offset = (t, e, r) => new c(t, e, r), e.u8 = t => new l(1, t), e.u16 = t => new l(2, t), e.u24 = t => new l(3, t), e.u32 = t => new l(4, t), e.u40 = t => new l(5, t), e.u48 = t => new l(6, t), e.nu64 = t => new b(t), e.u16be = t => new h(2, t), e.u24be = t => new h(3, t), e.u32be = t => new h(4, t), e.u40be = t => new h(5, t), e.u48be = t => new h(6, t), e.nu64be = t => new g(t), e.s8 = t => new f(1, t), e.s16 = t => new f(2, t), e.s24 = t => new f(3, t), e.s32 = t => new f(4, t), e.s40 = t => new f(5, t), e.s48 = t => new f(6, t), e.ns64 = t => new w(t), e.s16be = t => new d(2, t), e.s24be = t => new d(3, t), e.s32be = t => new d(4, t), e.s40be = t => new d(5, t), e.s48be = t => new d(6, t), e.ns64be = t => new v(t), e.f32 = t => new E(t), e.f32be = t => new x(t), e.f64 = t => new S(t), e.f64be = t => new O(t), e.struct = (t, e, r) => new _(t, e, r), e.bits = (t, e, r) => new M(t, e, r), e.seq = (t, e, r) => new C(t, e, r), e.union = (t, e, r) => new k(t, e, r), e.unionLayoutDiscriminator = (t, e) => new P(t, e), e.blob = (t, e) => new T(t, e), e.cstr = t => new j(t), e.utf8 = (t, e) => new U(t, e), e.const = (t, e) => new N(t, e)
        },
        23837: function(t, e, r) {
            "use strict";
            var n = r(50071),
                i = r(72884),
                o = i(n("String.prototype.indexOf"));
            t.exports = function(t, e) {
                var r = n(t, !!e);
                return "function" == typeof r && o(t, ".prototype.") > -1 ? i(r) : r
            }
        },
        72884: function(t, e, r) {
            "use strict";
            var n = r(92517),
                i = r(50071),
                o = r(69301),
                s = r(53842),
                a = i("%Function.prototype.apply%"),
                u = i("%Function.prototype.call%"),
                c = i("%Reflect.apply%", !0) || n.call(u, a),
                l = r(10816),
                h = i("%Math.max%");
            t.exports = function(t) {
                if ("function" != typeof t) throw new s("a function is required");
                var e = c(n, u, arguments);
                return o(e, 1 + h(0, t.length - (arguments.length - 1)), !0)
            };
            var f = function() {
                return c(n, a, arguments)
            };
            l ? l(t.exports, "apply", {
                value: f
            }) : t.exports.apply = f
        },
        89445: function(t) {
            "use strict";
            var e = "%[a-f0-9]{2}",
                r = RegExp("(" + e + ")|([^%]+?)", "gi"),
                n = RegExp("(" + e + ")+", "gi");

            function i(t, e) {
                try {
                    return [decodeURIComponent(t.join(""))]
                } catch (t) {}
                if (1 === t.length) return t;
                e = e || 1;
                var r = t.slice(0, e),
                    n = t.slice(e);
                return Array.prototype.concat.call([], i(r), i(n))
            }

            function o(t) {
                try {
                    return decodeURIComponent(t)
                } catch (o) {
                    for (var e = t.match(r) || [], n = 1; n < e.length; n++) e = (t = i(e, n).join("")).match(r) || [];
                    return t
                }
            }

            function s(t) {
                for (var e = {
                        "%FE%FF": "��",
                        "%FF%FE": "��"
                    }, r = n.exec(t); r;) {
                    try {
                        e[r[0]] = decodeURIComponent(r[0])
                    } catch (t) {
                        var i = o(r[0]);
                        i !== r[0] && (e[r[0]] = i)
                    }
                    r = n.exec(t)
                }
                e["%C2"] = "�";
                for (var s = Object.keys(e), a = 0; a < s.length; a++) {
                    var u = s[a];
                    t = t.replace(RegExp(u, "g"), e[u])
                }
                return t
            }
            t.exports = function(t) {
                if ("string" != typeof t) throw TypeError("Expected `encodedURI` to be of type `string`, got `" + typeof t + "`");
                try {
                    return t = t.replace(/\+/g, " "), decodeURIComponent(t)
                } catch (e) {
                    return s(t)
                }
            }
        },
        33832: function(t, e, r) {
            "use strict";
            var n = r(10816),
                i = r(5014),
                o = r(53842),
                s = r(50297);
            t.exports = function(t, e, r) {
                if (!t || "object" != typeof t && "function" != typeof t) throw new o("`obj` must be an object or a function`");
                if ("string" != typeof e && "symbol" != typeof e) throw new o("`property` must be a string or a symbol`");
                if (arguments.length > 3 && "boolean" != typeof arguments[3] && null !== arguments[3]) throw new o("`nonEnumerable`, if provided, must be a boolean or null");
                if (arguments.length > 4 && "boolean" != typeof arguments[4] && null !== arguments[4]) throw new o("`nonWritable`, if provided, must be a boolean or null");
                if (arguments.length > 5 && "boolean" != typeof arguments[5] && null !== arguments[5]) throw new o("`nonConfigurable`, if provided, must be a boolean or null");
                if (arguments.length > 6 && "boolean" != typeof arguments[6]) throw new o("`loose`, if provided, must be a boolean");
                var a = arguments.length > 3 ? arguments[3] : null,
                    u = arguments.length > 4 ? arguments[4] : null,
                    c = arguments.length > 5 ? arguments[5] : null,
                    l = arguments.length > 6 && arguments[6],
                    h = !!s && s(t, e);
                if (n) n(t, e, {
                    configurable: null === c && h ? h.configurable : !c,
                    enumerable: null === a && h ? h.enumerable : !a,
                    value: r,
                    writable: null === u && h ? h.writable : !u
                });
                else if (!l && (a || u || c)) throw new i("This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.");
                else t[e] = r
            }
        },
        53733: function(t, e, r) {
            "use strict";
            var n = r(8486),
                i = "function" == typeof Symbol && "symbol" == typeof Symbol("foo"),
                o = Object.prototype.toString,
                s = Array.prototype.concat,
                a = r(33832),
                u = function(t) {
                    return "function" == typeof t && "[object Function]" === o.call(t)
                },
                c = r(40927)(),
                l = function(t, e, r, n) {
                    if (e in t) {
                        if (!0 === n) {
                            if (t[e] === r) return
                        } else if (!u(n) || !n()) return
                    }
                    c ? a(t, e, r, !0) : a(t, e, r)
                },
                h = function(t, e) {
                    var r = arguments.length > 2 ? arguments[2] : {},
                        o = n(e);
                    i && (o = s.call(o, Object.getOwnPropertySymbols(e)));
                    for (var a = 0; a < o.length; a += 1) l(t, o[a], e[o[a]], r[o[a]])
                };
            h.supportsDescriptors = !!c, t.exports = h
        },
        65383: function(t, e, r) {
            "use strict";
            r.d(e, {
                qY: function() {
                    return p
                }
            });
            var n = r(25566),
                i = function(t, e, r) {
                    if (r || 2 == arguments.length)
                        for (var n, i = 0, o = e.length; i < o; i++) !n && i in e || (n || (n = Array.prototype.slice.call(e, 0, i)), n[i] = e[i]);
                    return t.concat(n || Array.prototype.slice.call(e))
                },
                o = function() {
                    return function(t, e, r) {
                        this.name = t, this.version = e, this.os = r, this.type = "browser"
                    }
                }(),
                s = function() {
                    return function(t) {
                        this.version = t, this.type = "node", this.name = "node", this.os = n.platform
                    }
                }(),
                a = function() {
                    return function(t, e, r, n) {
                        this.name = t, this.version = e, this.os = r, this.bot = n, this.type = "bot-device"
                    }
                }(),
                u = function() {
                    return function() {
                        this.type = "bot", this.bot = !0, this.name = "bot", this.version = null, this.os = null
                    }
                }(),
                c = function() {
                    return function() {
                        this.type = "react-native", this.name = "react-native", this.version = null, this.os = null
                    }
                }(),
                l = /(nuhk|curl|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\ Jeeves\/Teoma|ia_archiver)/,
                h = 3,
                f = [
                    ["aol", /AOLShield\/([0-9\._]+)/],
                    ["edge", /Edge\/([0-9\._]+)/],
                    ["edge-ios", /EdgiOS\/([0-9\._]+)/],
                    ["yandexbrowser", /YaBrowser\/([0-9\._]+)/],
                    ["kakaotalk", /KAKAOTALK\s([0-9\.]+)/],
                    ["samsung", /SamsungBrowser\/([0-9\.]+)/],
                    ["silk", /\bSilk\/([0-9._-]+)\b/],
                    ["miui", /MiuiBrowser\/([0-9\.]+)$/],
                    ["beaker", /BeakerBrowser\/([0-9\.]+)/],
                    ["edge-chromium", /EdgA?\/([0-9\.]+)/],
                    ["chromium-webview", /(?!Chrom.*OPR)wv\).*Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/],
                    ["chrome", /(?!Chrom.*OPR)Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/],
                    ["phantomjs", /PhantomJS\/([0-9\.]+)(:?\s|$)/],
                    ["crios", /CriOS\/([0-9\.]+)(:?\s|$)/],
                    ["firefox", /Firefox\/([0-9\.]+)(?:\s|$)/],
                    ["fxios", /FxiOS\/([0-9\.]+)/],
                    ["opera-mini", /Opera Mini.*Version\/([0-9\.]+)/],
                    ["opera", /Opera\/([0-9\.]+)(?:\s|$)/],
                    ["opera", /OPR\/([0-9\.]+)(:?\s|$)/],
                    ["pie", /^Microsoft Pocket Internet Explorer\/(\d+\.\d+)$/],
                    ["pie", /^Mozilla\/\d\.\d+\s\(compatible;\s(?:MSP?IE|MSInternet Explorer) (\d+\.\d+);.*Windows CE.*\)$/],
                    ["netfront", /^Mozilla\/\d\.\d+.*NetFront\/(\d.\d)/],
                    ["ie", /Trident\/7\.0.*rv\:([0-9\.]+).*\).*Gecko$/],
                    ["ie", /MSIE\s([0-9\.]+);.*Trident\/[4-7].0/],
                    ["ie", /MSIE\s(7\.0)/],
                    ["bb10", /BB10;\sTouch.*Version\/([0-9\.]+)/],
                    ["android", /Android\s([0-9\.]+)/],
                    ["ios", /Version\/([0-9\._]+).*Mobile.*Safari.*/],
                    ["safari", /Version\/([0-9\._]+).*Safari/],
                    ["facebook", /FB[AS]V\/([0-9\.]+)/],
                    ["instagram", /Instagram\s([0-9\.]+)/],
                    ["ios-webview", /AppleWebKit\/([0-9\.]+).*Mobile/],
                    ["ios-webview", /AppleWebKit\/([0-9\.]+).*Gecko\)$/],
                    ["curl", /^curl\/([0-9\.]+)$/],
                    ["searchbot", /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/]
                ],
                d = [
                    ["iOS", /iP(hone|od|ad)/],
                    ["Android OS", /Android/],
                    ["BlackBerry OS", /BlackBerry|BB10/],
                    ["Windows Mobile", /IEMobile/],
                    ["Amazon OS", /Kindle/],
                    ["Windows 3.11", /Win16/],
                    ["Windows 95", /(Windows 95)|(Win95)|(Windows_95)/],
                    ["Windows 98", /(Windows 98)|(Win98)/],
                    ["Windows 2000", /(Windows NT 5.0)|(Windows 2000)/],
                    ["Windows XP", /(Windows NT 5.1)|(Windows XP)/],
                    ["Windows Server 2003", /(Windows NT 5.2)/],
                    ["Windows Vista", /(Windows NT 6.0)/],
                    ["Windows 7", /(Windows NT 6.1)/],
                    ["Windows 8", /(Windows NT 6.2)/],
                    ["Windows 8.1", /(Windows NT 6.3)/],
                    ["Windows 10", /(Windows NT 10.0)/],
                    ["Windows ME", /Windows ME/],
                    ["Windows CE", /Windows CE|WinCE|Microsoft Pocket Internet Explorer/],
                    ["Open BSD", /OpenBSD/],
                    ["Sun OS", /SunOS/],
                    ["Chrome OS", /CrOS/],
                    ["Linux", /(Linux)|(X11)/],
                    ["Mac OS", /(Mac_PowerPC)|(Macintosh)/],
                    ["QNX", /QNX/],
                    ["BeOS", /BeOS/],
                    ["OS/2", /OS\/2/]
                ];

            function p(t) {
                return t ? m(t) : "undefined" == typeof document && "undefined" != typeof navigator && "ReactNative" === navigator.product ? new c : "undefined" != typeof navigator ? m(navigator.userAgent) : g()
            }

            function y(t) {
                return "" !== t && f.reduce(function(e, r) {
                    var n = r[0],
                        i = r[1];
                    if (e) return e;
                    var o = i.exec(t);
                    return !!o && [n, o]
                }, !1)
            }

            function m(t) {
                var e = y(t);
                if (!e) return null;
                var r = e[0],
                    n = e[1];
                if ("searchbot" === r) return new u;
                var s = n[1] && n[1].split(".").join("_").split("_").slice(0, 3);
                s ? s.length < h && (s = i(i([], s, !0), w(h - s.length), !0)) : s = [];
                var c = s.join("."),
                    f = b(t),
                    d = l.exec(t);
                return d && d[1] ? new a(r, c, f, d[1]) : new o(r, c, f)
            }

            function b(t) {
                for (var e = 0, r = d.length; e < r; e++) {
                    var n = d[e],
                        i = n[0];
                    if (n[1].exec(t)) return i
                }
                return null
            }

            function g() {
                return void 0 !== n && n.version ? new s(n.version.slice(1)) : null
            }

            function w(t) {
                for (var e = [], r = 0; r < t; r++) e.push("0");
                return e
            }
        },
        46946: function(t) {
            "use strict";
            var e = {
                single_source_shortest_paths: function(t, r, n) {
                    var i, o, s, a, u, c, l, h = {},
                        f = {};
                    f[r] = 0;
                    var d = e.PriorityQueue.make();
                    for (d.push(r, 0); !d.empty();)
                        for (s in o = (i = d.pop()).value, a = i.cost, u = t[o] || {}) u.hasOwnProperty(s) && (c = a + u[s], l = f[s], (void 0 === f[s] || l > c) && (f[s] = c, d.push(s, c), h[s] = o));
                    if (void 0 !== n && void 0 === f[n]) throw Error(["Could not find a path from ", r, " to ", n, "."].join(""));
                    return h
                },
                extract_shortest_path_from_predecessor_list: function(t, e) {
                    for (var r, n = [], i = e; i;) n.push(i), r = t[i], i = t[i];
                    return n.reverse(), n
                },
                find_path: function(t, r, n) {
                    var i = e.single_source_shortest_paths(t, r, n);
                    return e.extract_shortest_path_from_predecessor_list(i, n)
                },
                PriorityQueue: {
                    make: function(t) {
                        var r, n = e.PriorityQueue,
                            i = {};
                        for (r in t = t || {}, n) n.hasOwnProperty(r) && (i[r] = n[r]);
                        return i.queue = [], i.sorter = t.sorter || n.default_sorter, i
                    },
                    default_sorter: function(t, e) {
                        return t.cost - e.cost
                    },
                    push: function(t, e) {
                        var r = {
                            value: t,
                            cost: e
                        };
                        this.queue.push(r), this.queue.sort(this.sorter)
                    },
                    pop: function() {
                        return this.queue.shift()
                    },
                    empty: function() {
                        return 0 === this.queue.length
                    }
                }
            };
            t.exports = e
        },
        8878: function(t) {
            "use strict";
            t.exports = function(t) {
                for (var e = [], r = t.length, n = 0; n < r; n++) {
                    var i = t.charCodeAt(n);
                    if (i >= 55296 && i <= 56319 && r > n + 1) {
                        var o = t.charCodeAt(n + 1);
                        o >= 56320 && o <= 57343 && (i = (i - 55296) * 1024 + o - 56320 + 65536, n += 1)
                    }
                    if (i < 128) {
                        e.push(i);
                        continue
                    }
                    if (i < 2048) {
                        e.push(i >> 6 | 192), e.push(63 & i | 128);
                        continue
                    }
                    if (i < 55296 || i >= 57344 && i < 65536) {
                        e.push(i >> 12 | 224), e.push(i >> 6 & 63 | 128), e.push(63 & i | 128);
                        continue
                    }
                    if (i >= 65536 && i <= 1114111) {
                        e.push(i >> 18 | 240), e.push(i >> 12 & 63 | 128), e.push(i >> 6 & 63 | 128), e.push(63 & i | 128);
                        continue
                    }
                    e.push(239, 191, 189)
                }
                return new Uint8Array(e).buffer
            }
        },
        10816: function(t, e, r) {
            "use strict";
            var n = r(50071)("%Object.defineProperty%", !0) || !1;
            if (n) try {
                n({}, "a", {
                    value: 1
                })
            } catch (t) {
                n = !1
            }
            t.exports = n
        },
        12107: function(t) {
            "use strict";
            t.exports = EvalError
        },
        22016: function(t) {
            "use strict";
            t.exports = Error
        },
        2706: function(t) {
            "use strict";
            t.exports = RangeError
        },
        926: function(t) {
            "use strict";
            t.exports = ReferenceError
        },
        5014: function(t) {
            "use strict";
            t.exports = SyntaxError
        },
        53842: function(t) {
            "use strict";
            t.exports = TypeError
        },
        34662: function(t) {
            "use strict";
            t.exports = URIError
        },
        77625: function(t) {
            "use strict";
            var e = Object.prototype.hasOwnProperty,
                r = "~";

            function n() {}

            function i(t, e, r) {
                this.fn = t, this.context = e, this.once = r || !1
            }

            function o(t, e, n, o, s) {
                if ("function" != typeof n) throw TypeError("The listener must be a function");
                var a = new i(n, o || t, s),
                    u = r ? r + e : e;
                return t._events[u] ? t._events[u].fn ? t._events[u] = [t._events[u], a] : t._events[u].push(a) : (t._events[u] = a, t._eventsCount++), t
            }

            function s(t, e) {
                0 == --t._eventsCount ? t._events = new n : delete t._events[e]
            }

            function a() {
                this._events = new n, this._eventsCount = 0
            }
            Object.create && (n.prototype = Object.create(null), new n().__proto__ || (r = !1)), a.prototype.eventNames = function() {
                var t, n, i = [];
                if (0 === this._eventsCount) return i;
                for (n in t = this._events) e.call(t, n) && i.push(r ? n.slice(1) : n);
                return Object.getOwnPropertySymbols ? i.concat(Object.getOwnPropertySymbols(t)) : i
            }, a.prototype.listeners = function(t) {
                var e = r ? r + t : t,
                    n = this._events[e];
                if (!n) return [];
                if (n.fn) return [n.fn];
                for (var i = 0, o = n.length, s = Array(o); i < o; i++) s[i] = n[i].fn;
                return s
            }, a.prototype.listenerCount = function(t) {
                var e = r ? r + t : t,
                    n = this._events[e];
                return n ? n.fn ? 1 : n.length : 0
            }, a.prototype.emit = function(t, e, n, i, o, s) {
                var a = r ? r + t : t;
                if (!this._events[a]) return !1;
                var u, c, l = this._events[a],
                    h = arguments.length;
                if (l.fn) {
                    switch (l.once && this.removeListener(t, l.fn, void 0, !0), h) {
                        case 1:
                            return l.fn.call(l.context), !0;
                        case 2:
                            return l.fn.call(l.context, e), !0;
                        case 3:
                            return l.fn.call(l.context, e, n), !0;
                        case 4:
                            return l.fn.call(l.context, e, n, i), !0;
                        case 5:
                            return l.fn.call(l.context, e, n, i, o), !0;
                        case 6:
                            return l.fn.call(l.context, e, n, i, o, s), !0
                    }
                    for (c = 1, u = Array(h - 1); c < h; c++) u[c - 1] = arguments[c];
                    l.fn.apply(l.context, u)
                } else {
                    var f, d = l.length;
                    for (c = 0; c < d; c++) switch (l[c].once && this.removeListener(t, l[c].fn, void 0, !0), h) {
                        case 1:
                            l[c].fn.call(l[c].context);
                            break;
                        case 2:
                            l[c].fn.call(l[c].context, e);
                            break;
                        case 3:
                            l[c].fn.call(l[c].context, e, n);
                            break;
                        case 4:
                            l[c].fn.call(l[c].context, e, n, i);
                            break;
                        default:
                            if (!u)
                                for (f = 1, u = Array(h - 1); f < h; f++) u[f - 1] = arguments[f];
                            l[c].fn.apply(l[c].context, u)
                    }
                }
                return !0
            }, a.prototype.on = function(t, e, r) {
                return o(this, t, e, r, !1)
            }, a.prototype.once = function(t, e, r) {
                return o(this, t, e, r, !0)
            }, a.prototype.removeListener = function(t, e, n, i) {
                var o = r ? r + t : t;
                if (!this._events[o]) return this;
                if (!e) return s(this, o), this;
                var a = this._events[o];
                if (a.fn) a.fn !== e || i && !a.once || n && a.context !== n || s(this, o);
                else {
                    for (var u = 0, c = [], l = a.length; u < l; u++)(a[u].fn !== e || i && !a[u].once || n && a[u].context !== n) && c.push(a[u]);
                    c.length ? this._events[o] = 1 === c.length ? c[0] : c : s(this, o)
                }
                return this
            }, a.prototype.removeAllListeners = function(t) {
                var e;
                return t ? (e = r ? r + t : t, this._events[e] && s(this, e)) : (this._events = new n, this._eventsCount = 0), this
            }, a.prototype.off = a.prototype.removeListener, a.prototype.addListener = a.prototype.on, a.prefixed = r, a.EventEmitter = a, t.exports = a
        },
        90883: function(t) {
            "use strict";
            t.exports = function(t, e) {
                for (var r = {}, n = Object.keys(t), i = Array.isArray(e), o = 0; o < n.length; o++) {
                    var s = n[o],
                        a = t[s];
                    (i ? -1 !== e.indexOf(s) : e(s, a, t)) && (r[s] = a)
                }
                return r
            }
        },
        27660: function(t, e, r) {
            "use strict";
            var n = r(52262),
                i = Object.prototype.toString,
                o = Object.prototype.hasOwnProperty,
                s = function(t, e, r) {
                    for (var n = 0, i = t.length; n < i; n++) o.call(t, n) && (null == r ? e(t[n], n, t) : e.call(r, t[n], n, t))
                },
                a = function(t, e, r) {
                    for (var n = 0, i = t.length; n < i; n++) null == r ? e(t.charAt(n), n, t) : e.call(r, t.charAt(n), n, t)
                },
                u = function(t, e, r) {
                    for (var n in t) o.call(t, n) && (null == r ? e(t[n], n, t) : e.call(r, t[n], n, t))
                },
                c = function(t, e, r) {
                    var o;
                    if (!n(e)) throw TypeError("iterator must be a function");
                    arguments.length >= 3 && (o = r), "[object Array]" === i.call(t) ? s(t, e, o) : "string" == typeof t ? a(t, e, o) : u(t, e, o)
                };
            t.exports = c
        },
        98595: function(t) {
            "use strict";
            var e = "Function.prototype.bind called on incompatible ",
                r = Object.prototype.toString,
                n = Math.max,
                i = "[object Function]",
                o = function(t, e) {
                    for (var r = [], n = 0; n < t.length; n += 1) r[n] = t[n];
                    for (var i = 0; i < e.length; i += 1) r[i + t.length] = e[i];
                    return r
                },
                s = function(t, e) {
                    for (var r = [], n = e || 0, i = 0; n < t.length; n += 1, i += 1) r[i] = t[n];
                    return r
                },
                a = function(t, e) {
                    for (var r = "", n = 0; n < t.length; n += 1) r += t[n], n + 1 < t.length && (r += e);
                    return r
                };
            t.exports = function(t) {
                var u, c = this;
                if ("function" != typeof c || r.apply(c) !== i) throw TypeError(e + c);
                for (var l = s(arguments, 1), h = function() {
                        if (this instanceof u) {
                            var e = c.apply(this, o(l, arguments));
                            return Object(e) === e ? e : this
                        }
                        return c.apply(t, o(l, arguments))
                    }, f = n(0, c.length - l.length), d = [], p = 0; p < f; p++) d[p] = "$" + p;
                if (u = Function("binder", "return function (" + a(d, ",") + "){ return binder.apply(this,arguments); }")(h), c.prototype) {
                    var y = function() {};
                    y.prototype = c.prototype, u.prototype = new y, y.prototype = null
                }
                return u
            }
        },
        92517: function(t, e, r) {
            "use strict";
            var n = r(98595);
            t.exports = Function.prototype.bind || n
        },
        50071: function(t, e, r) {
            "use strict";
            var n, i = r(22016),
                o = r(12107),
                s = r(2706),
                a = r(926),
                u = r(5014),
                c = r(53842),
                l = r(34662),
                h = Function,
                f = function(t) {
                    try {
                        return h('"use strict"; return (' + t + ").constructor;")()
                    } catch (t) {}
                },
                d = Object.getOwnPropertyDescriptor;
            if (d) try {
                d({}, "")
            } catch (t) {
                d = null
            }
            var p = function() {
                    throw new c
                },
                y = d ? function() {
                    try {
                        return arguments.callee, p
                    } catch (t) {
                        try {
                            return d(arguments, "callee").get
                        } catch (t) {
                            return p
                        }
                    }
                }() : p,
                m = r(35222)(),
                b = r(70551)(),
                g = Object.getPrototypeOf || (b ? function(t) {
                    return t.__proto__
                } : null),
                w = {},
                v = "undefined" != typeof Uint8Array && g ? g(Uint8Array) : n,
                E = {
                    __proto__: null,
                    "%AggregateError%": "undefined" == typeof AggregateError ? n : AggregateError,
                    "%Array%": Array,
                    "%ArrayBuffer%": "undefined" == typeof ArrayBuffer ? n : ArrayBuffer,
                    "%ArrayIteratorPrototype%": m && g ? g([][Symbol.iterator]()) : n,
                    "%AsyncFromSyncIteratorPrototype%": n,
                    "%AsyncFunction%": w,
                    "%AsyncGenerator%": w,
                    "%AsyncGeneratorFunction%": w,
                    "%AsyncIteratorPrototype%": w,
                    "%Atomics%": "undefined" == typeof Atomics ? n : Atomics,
                    "%BigInt%": "undefined" == typeof BigInt ? n : BigInt,
                    "%BigInt64Array%": "undefined" == typeof BigInt64Array ? n : BigInt64Array,
                    "%BigUint64Array%": "undefined" == typeof BigUint64Array ? n : BigUint64Array,
                    "%Boolean%": Boolean,
                    "%DataView%": "undefined" == typeof DataView ? n : DataView,
                    "%Date%": Date,
                    "%decodeURI%": decodeURI,
                    "%decodeURIComponent%": decodeURIComponent,
                    "%encodeURI%": encodeURI,
                    "%encodeURIComponent%": encodeURIComponent,
                    "%Error%": i,
                    "%eval%": eval,
                    "%EvalError%": o,
                    "%Float32Array%": "undefined" == typeof Float32Array ? n : Float32Array,
                    "%Float64Array%": "undefined" == typeof Float64Array ? n : Float64Array,
                    "%FinalizationRegistry%": "undefined" == typeof FinalizationRegistry ? n : FinalizationRegistry,
                    "%Function%": h,
                    "%GeneratorFunction%": w,
                    "%Int8Array%": "undefined" == typeof Int8Array ? n : Int8Array,
                    "%Int16Array%": "undefined" == typeof Int16Array ? n : Int16Array,
                    "%Int32Array%": "undefined" == typeof Int32Array ? n : Int32Array,
                    "%isFinite%": isFinite,
                    "%isNaN%": isNaN,
                    "%IteratorPrototype%": m && g ? g(g([][Symbol.iterator]())) : n,
                    "%JSON%": "object" == typeof JSON ? JSON : n,
                    "%Map%": "undefined" == typeof Map ? n : Map,
                    "%MapIteratorPrototype%": "undefined" != typeof Map && m && g ? g(new Map()[Symbol.iterator]()) : n,
                    "%Math%": Math,
                    "%Number%": Number,
                    "%Object%": Object,
                    "%parseFloat%": parseFloat,
                    "%parseInt%": parseInt,
                    "%Promise%": "undefined" == typeof Promise ? n : Promise,
                    "%Proxy%": "undefined" == typeof Proxy ? n : Proxy,
                    "%RangeError%": s,
                    "%ReferenceError%": a,
                    "%Reflect%": "undefined" == typeof Reflect ? n : Reflect,
                    "%RegExp%": RegExp,
                    "%Set%": "undefined" == typeof Set ? n : Set,
                    "%SetIteratorPrototype%": "undefined" != typeof Set && m && g ? g(new Set()[Symbol.iterator]()) : n,
                    "%SharedArrayBuffer%": "undefined" == typeof SharedArrayBuffer ? n : SharedArrayBuffer,
                    "%String%": String,
                    "%StringIteratorPrototype%": m && g ? g("" [Symbol.iterator]()) : n,
                    "%Symbol%": m ? Symbol : n,
                    "%SyntaxError%": u,
                    "%ThrowTypeError%": y,
                    "%TypedArray%": v,
                    "%TypeError%": c,
                    "%Uint8Array%": "undefined" == typeof Uint8Array ? n : Uint8Array,
                    "%Uint8ClampedArray%": "undefined" == typeof Uint8ClampedArray ? n : Uint8ClampedArray,
                    "%Uint16Array%": "undefined" == typeof Uint16Array ? n : Uint16Array,
                    "%Uint32Array%": "undefined" == typeof Uint32Array ? n : Uint32Array,
                    "%URIError%": l,
                    "%WeakMap%": "undefined" == typeof WeakMap ? n : WeakMap,
                    "%WeakRef%": "undefined" == typeof WeakRef ? n : WeakRef,
                    "%WeakSet%": "undefined" == typeof WeakSet ? n : WeakSet
                };
            if (g) try {
                null.error
            } catch (t) {
                var x = g(g(t));
                E["%Error.prototype%"] = x
            }
            var S = function t(e) {
                    var r;
                    if ("%AsyncFunction%" === e) r = f("async function () {}");
                    else if ("%GeneratorFunction%" === e) r = f("function* () {}");
                    else if ("%AsyncGeneratorFunction%" === e) r = f("async function* () {}");
                    else if ("%AsyncGenerator%" === e) {
                        var n = t("%AsyncGeneratorFunction%");
                        n && (r = n.prototype)
                    } else if ("%AsyncIteratorPrototype%" === e) {
                        var i = t("%AsyncGenerator%");
                        i && g && (r = g(i.prototype))
                    }
                    return E[e] = r, r
                },
                O = {
                    __proto__: null,
                    "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"],
                    "%ArrayPrototype%": ["Array", "prototype"],
                    "%ArrayProto_entries%": ["Array", "prototype", "entries"],
                    "%ArrayProto_forEach%": ["Array", "prototype", "forEach"],
                    "%ArrayProto_keys%": ["Array", "prototype", "keys"],
                    "%ArrayProto_values%": ["Array", "prototype", "values"],
                    "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"],
                    "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"],
                    "%AsyncGeneratorPrototype%": ["AsyncGeneratorFunction", "prototype", "prototype"],
                    "%BooleanPrototype%": ["Boolean", "prototype"],
                    "%DataViewPrototype%": ["DataView", "prototype"],
                    "%DatePrototype%": ["Date", "prototype"],
                    "%ErrorPrototype%": ["Error", "prototype"],
                    "%EvalErrorPrototype%": ["EvalError", "prototype"],
                    "%Float32ArrayPrototype%": ["Float32Array", "prototype"],
                    "%Float64ArrayPrototype%": ["Float64Array", "prototype"],
                    "%FunctionPrototype%": ["Function", "prototype"],
                    "%Generator%": ["GeneratorFunction", "prototype"],
                    "%GeneratorPrototype%": ["GeneratorFunction", "prototype", "prototype"],
                    "%Int8ArrayPrototype%": ["Int8Array", "prototype"],
                    "%Int16ArrayPrototype%": ["Int16Array", "prototype"],
                    "%Int32ArrayPrototype%": ["Int32Array", "prototype"],
                    "%JSONParse%": ["JSON", "parse"],
                    "%JSONStringify%": ["JSON", "stringify"],
                    "%MapPrototype%": ["Map", "prototype"],
                    "%NumberPrototype%": ["Number", "prototype"],
                    "%ObjectPrototype%": ["Object", "prototype"],
                    "%ObjProto_toString%": ["Object", "prototype", "toString"],
                    "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"],
                    "%PromisePrototype%": ["Promise", "prototype"],
                    "%PromiseProto_then%": ["Promise", "prototype", "then"],
                    "%Promise_all%": ["Promise", "all"],
                    "%Promise_reject%": ["Promise", "reject"],
                    "%Promise_resolve%": ["Promise", "resolve"],
                    "%RangeErrorPrototype%": ["RangeError", "prototype"],
                    "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"],
                    "%RegExpPrototype%": ["RegExp", "prototype"],
                    "%SetPrototype%": ["Set", "prototype"],
                    "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"],
                    "%StringPrototype%": ["String", "prototype"],
                    "%SymbolPrototype%": ["Symbol", "prototype"],
                    "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"],
                    "%TypedArrayPrototype%": ["TypedArray", "prototype"],
                    "%TypeErrorPrototype%": ["TypeError", "prototype"],
                    "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"],
                    "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"],
                    "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"],
                    "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"],
                    "%URIErrorPrototype%": ["URIError", "prototype"],
                    "%WeakMapPrototype%": ["WeakMap", "prototype"],
                    "%WeakSetPrototype%": ["WeakSet", "prototype"]
                },
                C = r(92517),
                _ = r(2575),
                A = C.call(Function.call, Array.prototype.concat),
                P = C.call(Function.apply, Array.prototype.splice),
                k = C.call(Function.call, String.prototype.replace),
                D = C.call(Function.call, String.prototype.slice),
                I = C.call(Function.call, RegExp.prototype.exec),
                M = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g,
                B = /\\(\\)?/g,
                R = function(t) {
                    var e = D(t, 0, 1),
                        r = D(t, -1);
                    if ("%" === e && "%" !== r) throw new u("invalid intrinsic syntax, expected closing `%`");
                    if ("%" === r && "%" !== e) throw new u("invalid intrinsic syntax, expected opening `%`");
                    var n = [];
                    return k(t, M, function(t, e, r, i) {
                        n[n.length] = r ? k(i, B, "$1") : e || t
                    }), n
                },
                T = function(t, e) {
                    var r, n = t;
                    if (_(O, n) && (n = "%" + (r = O[n])[0] + "%"), _(E, n)) {
                        var i = E[n];
                        if (i === w && (i = S(n)), void 0 === i && !e) throw new c("intrinsic " + t + " exists, but is not available. Please file an issue!");
                        return {
                            alias: r,
                            name: n,
                            value: i
                        }
                    }
                    throw new u("intrinsic " + t + " does not exist!")
                };
            t.exports = function(t, e) {
                if ("string" != typeof t || 0 === t.length) throw new c("intrinsic name must be a non-empty string");
                if (arguments.length > 1 && "boolean" != typeof e) throw new c('"allowMissing" argument must be a boolean');
                if (null === I(/^%?[^%]*%?$/, t)) throw new u("`%` may not be present anywhere but at the beginning and end of the intrinsic name");
                var r = R(t),
                    n = r.length > 0 ? r[0] : "",
                    i = T("%" + n + "%", e),
                    o = i.name,
                    s = i.value,
                    a = !1,
                    l = i.alias;
                l && (n = l[0], P(r, A([0, 1], l)));
                for (var h = 1, f = !0; h < r.length; h += 1) {
                    var p = r[h],
                        y = D(p, 0, 1),
                        m = D(p, -1);
                    if (('"' === y || "'" === y || "`" === y || '"' === m || "'" === m || "`" === m) && y !== m) throw new u("property names with quotes must have matching quotes");
                    if ("constructor" !== p && f || (a = !0), n += "." + p, _(E, o = "%" + n + "%")) s = E[o];
                    else if (null != s) {
                        if (!(p in s)) {
                            if (!e) throw new c("base intrinsic for " + t + " exists, but the property is not available.");
                            return
                        }
                        if (d && h + 1 >= r.length) {
                            var b = d(s, p);
                            s = (f = !!b) && "get" in b && !("originalValue" in b.get) ? b.get : s[p]
                        } else f = _(s, p), s = s[p];
                        f && !a && (E[o] = s)
                    }
                }
                return s
            }
        },
        50297: function(t, e, r) {
            "use strict";
            var n = r(50071)("%Object.getOwnPropertyDescriptor%", !0);
            if (n) try {
                n([], "length")
            } catch (t) {
                n = null
            }
            t.exports = n
        },
        40927: function(t, e, r) {
            "use strict";
            var n = r(10816),
                i = function() {
                    return !!n
                };
            i.hasArrayLengthDefineBug = function() {
                if (!n) return null;
                try {
                    return 1 !== n([], "length", {
                        value: 1
                    }).length
                } catch (t) {
                    return !0
                }
            }, t.exports = i
        },
        70551: function(t) {
            "use strict";
            var e = {
                    __proto__: null,
                    foo: {}
                },
                r = Object;
            t.exports = function() {
                return ({
                    __proto__: e
                }).foo === e.foo && !(e instanceof r)
            }
        },
        35222: function(t, e, r) {
            "use strict";
            var n = "undefined" != typeof Symbol && Symbol,
                i = r(38056);
            t.exports = function() {
                return "function" == typeof n && "function" == typeof Symbol && "symbol" == typeof n("foo") && "symbol" == typeof Symbol("bar") && i()
            }
        },
        38056: function(t) {
            "use strict";
            t.exports = function() {
                if ("function" != typeof Symbol || "function" != typeof Object.getOwnPropertySymbols) return !1;
                if ("symbol" == typeof Symbol.iterator) return !0;
                var t = {},
                    e = Symbol("test"),
                    r = Object(e);
                if ("string" == typeof e || "[object Symbol]" !== Object.prototype.toString.call(e) || "[object Symbol]" !== Object.prototype.toString.call(r)) return !1;
                var n = 42;
                for (e in t[e] = n, t) return !1;
                if ("function" == typeof Object.keys && 0 !== Object.keys(t).length || "function" == typeof Object.getOwnPropertyNames && 0 !== Object.getOwnPropertyNames(t).length) return !1;
                var i = Object.getOwnPropertySymbols(t);
                if (1 !== i.length || i[0] !== e || !Object.prototype.propertyIsEnumerable.call(t, e)) return !1;
                if ("function" == typeof Object.getOwnPropertyDescriptor) {
                    var o = Object.getOwnPropertyDescriptor(t, e);
                    if (o.value !== n || !0 !== o.enumerable) return !1
                }
                return !0
            }
        },
        50212: function(t, e, r) {
            "use strict";
            var n = r(38056);
            t.exports = function() {
                return n() && !!Symbol.toStringTag
            }
        },
        2575: function(t, e, r) {
            "use strict";
            var n = Function.prototype.call,
                i = Object.prototype.hasOwnProperty,
                o = r(92517);
            t.exports = o.call(n, i)
        },
        56853: function(t) {
            "function" == typeof Object.create ? t.exports = function(t, e) {
                e && (t.super_ = e, t.prototype = Object.create(e.prototype, {
                    constructor: {
                        value: t,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }))
            } : t.exports = function(t, e) {
                if (e) {
                    t.super_ = e;
                    var r = function() {};
                    r.prototype = e.prototype, t.prototype = new r, t.prototype.constructor = t
                }
            }
        },
        23722: function(t, e, r) {
            "use strict";
            var n = r(50212)(),
                i = r(23837)("Object.prototype.toString"),
                o = function(t) {
                    return (!n || !t || "object" != typeof t || !(Symbol.toStringTag in t)) && "[object Arguments]" === i(t)
                },
                s = function(t) {
                    return !!o(t) || null !== t && "object" == typeof t && "number" == typeof t.length && t.length >= 0 && "[object Array]" !== i(t) && "[object Function]" === i(t.callee)
                },
                a = function() {
                    return o(arguments)
                }();
            o.isLegacyArguments = s, t.exports = a ? o : s
        },
        52262: function(t) {
            "use strict";
            var e, r, n = Function.prototype.toString,
                i = "object" == typeof Reflect && null !== Reflect && Reflect.apply;
            if ("function" == typeof i && "function" == typeof Object.defineProperty) try {
                e = Object.defineProperty({}, "length", {
                    get: function() {
                        throw r
                    }
                }), r = {}, i(function() {
                    throw 42
                }, null, e)
            } catch (t) {
                t !== r && (i = null)
            } else i = null;
            var o = /^\s*class\b/,
                s = function(t) {
                    try {
                        var e = n.call(t);
                        return o.test(e)
                    } catch (t) {
                        return !1
                    }
                },
                a = function(t) {
                    try {
                        if (s(t)) return !1;
                        return n.call(t), !0
                    } catch (t) {
                        return !1
                    }
                },
                u = Object.prototype.toString,
                c = "[object Object]",
                l = "[object Function]",
                h = "[object GeneratorFunction]",
                f = "[object HTMLAllCollection]",
                d = "[object HTML document.all class]",
                p = "[object HTMLCollection]",
                y = "function" == typeof Symbol && !!Symbol.toStringTag,
                m = !(0 in [, ]),
                b = function() {
                    return !1
                };
            if ("object" == typeof document) {
                var g = document.all;
                u.call(g) === u.call(document.all) && (b = function(t) {
                    if ((m || !t) && (void 0 === t || "object" == typeof t)) try {
                        var e = u.call(t);
                        return (e === f || e === d || e === p || e === c) && null == t("")
                    } catch (t) {}
                    return !1
                })
            }
            t.exports = i ? function(t) {
                if (b(t)) return !0;
                if (!t || "function" != typeof t && "object" != typeof t) return !1;
                try {
                    i(t, null, e)
                } catch (t) {
                    if (t !== r) return !1
                }
                return !s(t) && a(t)
            } : function(t) {
                if (b(t)) return !0;
                if (!t || "function" != typeof t && "object" != typeof t) return !1;
                if (y) return a(t);
                if (s(t)) return !1;
                var e = u.call(t);
                return !!(e === l || e === h || /^\[object HTML/.test(e)) && a(t)
            }
        },
        80184: function(t, e, r) {
            "use strict";
            var n, i = Object.prototype.toString,
                o = Function.prototype.toString,
                s = /^\s*(?:function)?\*/,
                a = r(50212)(),
                u = Object.getPrototypeOf,
                c = function() {
                    if (!a) return !1;
                    try {
                        return Function("return function*() {}")()
                    } catch (t) {}
                };
            t.exports = function(t) {
                if ("function" != typeof t) return !1;
                if (s.test(o.call(t))) return !0;
                if (!a) return "[object GeneratorFunction]" === i.call(t);
                if (!u) return !1;
                if (void 0 === n) {
                    var e = c();
                    n = !!e && u(e)
                }
                return u(t) === n
            }
        },
        81263: function(t) {
            "use strict";
            t.exports = function(t) {
                return t != t
            }
        },
        30664: function(t, e, r) {
            "use strict";
            var n = r(72884),
                i = r(53733),
                o = r(81263),
                s = r(88150),
                a = r(19882),
                u = n(s(), Number);
            i(u, {
                getPolyfill: s,
                implementation: o,
                shim: a
            }), t.exports = u
        },
        88150: function(t, e, r) {
            "use strict";
            var n = r(81263);
            t.exports = function() {
                return Number.isNaN && Number.isNaN(NaN) && !Number.isNaN("a") ? Number.isNaN : n
            }
        },
        19882: function(t, e, r) {
            "use strict";
            var n = r(53733),
                i = r(88150);
            t.exports = function() {
                var t = i();
                return n(Number, {
                    isNaN: t
                }, {
                    isNaN: function() {
                        return Number.isNaN !== t
                    }
                }), t
            }
        },
        87688: function(t, e, r) {
            "use strict";
            var n = r(93790);
            t.exports = function(t) {
                return !!n(t)
            }
        },
        69983: function(t, e, r) {
            "use strict";
            let n = r(43763).v4,
                i = r(40789),
                o = function(t, e) {
                    if (!(this instanceof o)) return new o(t, e);
                    e || (e = {}), this.options = {
                        reviver: void 0 !== e.reviver ? e.reviver : null,
                        replacer: void 0 !== e.replacer ? e.replacer : null,
                        generator: void 0 !== e.generator ? e.generator : function() {
                            return n()
                        },
                        version: void 0 !== e.version ? e.version : 2,
                        notificationIdNull: "boolean" == typeof e.notificationIdNull && e.notificationIdNull
                    }, this.callServer = t
                };
            t.exports = o, o.prototype.request = function(t, e, r, n) {
                let o;
                let s = this,
                    a = null,
                    u = Array.isArray(t) && "function" == typeof e;
                if (1 === this.options.version && u) throw TypeError("JSON-RPC 1.0 does not support batching");
                let c = !u && t && "object" == typeof t && "function" == typeof e;
                if (u || c) n = e, a = t;
                else {
                    "function" == typeof r && (n = r, r = void 0);
                    let o = "function" == typeof n;
                    try {
                        a = i(t, e, r, {
                            generator: this.options.generator,
                            version: this.options.version,
                            notificationIdNull: this.options.notificationIdNull
                        })
                    } catch (t) {
                        if (o) return n(t);
                        throw t
                    }
                    if (!o) return a
                }
                try {
                    o = JSON.stringify(a, this.options.replacer)
                } catch (t) {
                    return n(t)
                }
                return this.callServer(o, function(t, e) {
                    s._parseResponse(t, e, n)
                }), a
            }, o.prototype._parseResponse = function(t, e, r) {
                let n;
                if (t) {
                    r(t);
                    return
                }
                if (!e) return r();
                try {
                    n = JSON.parse(e, this.options.reviver)
                } catch (t) {
                    return r(t)
                }
                if (3 === r.length) {
                    if (!Array.isArray(n)) return r(null, n.error, n.result); {
                        let t = function(t) {
                                return void 0 !== t.error
                            },
                            e = function(e) {
                                return !t(e)
                            };
                        return r(null, n.filter(t), n.filter(e))
                    }
                }
                r(null, n)
            }
        },
        40789: function(t, e, r) {
            "use strict";
            let n = r(43763).v4,
                i = function(t, e, r, i) {
                    if ("string" != typeof t) throw TypeError(t + " must be a string");
                    let o = "number" == typeof(i = i || {}).version ? i.version : 2;
                    if (1 !== o && 2 !== o) throw TypeError(o + " must be 1 or 2");
                    let s = {
                        method: t
                    };
                    if (2 === o && (s.jsonrpc = "2.0"), e) {
                        if ("object" != typeof e && !Array.isArray(e)) throw TypeError(e + " must be an object, array or omitted");
                        s.params = e
                    }
                    if (void 0 === r) {
                        let t = "function" == typeof i.generator ? i.generator : function() {
                            return n()
                        };
                        s.id = t(s, i)
                    } else 2 === o && null === r ? i.notificationIdNull && (s.id = null) : s.id = r;
                    return s
                };
            t.exports = i
        },
        84358: function(t, e, r) {
            "use strict";
            var n;

            function i(t, e) {
                void 0 === e && (e = "0");
                var r, n = 0,
                    i = -1;
                "-" != t[0] || c(t = t.substring(1)) || (n++, i = 1, t.length), "-" != e[0] || c(e = e.substring(1)) || (n++, i = 2, e.length), t = s(t), e = s(e), t = (r = a(s(t), s(e)))[0], e = r[1], 1 == n && (1 === i ? t = o(t) : 2 === i && (e = o(e)));
                var l = u(t, e);
                return n ? 2 == n ? "-" + s(l) : t.length < l.length ? s(l.substring(1)) : "-" + s(o(l)) : s(l)
            }

            function o(t) {
                if (c(t)) return t;
                for (var e = "", r = t.length, n = t.split(".")[1], i = n ? n.length : 0, o = 0; o < r; o++) t[o] >= "0" && t[o] <= "9" ? e += 9 - parseInt(t[o]) : e += t[o];
                return u(e, i > 0 ? "0." + Array(i).join("0") + "1" : "1")
            }

            function s(t) {
                var e = t.split(".");
                for (e[0] || (e[0] = "0");
                    "0" == e[0][0] && e[0].length > 1;) e[0] = e[0].substring(1);
                return e[0] + (e[1] ? "." + e[1] : "")
            }

            function a(t, e) {
                var r = t.split("."),
                    n = e.split("."),
                    i = r[0].length,
                    o = n[0].length;
                return i > o ? n[0] = Array(Math.abs(i - o) + 1).join("0") + (n[0] ? n[0] : "") : r[0] = Array(Math.abs(i - o) + 1).join("0") + (r[0] ? r[0] : ""), i = r[1] ? r[1].length : 0, o = n[1] ? n[1].length : 0, (i || o) && (i > o ? n[1] = (n[1] ? n[1] : "") + Array(Math.abs(i - o) + 1).join("0") : r[1] = (r[1] ? r[1] : "") + Array(Math.abs(i - o) + 1).join("0")), [t = r[0] + (r[1] ? "." + r[1] : ""), e = n[0] + (n[1] ? "." + n[1] : "")]
            }

            function u(t, e) {
                t = (r = a(t, e))[0], e = r[1];
                for (var r, n = "", i = 0, o = t.length - 1; o >= 0; o--) {
                    if ("." === t[o]) {
                        n = "." + n;
                        continue
                    }
                    var s = parseInt(t[o]) + parseInt(e[o]) + i;
                    n = s % 10 + n, i = Math.floor(s / 10)
                }
                return i ? i.toString() + n : n
            }

            function c(t) {
                return /^0[0]*[.]{0,1}[0]*$/.test(t)
            }

            function l(t) {
                return (("number" == typeof t || "bigint" == typeof t) && (t = t.toString()), "-" == t[0]) ? t.substring(1) : t
            }

            function h(t, e, r) {
                if (void 0 === e && (e = 0), void 0 === r && (r = n.HALF_EVEN), r === n.UNNECESSARY) throw Error("UNNECESSARY Rounding Mode has not yet been implemented");
                ("number" == typeof t || "bigint" == typeof t) && (t = t.toString());
                var i = !1;
                "-" === t[0] && (i = !0, t = t.substring(1));
                var o = t.split("."),
                    s = o[0],
                    a = o[1];
                if (e < 0) {
                    if (e = -e, s.length <= e) return "0";
                    var u = s.substr(0, s.length - e);
                    return (i ? "-" : "") + (u = h(t = u + "." + s.substr(s.length - e) + a, 0, r)) + Array(e + 1).join("0")
                }
                if (0 == e) return s.length, f(o[1], s, i, r) && (s = d(s)), (i && parseInt(s) ? "-" : "") + s;
                if (!o[1]) return (i ? "-" : "") + s + "." + Array(e + 1).join("0");
                if (o[1].length < e) return (i ? "-" : "") + s + "." + o[1] + Array(e - o[1].length + 1).join("0");
                a = o[1].substring(0, e);
                var c = o[1].substring(e);
                return c && f(c, a, i, r) && (a = d(a)).length > e ? (i ? "-" : "") + d(s, parseInt(a[0])) + "." + a.substring(1) : (i && (parseInt(s) || parseInt(a)) ? "-" : "") + s + "." + a
            }

            function f(t, e, r, i) {
                if (!t || t === Array(t.length + 1).join("0") || i === n.DOWN || !r && i === n.FLOOR || r && i === n.CEILING) return !1;
                if (i === n.UP || r && i === n.FLOOR || !r && i === n.CEILING) return !0;
                var o = "5" + Array(t.length).join("0");
                if (t > o) return !0;
                if (t < o) return !1;
                switch (i) {
                    case n.HALF_DOWN:
                        return !1;
                    case n.HALF_UP:
                        return !0;
                    case n.HALF_EVEN:
                    default:
                        return parseInt(e[e.length - 1]) % 2 == 1
                }
            }

            function d(t, e) {
                void 0 === e && (e = 0), e || (e = 1), "number" == typeof t && t.toString();
                for (var r = t.length - 1, n = "", i = r; i >= 0; i--) {
                    var o = parseInt(t[i]) + e;
                    10 == o ? (e = 1, o = 0) : e = 0, n += o
                }
                return e && (n += e), n.split("").reverse().join("")
            }

            function p(t) {
                var e = "-" === t[0];
                for (e && (t = t.substr(1));
                    "0" == t[0];) t = t.substr(1);
                if (-1 != t.indexOf("."))
                    for (;
                        "0" == t[t.length - 1];) t = t.substr(0, t.length - 1);
                return "" == t || "." == t ? t = "0" : "." == t[t.length - 1] && (t = t.substr(0, t.length - 1)), "." == t[0] && (t = "0" + t), e && "0" != t && (t = "-" + t), t
            }

            function y(t, e) {
                t = t.toString(), e = e.toString();
                var r = 0;
                "-" == t[0] && (r++, t = t.substr(1)), "-" == e[0] && (r++, e = e.substr(1)), t = p(t), e = p(e);
                var n = 0,
                    i = 0; - 1 != t.indexOf(".") && (n = t.length - t.indexOf(".") - 1), -1 != e.indexOf(".") && (i = e.length - e.indexOf(".") - 1);
                var o = n + i;
                if (t = p(t.replace(".", "")), e = p(e.replace(".", "")), t.length < e.length) {
                    var s = t;
                    t = e, e = s
                }
                if ("0" == e) return "0";
                for (var a = e.length, u = 0, c = [], l = a - 1, h = "", f = 0; f < a; f++) c[f] = t.length - 1;
                for (var f = 0; f < 2 * t.length; f++) {
                    for (var d = 0, y = e.length - 1; y >= l && y >= 0; y--) c[y] > -1 && c[y] < t.length && (d += parseInt(t[c[y]--]) * parseInt(e[y]));
                    d += u, u = Math.floor(d / 10), h = d % 10 + h, l--
                }
                return h = p(m(h, o)), 1 == r && (h = "-" + h), h
            }

            function m(t, e) {
                return 0 == e ? t : (t = e >= t.length ? Array(e - t.length + 1).join("0") + t : t).substr(0, t.length - e) + "." + t.substr(t.length - e, e)
            }

            function b(t, e, r) {
                if (void 0 === r && (r = 8), 0 == e) throw Error("Cannot divide by 0");
                if (t = t.toString(), e = e.toString(), t = t.replace(/(\.\d*?[1-9])0+$/g, "$1").replace(/\.0+$/, ""), e = e.replace(/(\.\d*?[1-9])0+$/g, "$1").replace(/\.0+$/, ""), 0 == t) return "0";
                var n = 0;
                "-" == e[0] && (e = e.substring(1), n++), "-" == t[0] && (t = t.substring(1), n++);
                var o = e.indexOf(".") > 0 ? e.length - e.indexOf(".") - 1 : -1;
                if (e = s(e.replace(".", "")), o >= 0) {
                    var a = t.indexOf(".") > 0 ? t.length - t.indexOf(".") - 1 : -1;
                    if (-1 == a) t = s(t + Array(o + 1).join("0"));
                    else if (o > a) t = s((t = t.replace(".", "")) + Array(o - a + 1).join("0"));
                    else if (o < a) {
                        var u = (t = t.replace(".", "")).length - a + o;
                        t = s(t.substring(0, u) + "." + t.substring(u))
                    } else o == a && (t = s(t.replace(".", "")))
                }
                var c = 0,
                    l = e.length,
                    f = "",
                    d = t.indexOf(".") > -1 && t.indexOf(".") < l ? t.substring(0, l + 1) : t.substring(0, l);
                if (t = t.indexOf(".") > -1 && t.indexOf(".") < l ? t.substring(l + 1) : t.substring(l), d.indexOf(".") > -1) {
                    var p = d.length - d.indexOf(".") - 1;
                    l > (d = d.replace(".", "")).length && (p += l - d.length, d += Array(l - d.length + 1).join("0")), c = p, f = "0." + Array(p).join("0")
                }
                for (r += 2; c <= r;) {
                    for (var y = 0; parseInt(d) >= parseInt(e);) d = i(d, "-" + e), y++;
                    f += y, t ? ("." == t[0] && (f += ".", c++, t = t.substring(1)), d += t.substring(0, 1), t = t.substring(1)) : (c || (f += "."), c++, d += "0")
                }
                return (1 == n ? "-" : "") + s(h(f, r - 2))
            }

            function g(t, e) {
                return i(t = t.toString(), e = w(e = e.toString()))
            }

            function w(t) {
                return t = "-" == t[0] ? t.substr(1) : "-" + t
            }

            function v(t, e) {
                if (0 == e) throw Error("Cannot divide by 0");
                t = t.toString(), e = e.toString(), E(t), E(e);
                var r = "";
                return "-" == t[0] && (r = "-", t = t.substr(1)), "-" == e[0] && (e = e.substr(1)), r + g(t, y(e, h(b(t, e), 0, n.FLOOR)))
            }

            function E(t) {
                if (-1 != t.indexOf(".")) throw Error("Modulus of non-integers not supported")
            }

            function x(t, e) {
                var r, n, i = !1;
                if (t = (r = [t, e].map(function(t) {
                        return p(t)
                    }))[0], e = r[1], "-" == t[0] && "-" != e[0]) return -1;
                if ("-" != t[0] && "-" == e[0]) return 1;
                if ("-" == t[0] && "-" == e[0] && (t = t.substr(1), e = e.substr(1), i = !0), t = (n = a(t, e))[0], e = n[1], 0 == t.localeCompare(e)) return 0;
                for (var o = 0; o < t.length; o++)
                    if (t[o] != e[o]) {
                        if (t[o] > e[o]) {
                            if (i) return -1;
                            return 1
                        }
                        if (i) return 1;
                        return -1
                    }
                return 0
            }(function(t) {
                t[t.CEILING = 0] = "CEILING", t[t.DOWN = 1] = "DOWN", t[t.FLOOR = 2] = "FLOOR", t[t.HALF_DOWN = 3] = "HALF_DOWN", t[t.HALF_EVEN = 4] = "HALF_EVEN", t[t.HALF_UP = 5] = "HALF_UP", t[t.UNNECESSARY = 6] = "UNNECESSARY", t[t.UP = 7] = "UP"
            })(n || (n = {})),
            function() {
                function t(e) {
                    void 0 === e && (e = "0"), this.value = t.validate(e)
                }
                t.validate = function(t) {
                    if (t) {
                        if (isNaN(t = t.toString())) throw Error("Parameter is not a number: " + t);
                        "+" == t[0] && (t = t.substring(1))
                    } else t = "0";
                    if (t.startsWith(".") ? t = "0" + t : t.startsWith("-.") && (t = "-0" + t.substr(1)), /e/i.test(t)) {
                        var e = t.split(/[eE]/),
                            r = e[0],
                            n = e[1];
                        r = s(r);
                        var i = "";
                        "-" == r[0] && (i = "-", r = r.substring(1)), r.indexOf(".") >= 0 ? (n = parseInt(n) + r.indexOf("."), r = r.replace(".", "")) : n = parseInt(n) + r.length, t = r.length < n ? i + r + Array(n - r.length + 1).join("0") : r.length >= n && n > 0 ? i + s(r.substring(0, n)) + (r.length > n ? "." + r.substring(n) : "") : i + "0." + Array(-n + 1).join("0") + r
                    }
                    return t
                }, t.prototype.getValue = function() {
                    return this.value
                }, t.prototype.setValue = function(e) {
                    this.value = t.validate(e)
                }, t.getPrettyValue = function(e, r, n) {
                    void 0 === r && (r = 3), void 0 === n && (n = ",");
                    var i = "-" == (e = t.validate(e)).charAt(0);
                    i && (e = e.substring(1));
                    var o = e.indexOf(".");
                    o = o > 0 ? o : e.length;
                    for (var s = "", a = o; a > 0;) a < r ? (r = a, a = 0) : a -= r, s = e.substring(a, a + r) + (a < o - r && a >= 0 ? n : "") + s;
                    return (i ? "-" : "") + s + e.substring(o)
                }, t.prototype.getPrettyValue = function(e, r) {
                    return void 0 === e && (e = 3), void 0 === r && (r = ","), t.getPrettyValue(this.value, e, r)
                }, t.round = function(e, r, i) {
                    if (void 0 === r && (r = 0), void 0 === i && (i = n.HALF_EVEN), e = t.validate(e), isNaN(r)) throw Error("Precision is not a number: " + r);
                    return h(e, r, i)
                }, t.prototype.round = function(e, r) {
                    if (void 0 === e && (e = 0), void 0 === r && (r = n.HALF_EVEN), isNaN(e)) throw Error("Precision is not a number: " + e);
                    return new t(h(this.value, e, r))
                }, t.abs = function(e) {
                    return l(e = t.validate(e))
                }, t.prototype.abs = function() {
                    return new t(l(this.value))
                }, t.floor = function(e) {
                    return -1 === (e = t.validate(e)).indexOf(".") ? e : t.round(e, 0, n.FLOOR)
                }, t.prototype.floor = function() {
                    return -1 === this.value.indexOf(".") ? new t(this.value) : new t(this.value).round(0, n.FLOOR)
                }, t.ceil = function(e) {
                    return -1 === (e = t.validate(e)).indexOf(".") ? e : t.round(e, 0, n.CEILING)
                }, t.prototype.ceil = function() {
                    return -1 === this.value.indexOf(".") ? new t(this.value) : new t(this.value).round(0, n.CEILING)
                }, t.add = function(e, r) {
                    return i(e = t.validate(e), r = t.validate(r))
                }, t.prototype.add = function(e) {
                    return new t(i(this.value, e.getValue()))
                }, t.subtract = function(e, r) {
                    return g(e = t.validate(e), r = t.validate(r))
                }, t.prototype.subtract = function(e) {
                    return new t(g(this.value, e.getValue()))
                }, t.multiply = function(e, r) {
                    return y(e = t.validate(e), r = t.validate(r))
                }, t.prototype.multiply = function(e) {
                    return new t(y(this.value, e.getValue()))
                }, t.divide = function(e, r, n) {
                    return b(e = t.validate(e), r = t.validate(r), n)
                }, t.prototype.divide = function(e, r) {
                    return new t(b(this.value, e.getValue(), r))
                }, t.modulus = function(e, r) {
                    return v(e = t.validate(e), r = t.validate(r))
                }, t.prototype.modulus = function(e) {
                    return new t(v(this.value, e.getValue()))
                }, t.compareTo = function(e, r) {
                    return x(e = t.validate(e), r = t.validate(r))
                }, t.prototype.compareTo = function(t) {
                    return x(this.value, t.getValue())
                }, t.negate = function(e) {
                    return w(e = t.validate(e))
                }, t.prototype.negate = function() {
                    return new t(w(this.value))
                }, t.stripTrailingZero = function(e) {
                    return p(e = t.validate(e))
                }, t.prototype.stripTrailingZero = function() {
                    return new t(p(this.value))
                }, t.RoundingModes = n
            }()
        },
        86615: function(module, exports, __webpack_require__) {
            var __WEBPACK_AMD_DEFINE_RESULT__, process = __webpack_require__(25566);
            ! function() {
                "use strict";
                var ERROR = "input is invalid type",
                    WINDOW = "object" == typeof window,
                    root = WINDOW ? window : {};
                root.JS_SHA256_NO_WINDOW && (WINDOW = !1);
                var WEB_WORKER = !WINDOW && "object" == typeof self,
                    NODE_JS = !root.JS_SHA256_NO_NODE_JS && "object" == typeof process && process.versions && process.versions.node;
                NODE_JS ? root = __webpack_require__.g : WEB_WORKER && (root = self);
                var COMMON_JS = !root.JS_SHA256_NO_COMMON_JS && module.exports,
                    AMD = __webpack_require__.amdO,
                    ARRAY_BUFFER = !root.JS_SHA256_NO_ARRAY_BUFFER && "undefined" != typeof ArrayBuffer,
                    HEX_CHARS = "0123456789abcdef".split(""),
                    EXTRA = [-2147483648, 8388608, 32768, 128],
                    SHIFT = [24, 16, 8, 0],
                    K = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298],
                    OUTPUT_TYPES = ["hex", "array", "digest", "arrayBuffer"],
                    blocks = [];
                (root.JS_SHA256_NO_NODE_JS || !Array.isArray) && (Array.isArray = function(t) {
                    return "[object Array]" === Object.prototype.toString.call(t)
                }), ARRAY_BUFFER && (root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView) && (ArrayBuffer.isView = function(t) {
                    return "object" == typeof t && t.buffer && t.buffer.constructor === ArrayBuffer
                });
                var createOutputMethod = function(t, e) {
                        return function(r) {
                            return new Sha256(e, !0).update(r)[t]()
                        }
                    },
                    createMethod = function(t) {
                        var e = createOutputMethod("hex", t);
                        NODE_JS && (e = nodeWrap(e, t)), e.create = function() {
                            return new Sha256(t)
                        }, e.update = function(t) {
                            return e.create().update(t)
                        };
                        for (var r = 0; r < OUTPUT_TYPES.length; ++r) {
                            var n = OUTPUT_TYPES[r];
                            e[n] = createOutputMethod(n, t)
                        }
                        return e
                    },
                    nodeWrap = function(method, is224) {
                        var crypto = eval("require('crypto')"),
                            Buffer = eval("require('buffer').Buffer"),
                            algorithm = is224 ? "sha224" : "sha256",
                            nodeMethod = function(t) {
                                if ("string" == typeof t) return crypto.createHash(algorithm).update(t, "utf8").digest("hex");
                                if (null == t) throw Error(ERROR);
                                return t.constructor === ArrayBuffer && (t = new Uint8Array(t)), Array.isArray(t) || ArrayBuffer.isView(t) || t.constructor === Buffer ? crypto.createHash(algorithm).update(new Buffer(t)).digest("hex") : method(t)
                            };
                        return nodeMethod
                    },
                    createHmacOutputMethod = function(t, e) {
                        return function(r, n) {
                            return new HmacSha256(r, e, !0).update(n)[t]()
                        }
                    },
                    createHmacMethod = function(t) {
                        var e = createHmacOutputMethod("hex", t);
                        e.create = function(e) {
                            return new HmacSha256(e, t)
                        }, e.update = function(t, r) {
                            return e.create(t).update(r)
                        };
                        for (var r = 0; r < OUTPUT_TYPES.length; ++r) {
                            var n = OUTPUT_TYPES[r];
                            e[n] = createHmacOutputMethod(n, t)
                        }
                        return e
                    };

                function Sha256(t, e) {
                    e ? (blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] = blocks[4] = blocks[5] = blocks[6] = blocks[7] = blocks[8] = blocks[9] = blocks[10] = blocks[11] = blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0, this.blocks = blocks) : this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], t ? (this.h0 = 3238371032, this.h1 = 914150663, this.h2 = 812702999, this.h3 = 4144912697, this.h4 = 4290775857, this.h5 = 1750603025, this.h6 = 1694076839, this.h7 = 3204075428) : (this.h0 = 1779033703, this.h1 = 3144134277, this.h2 = 1013904242, this.h3 = 2773480762, this.h4 = 1359893119, this.h5 = 2600822924, this.h6 = 528734635, this.h7 = 1541459225), this.block = this.start = this.bytes = this.hBytes = 0, this.finalized = this.hashed = !1, this.first = !0, this.is224 = t
                }

                function HmacSha256(t, e, r) {
                    var n, i = typeof t;
                    if ("string" === i) {
                        var o, s = [],
                            a = t.length,
                            u = 0;
                        for (n = 0; n < a; ++n)(o = t.charCodeAt(n)) < 128 ? s[u++] = o : (o < 2048 ? s[u++] = 192 | o >> 6 : (o < 55296 || o >= 57344 ? s[u++] = 224 | o >> 12 : (o = 65536 + ((1023 & o) << 10 | 1023 & t.charCodeAt(++n)), s[u++] = 240 | o >> 18, s[u++] = 128 | o >> 12 & 63), s[u++] = 128 | o >> 6 & 63), s[u++] = 128 | 63 & o);
                        t = s
                    } else if ("object" === i) {
                        if (null === t) throw Error(ERROR);
                        if (ARRAY_BUFFER && t.constructor === ArrayBuffer) t = new Uint8Array(t);
                        else if (!Array.isArray(t) && (!ARRAY_BUFFER || !ArrayBuffer.isView(t))) throw Error(ERROR)
                    } else throw Error(ERROR);
                    t.length > 64 && (t = new Sha256(e, !0).update(t).array());
                    var c = [],
                        l = [];
                    for (n = 0; n < 64; ++n) {
                        var h = t[n] || 0;
                        c[n] = 92 ^ h, l[n] = 54 ^ h
                    }
                    Sha256.call(this, e, r), this.update(l), this.oKeyPad = c, this.inner = !0, this.sharedMemory = r
                }
                Sha256.prototype.update = function(t) {
                    if (!this.finalized) {
                        var e, r = typeof t;
                        if ("string" !== r) {
                            if ("object" === r) {
                                if (null === t) throw Error(ERROR);
                                if (ARRAY_BUFFER && t.constructor === ArrayBuffer) t = new Uint8Array(t);
                                else if (!Array.isArray(t) && (!ARRAY_BUFFER || !ArrayBuffer.isView(t))) throw Error(ERROR)
                            } else throw Error(ERROR);
                            e = !0
                        }
                        for (var n, i, o = 0, s = t.length, a = this.blocks; o < s;) {
                            if (this.hashed && (this.hashed = !1, a[0] = this.block, a[16] = a[1] = a[2] = a[3] = a[4] = a[5] = a[6] = a[7] = a[8] = a[9] = a[10] = a[11] = a[12] = a[13] = a[14] = a[15] = 0), e)
                                for (i = this.start; o < s && i < 64; ++o) a[i >> 2] |= t[o] << SHIFT[3 & i++];
                            else
                                for (i = this.start; o < s && i < 64; ++o)(n = t.charCodeAt(o)) < 128 ? a[i >> 2] |= n << SHIFT[3 & i++] : (n < 2048 ? a[i >> 2] |= (192 | n >> 6) << SHIFT[3 & i++] : (n < 55296 || n >= 57344 ? a[i >> 2] |= (224 | n >> 12) << SHIFT[3 & i++] : (n = 65536 + ((1023 & n) << 10 | 1023 & t.charCodeAt(++o)), a[i >> 2] |= (240 | n >> 18) << SHIFT[3 & i++], a[i >> 2] |= (128 | n >> 12 & 63) << SHIFT[3 & i++]), a[i >> 2] |= (128 | n >> 6 & 63) << SHIFT[3 & i++]), a[i >> 2] |= (128 | 63 & n) << SHIFT[3 & i++]);
                            this.lastByteIndex = i, this.bytes += i - this.start, i >= 64 ? (this.block = a[16], this.start = i - 64, this.hash(), this.hashed = !0) : this.start = i
                        }
                        return this.bytes > 4294967295 && (this.hBytes += this.bytes / 4294967296 << 0, this.bytes = this.bytes % 4294967296), this
                    }
                }, Sha256.prototype.finalize = function() {
                    if (!this.finalized) {
                        this.finalized = !0;
                        var t = this.blocks,
                            e = this.lastByteIndex;
                        t[16] = this.block, t[e >> 2] |= EXTRA[3 & e], this.block = t[16], e >= 56 && (this.hashed || this.hash(), t[0] = this.block, t[16] = t[1] = t[2] = t[3] = t[4] = t[5] = t[6] = t[7] = t[8] = t[9] = t[10] = t[11] = t[12] = t[13] = t[14] = t[15] = 0), t[14] = this.hBytes << 3 | this.bytes >>> 29, t[15] = this.bytes << 3, this.hash()
                    }
                }, Sha256.prototype.hash = function() {
                    var t, e, r, n, i, o, s, a, u, c, l, h = this.h0,
                        f = this.h1,
                        d = this.h2,
                        p = this.h3,
                        y = this.h4,
                        m = this.h5,
                        b = this.h6,
                        g = this.h7,
                        w = this.blocks;
                    for (t = 16; t < 64; ++t) e = ((i = w[t - 15]) >>> 7 | i << 25) ^ (i >>> 18 | i << 14) ^ i >>> 3, r = ((i = w[t - 2]) >>> 17 | i << 15) ^ (i >>> 19 | i << 13) ^ i >>> 10, w[t] = w[t - 16] + e + w[t - 7] + r << 0;
                    for (t = 0, l = f & d; t < 64; t += 4) this.first ? (this.is224 ? (a = 300032, g = (i = w[0] - 1413257819) - 150054599 << 0, p = i + 24177077 << 0) : (a = 704751109, g = (i = w[0] - 210244248) - 1521486534 << 0, p = i + 143694565 << 0), this.first = !1) : (e = (h >>> 2 | h << 30) ^ (h >>> 13 | h << 19) ^ (h >>> 22 | h << 10), r = (y >>> 6 | y << 26) ^ (y >>> 11 | y << 21) ^ (y >>> 25 | y << 7), n = (a = h & f) ^ h & d ^ l, i = g + r + (s = y & m ^ ~y & b) + K[t] + w[t], o = e + n, g = p + i << 0, p = i + o << 0), e = (p >>> 2 | p << 30) ^ (p >>> 13 | p << 19) ^ (p >>> 22 | p << 10), r = (g >>> 6 | g << 26) ^ (g >>> 11 | g << 21) ^ (g >>> 25 | g << 7), n = (u = p & h) ^ p & f ^ a, i = b + r + (s = g & y ^ ~g & m) + K[t + 1] + w[t + 1], o = e + n, b = d + i << 0, e = ((d = i + o << 0) >>> 2 | d << 30) ^ (d >>> 13 | d << 19) ^ (d >>> 22 | d << 10), r = (b >>> 6 | b << 26) ^ (b >>> 11 | b << 21) ^ (b >>> 25 | b << 7), n = (c = d & p) ^ d & h ^ u, i = m + r + (s = b & g ^ ~b & y) + K[t + 2] + w[t + 2], o = e + n, m = f + i << 0, e = ((f = i + o << 0) >>> 2 | f << 30) ^ (f >>> 13 | f << 19) ^ (f >>> 22 | f << 10), r = (m >>> 6 | m << 26) ^ (m >>> 11 | m << 21) ^ (m >>> 25 | m << 7), n = (l = f & d) ^ f & p ^ c, i = y + r + (s = m & b ^ ~m & g) + K[t + 3] + w[t + 3], o = e + n, y = h + i << 0, h = i + o << 0;
                    this.h0 = this.h0 + h << 0, this.h1 = this.h1 + f << 0, this.h2 = this.h2 + d << 0, this.h3 = this.h3 + p << 0, this.h4 = this.h4 + y << 0, this.h5 = this.h5 + m << 0, this.h6 = this.h6 + b << 0, this.h7 = this.h7 + g << 0
                }, Sha256.prototype.hex = function() {
                    this.finalize();
                    var t = this.h0,
                        e = this.h1,
                        r = this.h2,
                        n = this.h3,
                        i = this.h4,
                        o = this.h5,
                        s = this.h6,
                        a = this.h7,
                        u = HEX_CHARS[t >> 28 & 15] + HEX_CHARS[t >> 24 & 15] + HEX_CHARS[t >> 20 & 15] + HEX_CHARS[t >> 16 & 15] + HEX_CHARS[t >> 12 & 15] + HEX_CHARS[t >> 8 & 15] + HEX_CHARS[t >> 4 & 15] + HEX_CHARS[15 & t] + HEX_CHARS[e >> 28 & 15] + HEX_CHARS[e >> 24 & 15] + HEX_CHARS[e >> 20 & 15] + HEX_CHARS[e >> 16 & 15] + HEX_CHARS[e >> 12 & 15] + HEX_CHARS[e >> 8 & 15] + HEX_CHARS[e >> 4 & 15] + HEX_CHARS[15 & e] + HEX_CHARS[r >> 28 & 15] + HEX_CHARS[r >> 24 & 15] + HEX_CHARS[r >> 20 & 15] + HEX_CHARS[r >> 16 & 15] + HEX_CHARS[r >> 12 & 15] + HEX_CHARS[r >> 8 & 15] + HEX_CHARS[r >> 4 & 15] + HEX_CHARS[15 & r] + HEX_CHARS[n >> 28 & 15] + HEX_CHARS[n >> 24 & 15] + HEX_CHARS[n >> 20 & 15] + HEX_CHARS[n >> 16 & 15] + HEX_CHARS[n >> 12 & 15] + HEX_CHARS[n >> 8 & 15] + HEX_CHARS[n >> 4 & 15] + HEX_CHARS[15 & n] + HEX_CHARS[i >> 28 & 15] + HEX_CHARS[i >> 24 & 15] + HEX_CHARS[i >> 20 & 15] + HEX_CHARS[i >> 16 & 15] + HEX_CHARS[i >> 12 & 15] + HEX_CHARS[i >> 8 & 15] + HEX_CHARS[i >> 4 & 15] + HEX_CHARS[15 & i] + HEX_CHARS[o >> 28 & 15] + HEX_CHARS[o >> 24 & 15] + HEX_CHARS[o >> 20 & 15] + HEX_CHARS[o >> 16 & 15] + HEX_CHARS[o >> 12 & 15] + HEX_CHARS[o >> 8 & 15] + HEX_CHARS[o >> 4 & 15] + HEX_CHARS[15 & o] + HEX_CHARS[s >> 28 & 15] + HEX_CHARS[s >> 24 & 15] + HEX_CHARS[s >> 20 & 15] + HEX_CHARS[s >> 16 & 15] + HEX_CHARS[s >> 12 & 15] + HEX_CHARS[s >> 8 & 15] + HEX_CHARS[s >> 4 & 15] + HEX_CHARS[15 & s];
                    return this.is224 || (u += HEX_CHARS[a >> 28 & 15] + HEX_CHARS[a >> 24 & 15] + HEX_CHARS[a >> 20 & 15] + HEX_CHARS[a >> 16 & 15] + HEX_CHARS[a >> 12 & 15] + HEX_CHARS[a >> 8 & 15] + HEX_CHARS[a >> 4 & 15] + HEX_CHARS[15 & a]), u
                }, Sha256.prototype.toString = Sha256.prototype.hex, Sha256.prototype.digest = function() {
                    this.finalize();
                    var t = this.h0,
                        e = this.h1,
                        r = this.h2,
                        n = this.h3,
                        i = this.h4,
                        o = this.h5,
                        s = this.h6,
                        a = this.h7,
                        u = [t >> 24 & 255, t >> 16 & 255, t >> 8 & 255, 255 & t, e >> 24 & 255, e >> 16 & 255, e >> 8 & 255, 255 & e, r >> 24 & 255, r >> 16 & 255, r >> 8 & 255, 255 & r, n >> 24 & 255, n >> 16 & 255, n >> 8 & 255, 255 & n, i >> 24 & 255, i >> 16 & 255, i >> 8 & 255, 255 & i, o >> 24 & 255, o >> 16 & 255, o >> 8 & 255, 255 & o, s >> 24 & 255, s >> 16 & 255, s >> 8 & 255, 255 & s];
                    return this.is224 || u.push(a >> 24 & 255, a >> 16 & 255, a >> 8 & 255, 255 & a), u
                }, Sha256.prototype.array = Sha256.prototype.digest, Sha256.prototype.arrayBuffer = function() {
                    this.finalize();
                    var t = new ArrayBuffer(this.is224 ? 28 : 32),
                        e = new DataView(t);
                    return e.setUint32(0, this.h0), e.setUint32(4, this.h1), e.setUint32(8, this.h2), e.setUint32(12, this.h3), e.setUint32(16, this.h4), e.setUint32(20, this.h5), e.setUint32(24, this.h6), this.is224 || e.setUint32(28, this.h7), t
                }, HmacSha256.prototype = new Sha256, HmacSha256.prototype.finalize = function() {
                    if (Sha256.prototype.finalize.call(this), this.inner) {
                        this.inner = !1;
                        var t = this.array();
                        Sha256.call(this, this.is224, this.sharedMemory), this.update(this.oKeyPad), this.update(t), Sha256.prototype.finalize.call(this)
                    }
                };
                var exports = createMethod();
                exports.sha256 = exports, exports.sha224 = createMethod(!0), exports.sha256.hmac = createHmacMethod(), exports.sha224.hmac = createHmacMethod(!0), COMMON_JS ? module.exports = exports : (root.sha256 = exports.sha256, root.sha224 = exports.sha224, AMD && void 0 !== (__WEBPACK_AMD_DEFINE_RESULT__ = (function() {
                    return exports
                }).call(exports, __webpack_require__, exports, module)) && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))
            }()
        },
        86705: function(t) {
            "use strict";
            t.exports = function() {
                return Object.assign
            }
        },
        98015: function(t) {
            "use strict";
            var e = function(t) {
                return t != t
            };
            t.exports = function(t, r) {
                return 0 === t && 0 === r ? 1 / t == 1 / r : !!(t === r || e(t) && e(r))
            }
        },
        60466: function(t, e, r) {
            "use strict";
            var n = r(53733),
                i = r(72884),
                o = r(98015),
                s = r(22550),
                a = r(38317),
                u = i(s(), Object);
            n(u, {
                getPolyfill: s,
                implementation: o,
                shim: a
            }), t.exports = u
        },
        22550: function(t, e, r) {
            "use strict";
            var n = r(98015);
            t.exports = function() {
                return "function" == typeof Object.is ? Object.is : n
            }
        },
        38317: function(t, e, r) {
            "use strict";
            var n = r(22550),
                i = r(53733);
            t.exports = function() {
                var t = n();
                return i(Object, {
                    is: t
                }, {
                    is: function() {
                        return Object.is !== t
                    }
                }), t
            }
        },
        68056: function(t, e, r) {
            "use strict";
            var n;
            if (!Object.keys) {
                var i = Object.prototype.hasOwnProperty,
                    o = Object.prototype.toString,
                    s = r(94408),
                    a = Object.prototype.propertyIsEnumerable,
                    u = !a.call({
                        toString: null
                    }, "toString"),
                    c = a.call(function() {}, "prototype"),
                    l = ["toString", "toLocaleString", "valueOf", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "constructor"],
                    h = function(t) {
                        var e = t.constructor;
                        return e && e.prototype === t
                    },
                    f = {
                        $applicationCache: !0,
                        $console: !0,
                        $external: !0,
                        $frame: !0,
                        $frameElement: !0,
                        $frames: !0,
                        $innerHeight: !0,
                        $innerWidth: !0,
                        $onmozfullscreenchange: !0,
                        $onmozfullscreenerror: !0,
                        $outerHeight: !0,
                        $outerWidth: !0,
                        $pageXOffset: !0,
                        $pageYOffset: !0,
                        $parent: !0,
                        $scrollLeft: !0,
                        $scrollTop: !0,
                        $scrollX: !0,
                        $scrollY: !0,
                        $self: !0,
                        $webkitIndexedDB: !0,
                        $webkitStorageInfo: !0,
                        $window: !0
                    },
                    d = function() {
                        if ("undefined" == typeof window) return !1;
                        for (var t in window) try {
                            if (!f["$" + t] && i.call(window, t) && null !== window[t] && "object" == typeof window[t]) try {
                                h(window[t])
                            } catch (t) {
                                return !0
                            }
                        } catch (t) {
                            return !0
                        }
                        return !1
                    }(),
                    p = function(t) {
                        if ("undefined" == typeof window || !d) return h(t);
                        try {
                            return h(t)
                        } catch (t) {
                            return !1
                        }
                    };
                n = function(t) {
                    var e = null !== t && "object" == typeof t,
                        r = "[object Function]" === o.call(t),
                        n = s(t),
                        a = e && "[object String]" === o.call(t),
                        h = [];
                    if (!e && !r && !n) throw TypeError("Object.keys called on a non-object");
                    var f = c && r;
                    if (a && t.length > 0 && !i.call(t, 0))
                        for (var d = 0; d < t.length; ++d) h.push(String(d));
                    if (n && t.length > 0)
                        for (var y = 0; y < t.length; ++y) h.push(String(y));
                    else
                        for (var m in t) !(f && "prototype" === m) && i.call(t, m) && h.push(String(m));
                    if (u)
                        for (var b = p(t), g = 0; g < l.length; ++g) !(b && "constructor" === l[g]) && i.call(t, l[g]) && h.push(l[g]);
                    return h
                }
            }
            t.exports = n
        },
        8486: function(t, e, r) {
            "use strict";
            var n = Array.prototype.slice,
                i = r(94408),
                o = Object.keys,
                s = o ? function(t) {
                    return o(t)
                } : r(68056),
                a = Object.keys;
            s.shim = function() {
                return Object.keys ? ! function() {
                    var t = Object.keys(arguments);
                    return t && t.length === arguments.length
                }(1, 2) && (Object.keys = function(t) {
                    return i(t) ? a(n.call(t)) : a(t)
                }) : Object.keys = s, Object.keys || s
            }, t.exports = s
        },
        94408: function(t) {
            "use strict";
            var e = Object.prototype.toString;
            t.exports = function(t) {
                var r = e.call(t),
                    n = "[object Arguments]" === r;
                return n || (n = "[object Array]" !== r && null !== t && "object" == typeof t && "number" == typeof t.length && t.length >= 0 && "[object Function]" === e.call(t.callee)), n
            }
        },
        78584: function(t) {
            "use strict";
            t.exports = ["Float32Array", "Float64Array", "Int8Array", "Int16Array", "Int32Array", "Uint8Array", "Uint8ClampedArray", "Uint16Array", "Uint32Array", "BigInt64Array", "BigUint64Array"]
        },
        35819: function(t, e, r) {
            let n = r(64888),
                i = r(82216),
                o = r(962),
                s = r(35623);

            function a(t, e, r, o, s) {
                let a = [].slice.call(arguments, 1),
                    u = a.length,
                    c = "function" == typeof a[u - 1];
                if (!c && !n()) throw Error("Callback required as last argument");
                if (c) {
                    if (u < 2) throw Error("Too few arguments provided");
                    2 === u ? (s = r, r = e, e = o = void 0) : 3 === u && (e.getContext && void 0 === s ? (s = o, o = void 0) : (s = o, o = r, r = e, e = void 0))
                } else {
                    if (u < 1) throw Error("Too few arguments provided");
                    return 1 === u ? (r = e, e = o = void 0) : 2 !== u || e.getContext || (o = r, r = e, e = void 0), new Promise(function(n, s) {
                        try {
                            let s = i.create(r, o);
                            n(t(s, e, o))
                        } catch (t) {
                            s(t)
                        }
                    })
                }
                try {
                    let n = i.create(r, o);
                    s(null, t(n, e, o))
                } catch (t) {
                    s(t)
                }
            }
            e.create = i.create, e.toCanvas = a.bind(null, o.render), e.toDataURL = a.bind(null, o.renderToDataURL), e.toString = a.bind(null, function(t, e, r) {
                return s.render(t, r)
            })
        },
        64888: function(t) {
            t.exports = function() {
                return "function" == typeof Promise && Promise.prototype && Promise.prototype.then
            }
        },
        14691: function(t, e, r) {
            let n = r(62415).getSymbolSize;
            e.getRowColCoords = function(t) {
                if (1 === t) return [];
                let e = Math.floor(t / 7) + 2,
                    r = n(t),
                    i = 145 === r ? 26 : 2 * Math.ceil((r - 13) / (2 * e - 2)),
                    o = [r - 7];
                for (let t = 1; t < e - 1; t++) o[t] = o[t - 1] - i;
                return o.push(6), o.reverse()
            }, e.getPositions = function(t) {
                let r = [],
                    n = e.getRowColCoords(t),
                    i = n.length;
                for (let t = 0; t < i; t++)
                    for (let e = 0; e < i; e++)(0 !== t || 0 !== e) && (0 !== t || e !== i - 1) && (t !== i - 1 || 0 !== e) && r.push([n[t], n[e]]);
                return r
            }
        },
        87111: function(t, e, r) {
            let n = r(17956),
                i = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", " ", "$", "%", "*", "+", "-", ".", "/", ":"];

            function o(t) {
                this.mode = n.ALPHANUMERIC, this.data = t
            }
            o.getBitsLength = function(t) {
                return 11 * Math.floor(t / 2) + t % 2 * 6
            }, o.prototype.getLength = function() {
                return this.data.length
            }, o.prototype.getBitsLength = function() {
                return o.getBitsLength(this.data.length)
            }, o.prototype.write = function(t) {
                let e;
                for (e = 0; e + 2 <= this.data.length; e += 2) {
                    let r = 45 * i.indexOf(this.data[e]);
                    r += i.indexOf(this.data[e + 1]), t.put(r, 11)
                }
                this.data.length % 2 && t.put(i.indexOf(this.data[e]), 6)
            }, t.exports = o
        },
        9298: function(t) {
            function e() {
                this.buffer = [], this.length = 0
            }
            e.prototype = {
                get: function(t) {
                    let e = Math.floor(t / 8);
                    return (this.buffer[e] >>> 7 - t % 8 & 1) == 1
                },
                put: function(t, e) {
                    for (let r = 0; r < e; r++) this.putBit((t >>> e - r - 1 & 1) == 1)
                },
                getLengthInBits: function() {
                    return this.length
                },
                putBit: function(t) {
                    let e = Math.floor(this.length / 8);
                    this.buffer.length <= e && this.buffer.push(0), t && (this.buffer[e] |= 128 >>> this.length % 8), this.length++
                }
            }, t.exports = e
        },
        55526: function(t) {
            function e(t) {
                if (!t || t < 1) throw Error("BitMatrix size must be defined and greater than 0");
                this.size = t, this.data = new Uint8Array(t * t), this.reservedBit = new Uint8Array(t * t)
            }
            e.prototype.set = function(t, e, r, n) {
                let i = t * this.size + e;
                this.data[i] = r, n && (this.reservedBit[i] = !0)
            }, e.prototype.get = function(t, e) {
                return this.data[t * this.size + e]
            }, e.prototype.xor = function(t, e, r) {
                this.data[t * this.size + e] ^= r
            }, e.prototype.isReserved = function(t, e) {
                return this.reservedBit[t * this.size + e]
            }, t.exports = e
        },
        48153: function(t, e, r) {
            let n = r(8878),
                i = r(17956);

            function o(t) {
                this.mode = i.BYTE, "string" == typeof t && (t = n(t)), this.data = new Uint8Array(t)
            }
            o.getBitsLength = function(t) {
                return 8 * t
            }, o.prototype.getLength = function() {
                return this.data.length
            }, o.prototype.getBitsLength = function() {
                return o.getBitsLength(this.data.length)
            }, o.prototype.write = function(t) {
                for (let e = 0, r = this.data.length; e < r; e++) t.put(this.data[e], 8)
            }, t.exports = o
        },
        79386: function(t, e, r) {
            let n = r(29947),
                i = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 4, 1, 2, 4, 4, 2, 4, 4, 4, 2, 4, 6, 5, 2, 4, 6, 6, 2, 5, 8, 8, 4, 5, 8, 8, 4, 5, 8, 11, 4, 8, 10, 11, 4, 9, 12, 16, 4, 9, 16, 16, 6, 10, 12, 18, 6, 10, 17, 16, 6, 11, 16, 19, 6, 13, 18, 21, 7, 14, 21, 25, 8, 16, 20, 25, 8, 17, 23, 25, 9, 17, 23, 34, 9, 18, 25, 30, 10, 20, 27, 32, 12, 21, 29, 35, 12, 23, 34, 37, 12, 25, 34, 40, 13, 26, 35, 42, 14, 28, 38, 45, 15, 29, 40, 48, 16, 31, 43, 51, 17, 33, 45, 54, 18, 35, 48, 57, 19, 37, 51, 60, 19, 38, 53, 63, 20, 40, 56, 66, 21, 43, 59, 70, 22, 45, 62, 74, 24, 47, 65, 77, 25, 49, 68, 81],
                o = [7, 10, 13, 17, 10, 16, 22, 28, 15, 26, 36, 44, 20, 36, 52, 64, 26, 48, 72, 88, 36, 64, 96, 112, 40, 72, 108, 130, 48, 88, 132, 156, 60, 110, 160, 192, 72, 130, 192, 224, 80, 150, 224, 264, 96, 176, 260, 308, 104, 198, 288, 352, 120, 216, 320, 384, 132, 240, 360, 432, 144, 280, 408, 480, 168, 308, 448, 532, 180, 338, 504, 588, 196, 364, 546, 650, 224, 416, 600, 700, 224, 442, 644, 750, 252, 476, 690, 816, 270, 504, 750, 900, 300, 560, 810, 960, 312, 588, 870, 1050, 336, 644, 952, 1110, 360, 700, 1020, 1200, 390, 728, 1050, 1260, 420, 784, 1140, 1350, 450, 812, 1200, 1440, 480, 868, 1290, 1530, 510, 924, 1350, 1620, 540, 980, 1440, 1710, 570, 1036, 1530, 1800, 570, 1064, 1590, 1890, 600, 1120, 1680, 1980, 630, 1204, 1770, 2100, 660, 1260, 1860, 2220, 720, 1316, 1950, 2310, 750, 1372, 2040, 2430];
            e.getBlocksCount = function(t, e) {
                switch (e) {
                    case n.L:
                        return i[(t - 1) * 4 + 0];
                    case n.M:
                        return i[(t - 1) * 4 + 1];
                    case n.Q:
                        return i[(t - 1) * 4 + 2];
                    case n.H:
                        return i[(t - 1) * 4 + 3];
                    default:
                        return
                }
            }, e.getTotalCodewordsCount = function(t, e) {
                switch (e) {
                    case n.L:
                        return o[(t - 1) * 4 + 0];
                    case n.M:
                        return o[(t - 1) * 4 + 1];
                    case n.Q:
                        return o[(t - 1) * 4 + 2];
                    case n.H:
                        return o[(t - 1) * 4 + 3];
                    default:
                        return
                }
            }
        },
        29947: function(t, e) {
            function r(t) {
                if ("string" != typeof t) throw Error("Param is not a string");
                switch (t.toLowerCase()) {
                    case "l":
                    case "low":
                        return e.L;
                    case "m":
                    case "medium":
                        return e.M;
                    case "q":
                    case "quartile":
                        return e.Q;
                    case "h":
                    case "high":
                        return e.H;
                    default:
                        throw Error("Unknown EC Level: " + t)
                }
            }
            e.L = {
                bit: 1
            }, e.M = {
                bit: 0
            }, e.Q = {
                bit: 3
            }, e.H = {
                bit: 2
            }, e.isValid = function(t) {
                return t && void 0 !== t.bit && t.bit >= 0 && t.bit < 4
            }, e.from = function(t, n) {
                if (e.isValid(t)) return t;
                try {
                    return r(t)
                } catch (t) {
                    return n
                }
            }
        },
        44086: function(t, e, r) {
            let n = r(62415).getSymbolSize,
                i = 7;
            e.getPositions = function(t) {
                let e = n(t);
                return [
                    [0, 0],
                    [e - i, 0],
                    [0, e - i]
                ]
            }
        },
        27433: function(t, e, r) {
            let n = r(62415),
                i = 1335,
                o = 21522,
                s = n.getBCHDigit(i);
            e.getEncodedBits = function(t, e) {
                let r = t.bit << 3 | e,
                    a = r << 10;
                for (; n.getBCHDigit(a) - s >= 0;) a ^= i << n.getBCHDigit(a) - s;
                return (r << 10 | a) ^ o
            }
        },
        63384: function(t, e) {
            let r = new Uint8Array(512),
                n = new Uint8Array(256);
            (function() {
                let t = 1;
                for (let e = 0; e < 255; e++) r[e] = t, n[t] = e, 256 & (t <<= 1) && (t ^= 285);
                for (let t = 255; t < 512; t++) r[t] = r[t - 255]
            })(), e.log = function(t) {
                if (t < 1) throw Error("log(" + t + ")");
                return n[t]
            }, e.exp = function(t) {
                return r[t]
            }, e.mul = function(t, e) {
                return 0 === t || 0 === e ? 0 : r[n[t] + n[e]]
            }
        },
        78514: function(t, e, r) {
            let n = r(17956),
                i = r(62415);

            function o(t) {
                this.mode = n.KANJI, this.data = t
            }
            o.getBitsLength = function(t) {
                return 13 * t
            }, o.prototype.getLength = function() {
                return this.data.length
            }, o.prototype.getBitsLength = function() {
                return o.getBitsLength(this.data.length)
            }, o.prototype.write = function(t) {
                let e;
                for (e = 0; e < this.data.length; e++) {
                    let r = i.toSJIS(this.data[e]);
                    if (r >= 33088 && r <= 40956) r -= 33088;
                    else if (r >= 57408 && r <= 60351) r -= 49472;
                    else throw Error("Invalid SJIS character: " + this.data[e] + "\nMake sure your charset is UTF-8");
                    r = (r >>> 8 & 255) * 192 + (255 & r), t.put(r, 13)
                }
            }, t.exports = o
        },
        24483: function(t, e) {
            e.Patterns = {
                PATTERN000: 0,
                PATTERN001: 1,
                PATTERN010: 2,
                PATTERN011: 3,
                PATTERN100: 4,
                PATTERN101: 5,
                PATTERN110: 6,
                PATTERN111: 7
            };
            let r = {
                N1: 3,
                N2: 3,
                N3: 40,
                N4: 10
            };

            function n(t, r, n) {
                switch (t) {
                    case e.Patterns.PATTERN000:
                        return (r + n) % 2 == 0;
                    case e.Patterns.PATTERN001:
                        return r % 2 == 0;
                    case e.Patterns.PATTERN010:
                        return n % 3 == 0;
                    case e.Patterns.PATTERN011:
                        return (r + n) % 3 == 0;
                    case e.Patterns.PATTERN100:
                        return (Math.floor(r / 2) + Math.floor(n / 3)) % 2 == 0;
                    case e.Patterns.PATTERN101:
                        return r * n % 2 + r * n % 3 == 0;
                    case e.Patterns.PATTERN110:
                        return (r * n % 2 + r * n % 3) % 2 == 0;
                    case e.Patterns.PATTERN111:
                        return (r * n % 3 + (r + n) % 2) % 2 == 0;
                    default:
                        throw Error("bad maskPattern:" + t)
                }
            }
            e.isValid = function(t) {
                return null != t && "" !== t && !isNaN(t) && t >= 0 && t <= 7
            }, e.from = function(t) {
                return e.isValid(t) ? parseInt(t, 10) : void 0
            }, e.getPenaltyN1 = function(t) {
                let e = t.size,
                    n = 0,
                    i = 0,
                    o = 0,
                    s = null,
                    a = null;
                for (let u = 0; u < e; u++) {
                    i = o = 0, s = a = null;
                    for (let c = 0; c < e; c++) {
                        let e = t.get(u, c);
                        e === s ? i++ : (i >= 5 && (n += r.N1 + (i - 5)), s = e, i = 1), (e = t.get(c, u)) === a ? o++ : (o >= 5 && (n += r.N1 + (o - 5)), a = e, o = 1)
                    }
                    i >= 5 && (n += r.N1 + (i - 5)), o >= 5 && (n += r.N1 + (o - 5))
                }
                return n
            }, e.getPenaltyN2 = function(t) {
                let e = t.size,
                    n = 0;
                for (let r = 0; r < e - 1; r++)
                    for (let i = 0; i < e - 1; i++) {
                        let e = t.get(r, i) + t.get(r, i + 1) + t.get(r + 1, i) + t.get(r + 1, i + 1);
                        (4 === e || 0 === e) && n++
                    }
                return n * r.N2
            }, e.getPenaltyN3 = function(t) {
                let e = t.size,
                    n = 0,
                    i = 0,
                    o = 0;
                for (let r = 0; r < e; r++) {
                    i = o = 0;
                    for (let s = 0; s < e; s++) i = i << 1 & 2047 | t.get(r, s), s >= 10 && (1488 === i || 93 === i) && n++, o = o << 1 & 2047 | t.get(s, r), s >= 10 && (1488 === o || 93 === o) && n++
                }
                return n * r.N3
            }, e.getPenaltyN4 = function(t) {
                let e = 0,
                    n = t.data.length;
                for (let r = 0; r < n; r++) e += t.data[r];
                return Math.abs(Math.ceil(100 * e / n / 5) - 10) * r.N4
            }, e.applyMask = function(t, e) {
                let r = e.size;
                for (let i = 0; i < r; i++)
                    for (let o = 0; o < r; o++) e.isReserved(o, i) || e.xor(o, i, n(t, o, i))
            }, e.getBestMask = function(t, r) {
                let n = Object.keys(e.Patterns).length,
                    i = 0,
                    o = 1 / 0;
                for (let s = 0; s < n; s++) {
                    r(s), e.applyMask(s, t);
                    let n = e.getPenaltyN1(t) + e.getPenaltyN2(t) + e.getPenaltyN3(t) + e.getPenaltyN4(t);
                    e.applyMask(s, t), n < o && (o = n, i = s)
                }
                return i
            }
        },
        17956: function(t, e, r) {
            let n = r(96623),
                i = r(80581);

            function o(t) {
                if ("string" != typeof t) throw Error("Param is not a string");
                switch (t.toLowerCase()) {
                    case "numeric":
                        return e.NUMERIC;
                    case "alphanumeric":
                        return e.ALPHANUMERIC;
                    case "kanji":
                        return e.KANJI;
                    case "byte":
                        return e.BYTE;
                    default:
                        throw Error("Unknown mode: " + t)
                }
            }
            e.NUMERIC = {
                id: "Numeric",
                bit: 1,
                ccBits: [10, 12, 14]
            }, e.ALPHANUMERIC = {
                id: "Alphanumeric",
                bit: 2,
                ccBits: [9, 11, 13]
            }, e.BYTE = {
                id: "Byte",
                bit: 4,
                ccBits: [8, 16, 16]
            }, e.KANJI = {
                id: "Kanji",
                bit: 8,
                ccBits: [8, 10, 12]
            }, e.MIXED = {
                bit: -1
            }, e.getCharCountIndicator = function(t, e) {
                if (!t.ccBits) throw Error("Invalid mode: " + t);
                if (!n.isValid(e)) throw Error("Invalid version: " + e);
                return e >= 1 && e < 10 ? t.ccBits[0] : e < 27 ? t.ccBits[1] : t.ccBits[2]
            }, e.getBestModeForData = function(t) {
                return i.testNumeric(t) ? e.NUMERIC : i.testAlphanumeric(t) ? e.ALPHANUMERIC : i.testKanji(t) ? e.KANJI : e.BYTE
            }, e.toString = function(t) {
                if (t && t.id) return t.id;
                throw Error("Invalid mode")
            }, e.isValid = function(t) {
                return t && t.bit && t.ccBits
            }, e.from = function(t, r) {
                if (e.isValid(t)) return t;
                try {
                    return o(t)
                } catch (t) {
                    return r
                }
            }
        },
        51687: function(t, e, r) {
            let n = r(17956);

            function i(t) {
                this.mode = n.NUMERIC, this.data = t.toString()
            }
            i.getBitsLength = function(t) {
                return 10 * Math.floor(t / 3) + (t % 3 ? t % 3 * 3 + 1 : 0)
            }, i.prototype.getLength = function() {
                return this.data.length
            }, i.prototype.getBitsLength = function() {
                return i.getBitsLength(this.data.length)
            }, i.prototype.write = function(t) {
                let e, r, n;
                for (e = 0; e + 3 <= this.data.length; e += 3) n = parseInt(r = this.data.substr(e, 3), 10), t.put(n, 10);
                let i = this.data.length - e;
                i > 0 && (n = parseInt(r = this.data.substr(e), 10), t.put(n, 3 * i + 1))
            }, t.exports = i
        },
        46413: function(t, e, r) {
            let n = r(63384);
            e.mul = function(t, e) {
                let r = new Uint8Array(t.length + e.length - 1);
                for (let i = 0; i < t.length; i++)
                    for (let o = 0; o < e.length; o++) r[i + o] ^= n.mul(t[i], e[o]);
                return r
            }, e.mod = function(t, e) {
                let r = new Uint8Array(t);
                for (; r.length - e.length >= 0;) {
                    let t = r[0];
                    for (let i = 0; i < e.length; i++) r[i] ^= n.mul(e[i], t);
                    let i = 0;
                    for (; i < r.length && 0 === r[i];) i++;
                    r = r.slice(i)
                }
                return r
            }, e.generateECPolynomial = function(t) {
                let r = new Uint8Array([1]);
                for (let i = 0; i < t; i++) r = e.mul(r, new Uint8Array([1, n.exp(i)]));
                return r
            }
        },
        82216: function(t, e, r) {
            let n = r(62415),
                i = r(29947),
                o = r(9298),
                s = r(55526),
                a = r(14691),
                u = r(44086),
                c = r(24483),
                l = r(79386),
                h = r(24011),
                f = r(33379),
                d = r(27433),
                p = r(17956),
                y = r(89940);

            function m(t, e) {
                let r = t.size,
                    n = u.getPositions(e);
                for (let e = 0; e < n.length; e++) {
                    let i = n[e][0],
                        o = n[e][1];
                    for (let e = -1; e <= 7; e++)
                        if (!(i + e <= -1) && !(r <= i + e))
                            for (let n = -1; n <= 7; n++) o + n <= -1 || r <= o + n || (e >= 0 && e <= 6 && (0 === n || 6 === n) || n >= 0 && n <= 6 && (0 === e || 6 === e) || e >= 2 && e <= 4 && n >= 2 && n <= 4 ? t.set(i + e, o + n, !0, !0) : t.set(i + e, o + n, !1, !0))
                }
            }

            function b(t) {
                let e = t.size;
                for (let r = 8; r < e - 8; r++) {
                    let e = r % 2 == 0;
                    t.set(r, 6, e, !0), t.set(6, r, e, !0)
                }
            }

            function g(t, e) {
                let r = a.getPositions(e);
                for (let e = 0; e < r.length; e++) {
                    let n = r[e][0],
                        i = r[e][1];
                    for (let e = -2; e <= 2; e++)
                        for (let r = -2; r <= 2; r++) - 2 === e || 2 === e || -2 === r || 2 === r || 0 === e && 0 === r ? t.set(n + e, i + r, !0, !0) : t.set(n + e, i + r, !1, !0)
                }
            }

            function w(t, e) {
                let r, n, i;
                let o = t.size,
                    s = f.getEncodedBits(e);
                for (let e = 0; e < 18; e++) r = Math.floor(e / 3), n = e % 3 + o - 8 - 3, i = (s >> e & 1) == 1, t.set(r, n, i, !0), t.set(n, r, i, !0)
            }

            function v(t, e, r) {
                let n, i;
                let o = t.size,
                    s = d.getEncodedBits(e, r);
                for (n = 0; n < 15; n++) i = (s >> n & 1) == 1, n < 6 ? t.set(n, 8, i, !0) : n < 8 ? t.set(n + 1, 8, i, !0) : t.set(o - 15 + n, 8, i, !0), n < 8 ? t.set(8, o - n - 1, i, !0) : n < 9 ? t.set(8, 15 - n - 1 + 1, i, !0) : t.set(8, 15 - n - 1, i, !0);
                t.set(o - 8, 8, 1, !0)
            }

            function E(t, e) {
                let r = t.size,
                    n = -1,
                    i = r - 1,
                    o = 7,
                    s = 0;
                for (let a = r - 1; a > 0; a -= 2)
                    for (6 === a && a--;;) {
                        for (let r = 0; r < 2; r++)
                            if (!t.isReserved(i, a - r)) {
                                let n = !1;
                                s < e.length && (n = (e[s] >>> o & 1) == 1), t.set(i, a - r, n), -1 == --o && (s++, o = 7)
                            }
                        if ((i += n) < 0 || r <= i) {
                            i -= n, n = -n;
                            break
                        }
                    }
            }

            function x(t, e, r) {
                let i = new o;
                r.forEach(function(e) {
                    i.put(e.mode.bit, 4), i.put(e.getLength(), p.getCharCountIndicator(e.mode, t)), e.write(i)
                });
                let s = (n.getSymbolTotalCodewords(t) - l.getTotalCodewordsCount(t, e)) * 8;
                for (i.getLengthInBits() + 4 <= s && i.put(0, 4); i.getLengthInBits() % 8 != 0;) i.putBit(0);
                let a = (s - i.getLengthInBits()) / 8;
                for (let t = 0; t < a; t++) i.put(t % 2 ? 17 : 236, 8);
                return S(i, t, e)
            }

            function S(t, e, r) {
                let i, o;
                let s = n.getSymbolTotalCodewords(e),
                    a = s - l.getTotalCodewordsCount(e, r),
                    u = l.getBlocksCount(e, r),
                    c = s % u,
                    f = u - c,
                    d = Math.floor(s / u),
                    p = Math.floor(a / u),
                    y = p + 1,
                    m = d - p,
                    b = new h(m),
                    g = 0,
                    w = Array(u),
                    v = Array(u),
                    E = 0,
                    x = new Uint8Array(t.buffer);
                for (let t = 0; t < u; t++) {
                    let e = t < f ? p : y;
                    w[t] = x.slice(g, g + e), v[t] = b.encode(w[t]), g += e, E = Math.max(E, e)
                }
                let S = new Uint8Array(s),
                    O = 0;
                for (i = 0; i < E; i++)
                    for (o = 0; o < u; o++) i < w[o].length && (S[O++] = w[o][i]);
                for (i = 0; i < m; i++)
                    for (o = 0; o < u; o++) S[O++] = v[o][i];
                return S
            }

            function O(t, e, r, i) {
                let o;
                if (Array.isArray(t)) o = y.fromArray(t);
                else if ("string" == typeof t) {
                    let n = e;
                    if (!n) {
                        let e = y.rawSplit(t);
                        n = f.getBestVersionForData(e, r)
                    }
                    o = y.fromString(t, n || 40)
                } else throw Error("Invalid data");
                let a = f.getBestVersionForData(o, r);
                if (!a) throw Error("The amount of data is too big to be stored in a QR Code");
                if (e) {
                    if (e < a) throw Error("\nThe chosen QR Code version cannot contain this amount of data.\nMinimum version required to store current data is: " + a + ".\n")
                } else e = a;
                let u = x(e, r, o),
                    l = new s(n.getSymbolSize(e));
                return m(l, e), b(l), g(l, e), v(l, r, 0), e >= 7 && w(l, e), E(l, u), isNaN(i) && (i = c.getBestMask(l, v.bind(null, l, r))), c.applyMask(i, l), v(l, r, i), {
                    modules: l,
                    version: e,
                    errorCorrectionLevel: r,
                    maskPattern: i,
                    segments: o
                }
            }
            e.create = function(t, e) {
                let r, o;
                if (void 0 === t || "" === t) throw Error("No input text");
                let s = i.M;
                return void 0 !== e && (s = i.from(e.errorCorrectionLevel, i.M), r = f.from(e.version), o = c.from(e.maskPattern), e.toSJISFunc && n.setToSJISFunction(e.toSJISFunc)), O(t, r, s, o)
            }
        },
        24011: function(t, e, r) {
            let n = r(46413);

            function i(t) {
                this.genPoly = void 0, this.degree = t, this.degree && this.initialize(this.degree)
            }
            i.prototype.initialize = function(t) {
                this.degree = t, this.genPoly = n.generateECPolynomial(this.degree)
            }, i.prototype.encode = function(t) {
                if (!this.genPoly) throw Error("Encoder not initialized");
                let e = new Uint8Array(t.length + this.degree);
                e.set(t);
                let r = n.mod(e, this.genPoly),
                    i = this.degree - r.length;
                if (i > 0) {
                    let t = new Uint8Array(this.degree);
                    return t.set(r, i), t
                }
                return r
            }, t.exports = i
        },
        80581: function(t, e) {
            let r = "[0-9]+",
                n = "[A-Z $%*+\\-./:]+",
                i = "(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+",
                o = "(?:(?![A-Z0-9 $%*+\\-./:]|" + (i = i.replace(/u/g, "\\u")) + ")(?:.|[\r\n]))+";
            e.KANJI = RegExp(i, "g"), e.BYTE_KANJI = RegExp("[^A-Z0-9 $%*+\\-./:]+", "g"), e.BYTE = RegExp(o, "g"), e.NUMERIC = RegExp(r, "g"), e.ALPHANUMERIC = RegExp(n, "g");
            let s = RegExp("^" + i + "$"),
                a = RegExp("^" + r + "$"),
                u = RegExp("^[A-Z0-9 $%*+\\-./:]+$");
            e.testKanji = function(t) {
                return s.test(t)
            }, e.testNumeric = function(t) {
                return a.test(t)
            }, e.testAlphanumeric = function(t) {
                return u.test(t)
            }
        },
        89940: function(t, e, r) {
            let n = r(17956),
                i = r(51687),
                o = r(87111),
                s = r(48153),
                a = r(78514),
                u = r(80581),
                c = r(62415),
                l = r(46946);

            function h(t) {
                return unescape(encodeURIComponent(t)).length
            }

            function f(t, e, r) {
                let n;
                let i = [];
                for (; null !== (n = t.exec(r));) i.push({
                    data: n[0],
                    index: n.index,
                    mode: e,
                    length: n[0].length
                });
                return i
            }

            function d(t) {
                let e, r;
                let i = f(u.NUMERIC, n.NUMERIC, t),
                    o = f(u.ALPHANUMERIC, n.ALPHANUMERIC, t);
                return c.isKanjiModeEnabled() ? (e = f(u.BYTE, n.BYTE, t), r = f(u.KANJI, n.KANJI, t)) : (e = f(u.BYTE_KANJI, n.BYTE, t), r = []), i.concat(o, e, r).sort(function(t, e) {
                    return t.index - e.index
                }).map(function(t) {
                    return {
                        data: t.data,
                        mode: t.mode,
                        length: t.length
                    }
                })
            }

            function p(t, e) {
                switch (e) {
                    case n.NUMERIC:
                        return i.getBitsLength(t);
                    case n.ALPHANUMERIC:
                        return o.getBitsLength(t);
                    case n.KANJI:
                        return a.getBitsLength(t);
                    case n.BYTE:
                        return s.getBitsLength(t)
                }
            }

            function y(t) {
                return t.reduce(function(t, e) {
                    let r = t.length - 1 >= 0 ? t[t.length - 1] : null;
                    return r && r.mode === e.mode ? t[t.length - 1].data += e.data : t.push(e), t
                }, [])
            }

            function m(t) {
                let e = [];
                for (let r = 0; r < t.length; r++) {
                    let i = t[r];
                    switch (i.mode) {
                        case n.NUMERIC:
                            e.push([i, {
                                data: i.data,
                                mode: n.ALPHANUMERIC,
                                length: i.length
                            }, {
                                data: i.data,
                                mode: n.BYTE,
                                length: i.length
                            }]);
                            break;
                        case n.ALPHANUMERIC:
                            e.push([i, {
                                data: i.data,
                                mode: n.BYTE,
                                length: i.length
                            }]);
                            break;
                        case n.KANJI:
                            e.push([i, {
                                data: i.data,
                                mode: n.BYTE,
                                length: h(i.data)
                            }]);
                            break;
                        case n.BYTE:
                            e.push([{
                                data: i.data,
                                mode: n.BYTE,
                                length: h(i.data)
                            }])
                    }
                }
                return e
            }

            function b(t, e) {
                let r = {},
                    i = {
                        start: {}
                    },
                    o = ["start"];
                for (let s = 0; s < t.length; s++) {
                    let a = t[s],
                        u = [];
                    for (let t = 0; t < a.length; t++) {
                        let c = a[t],
                            l = "" + s + t;
                        u.push(l), r[l] = {
                            node: c,
                            lastCount: 0
                        }, i[l] = {};
                        for (let t = 0; t < o.length; t++) {
                            let s = o[t];
                            r[s] && r[s].node.mode === c.mode ? (i[s][l] = p(r[s].lastCount + c.length, c.mode) - p(r[s].lastCount, c.mode), r[s].lastCount += c.length) : (r[s] && (r[s].lastCount = c.length), i[s][l] = p(c.length, c.mode) + 4 + n.getCharCountIndicator(c.mode, e))
                        }
                    }
                    o = u
                }
                for (let t = 0; t < o.length; t++) i[o[t]].end = 0;
                return {
                    map: i,
                    table: r
                }
            }

            function g(t, e) {
                let r;
                let u = n.getBestModeForData(t);
                if ((r = n.from(e, u)) !== n.BYTE && r.bit < u.bit) throw Error('"' + t + '" cannot be encoded with mode ' + n.toString(r) + ".\n Suggested mode is: " + n.toString(u));
                switch (r !== n.KANJI || c.isKanjiModeEnabled() || (r = n.BYTE), r) {
                    case n.NUMERIC:
                        return new i(t);
                    case n.ALPHANUMERIC:
                        return new o(t);
                    case n.KANJI:
                        return new a(t);
                    case n.BYTE:
                        return new s(t)
                }
            }
            e.fromArray = function(t) {
                return t.reduce(function(t, e) {
                    return "string" == typeof e ? t.push(g(e, null)) : e.data && t.push(g(e.data, e.mode)), t
                }, [])
            }, e.fromString = function(t, r) {
                let n = b(m(d(t, c.isKanjiModeEnabled())), r),
                    i = l.find_path(n.map, "start", "end"),
                    o = [];
                for (let t = 1; t < i.length - 1; t++) o.push(n.table[i[t]].node);
                return e.fromArray(y(o))
            }, e.rawSplit = function(t) {
                return e.fromArray(d(t, c.isKanjiModeEnabled()))
            }
        },
        62415: function(t, e) {
            let r;
            let n = [0, 26, 44, 70, 100, 134, 172, 196, 242, 292, 346, 404, 466, 532, 581, 655, 733, 815, 901, 991, 1085, 1156, 1258, 1364, 1474, 1588, 1706, 1828, 1921, 2051, 2185, 2323, 2465, 2611, 2761, 2876, 3034, 3196, 3362, 3532, 3706];
            e.getSymbolSize = function(t) {
                if (!t) throw Error('"version" cannot be null or undefined');
                if (t < 1 || t > 40) throw Error('"version" should be in range from 1 to 40');
                return 4 * t + 17
            }, e.getSymbolTotalCodewords = function(t) {
                return n[t]
            }, e.getBCHDigit = function(t) {
                let e = 0;
                for (; 0 !== t;) e++, t >>>= 1;
                return e
            }, e.setToSJISFunction = function(t) {
                if ("function" != typeof t) throw Error('"toSJISFunc" is not a valid function.');
                r = t
            }, e.isKanjiModeEnabled = function() {
                return void 0 !== r
            }, e.toSJIS = function(t) {
                return r(t)
            }
        },
        96623: function(t, e) {
            e.isValid = function(t) {
                return !isNaN(t) && t >= 1 && t <= 40
            }
        },
        33379: function(t, e, r) {
            let n = r(62415),
                i = r(79386),
                o = r(29947),
                s = r(17956),
                a = r(96623),
                u = 7973,
                c = n.getBCHDigit(u);

            function l(t, r, n) {
                for (let i = 1; i <= 40; i++)
                    if (r <= e.getCapacity(i, n, t)) return i
            }

            function h(t, e) {
                return s.getCharCountIndicator(t, e) + 4
            }

            function f(t, e) {
                let r = 0;
                return t.forEach(function(t) {
                    let n = h(t.mode, e);
                    r += n + t.getBitsLength()
                }), r
            }

            function d(t, r) {
                for (let n = 1; n <= 40; n++)
                    if (f(t, n) <= e.getCapacity(n, r, s.MIXED)) return n
            }
            e.from = function(t, e) {
                return a.isValid(t) ? parseInt(t, 10) : e
            }, e.getCapacity = function(t, e, r) {
                if (!a.isValid(t)) throw Error("Invalid QR Code version");
                void 0 === r && (r = s.BYTE);
                let o = (n.getSymbolTotalCodewords(t) - i.getTotalCodewordsCount(t, e)) * 8;
                if (r === s.MIXED) return o;
                let u = o - h(r, t);
                switch (r) {
                    case s.NUMERIC:
                        return Math.floor(u / 10 * 3);
                    case s.ALPHANUMERIC:
                        return Math.floor(u / 11 * 2);
                    case s.KANJI:
                        return Math.floor(u / 13);
                    case s.BYTE:
                    default:
                        return Math.floor(u / 8)
                }
            }, e.getBestVersionForData = function(t, e) {
                let r;
                let n = o.from(e, o.M);
                if (Array.isArray(t)) {
                    if (t.length > 1) return d(t, n);
                    if (0 === t.length) return 1;
                    r = t[0]
                } else r = t;
                return l(r.mode, r.getLength(), n)
            }, e.getEncodedBits = function(t) {
                if (!a.isValid(t) || t < 7) throw Error("Invalid QR Code version");
                let e = t << 12;
                for (; n.getBCHDigit(e) - c >= 0;) e ^= u << n.getBCHDigit(e) - c;
                return t << 12 | e
            }
        },
        962: function(t, e, r) {
            let n = r(87220);

            function i(t, e, r) {
                t.clearRect(0, 0, e.width, e.height), e.style || (e.style = {}), e.height = r, e.width = r, e.style.height = r + "px", e.style.width = r + "px"
            }

            function o() {
                try {
                    return document.createElement("canvas")
                } catch (t) {
                    throw Error("You need to specify a canvas element")
                }
            }
            e.render = function(t, e, r) {
                let s = r,
                    a = e;
                void 0 !== s || e && e.getContext || (s = e, e = void 0), e || (a = o()), s = n.getOptions(s);
                let u = n.getImageWidth(t.modules.size, s),
                    c = a.getContext("2d"),
                    l = c.createImageData(u, u);
                return n.qrToImageData(l.data, t, s), i(c, a, u), c.putImageData(l, 0, 0), a
            }, e.renderToDataURL = function(t, r, n) {
                let i = n;
                void 0 !== i || r && r.getContext || (i = r, r = void 0), i || (i = {});
                let o = e.render(t, r, i),
                    s = i.type || "image/png",
                    a = i.rendererOpts || {};
                return o.toDataURL(s, a.quality)
            }
        },
        35623: function(t, e, r) {
            let n = r(87220);

            function i(t, e) {
                let r = t.a / 255,
                    n = e + '="' + t.hex + '"';
                return r < 1 ? n + " " + e + '-opacity="' + r.toFixed(2).slice(1) + '"' : n
            }

            function o(t, e, r) {
                let n = t + e;
                return void 0 !== r && (n += " " + r), n
            }

            function s(t, e, r) {
                let n = "",
                    i = 0,
                    s = !1,
                    a = 0;
                for (let u = 0; u < t.length; u++) {
                    let c = Math.floor(u % e),
                        l = Math.floor(u / e);
                    c || s || (s = !0), t[u] ? (a++, u > 0 && c > 0 && t[u - 1] || (n += s ? o("M", c + r, .5 + l + r) : o("m", i, 0), i = 0, s = !1), c + 1 < e && t[u + 1] || (n += o("h", a), a = 0)) : i++
                }
                return n
            }
            e.render = function(t, e, r) {
                let o = n.getOptions(e),
                    a = t.modules.size,
                    u = t.modules.data,
                    c = a + 2 * o.margin,
                    l = o.color.light.a ? "<path " + i(o.color.light, "fill") + ' d="M0 0h' + c + "v" + c + 'H0z"/>' : "",
                    h = "<path " + i(o.color.dark, "stroke") + ' d="' + s(u, a, o.margin) + '"/>',
                    f = 'viewBox="0 0 ' + c + " " + c + '"',
                    d = '<svg xmlns="http://www.w3.org/2000/svg" ' + (o.width ? 'width="' + o.width + '" height="' + o.width + '" ' : "") + f + ' shape-rendering="crispEdges">' + l + h + "</svg>\n";
                return "function" == typeof r && r(null, d), d
            }
        },
        87220: function(t, e) {
            function r(t) {
                if ("number" == typeof t && (t = t.toString()), "string" != typeof t) throw Error("Color should be defined as hex string");
                let e = t.slice().replace("#", "").split("");
                if (e.length < 3 || 5 === e.length || e.length > 8) throw Error("Invalid hex color: " + t);
                (3 === e.length || 4 === e.length) && (e = Array.prototype.concat.apply([], e.map(function(t) {
                    return [t, t]
                }))), 6 === e.length && e.push("F", "F");
                let r = parseInt(e.join(""), 16);
                return {
                    r: r >> 24 & 255,
                    g: r >> 16 & 255,
                    b: r >> 8 & 255,
                    a: 255 & r,
                    hex: "#" + e.slice(0, 6).join("")
                }
            }
            e.getOptions = function(t) {
                t || (t = {}), t.color || (t.color = {});
                let e = void 0 === t.margin || null === t.margin || t.margin < 0 ? 4 : t.margin,
                    n = t.width && t.width >= 21 ? t.width : void 0,
                    i = t.scale || 4;
                return {
                    width: n,
                    scale: n ? 4 : i,
                    margin: e,
                    color: {
                        dark: r(t.color.dark || "#000000ff"),
                        light: r(t.color.light || "#ffffffff")
                    },
                    type: t.type,
                    rendererOpts: t.rendererOpts || {}
                }
            }, e.getScale = function(t, e) {
                return e.width && e.width >= t + 2 * e.margin ? e.width / (t + 2 * e.margin) : e.scale
            }, e.getImageWidth = function(t, r) {
                let n = e.getScale(t, r);
                return Math.floor((t + 2 * r.margin) * n)
            }, e.qrToImageData = function(t, r, n) {
                let i = r.modules.size,
                    o = r.modules.data,
                    s = e.getScale(i, n),
                    a = Math.floor((i + 2 * n.margin) * s),
                    u = n.margin * s,
                    c = [n.color.light, n.color.dark];
                for (let e = 0; e < a; e++)
                    for (let r = 0; r < a; r++) {
                        let l = (e * a + r) * 4,
                            h = n.color.light;
                        e >= u && r >= u && e < a - u && r < a - u && (h = c[o[Math.floor((e - u) / s) * i + Math.floor((r - u) / s)] ? 1 : 0]), t[l++] = h.r, t[l++] = h.g, t[l++] = h.b, t[l] = h.a
                    }
            }
        },
        87922: function(t, e, r) {
            "use strict";
            r.d(e, {
                Z: function() {
                    return tc
                }
            });
            var n, i = r(5853),
                o = r(2265),
                s = "right-scroll-bar-position",
                a = "width-before-scroll-bar",
                u = "with-scroll-bars-hidden",
                c = "--removed-body-scroll-bar-size";

            function l(t, e) {
                return "function" == typeof t ? t(e) : t && (t.current = e), t
            }

            function h(t, e) {
                var r = (0, o.useState)(function() {
                    return {
                        value: t,
                        callback: e,
                        facade: {
                            get current() {
                                return r.value
                            },
                            set current(value) {
                                var n = r.value;
                                n !== value && (r.value = value, r.callback(value, n))
                            }
                        }
                    }
                })[0];
                return r.callback = e, r.facade
            }
            var f = "undefined" != typeof window ? o.useLayoutEffect : o.useEffect,
                d = new WeakMap;

            function p(t, e) {
                var r = h(e || null, function(e) {
                    return t.forEach(function(t) {
                        return l(t, e)
                    })
                });
                return f(function() {
                    var e = d.get(r);
                    if (e) {
                        var n = new Set(e),
                            i = new Set(t),
                            o = r.current;
                        n.forEach(function(t) {
                            i.has(t) || l(t, null)
                        }), i.forEach(function(t) {
                            n.has(t) || l(t, o)
                        })
                    }
                    d.set(r, t)
                }, [t]), r
            }

            function y(t) {
                return t
            }

            function m(t, e) {
                void 0 === e && (e = y);
                var r = [],
                    n = !1;
                return {
                    read: function() {
                        if (n) throw Error("Sidecar: could not `read` from an `assigned` medium. `read` could be used only with `useMedium`.");
                        return r.length ? r[r.length - 1] : t
                    },
                    useMedium: function(t) {
                        var i = e(t, n);
                        return r.push(i),
                            function() {
                                r = r.filter(function(t) {
                                    return t !== i
                                })
                            }
                    },
                    assignSyncMedium: function(t) {
                        for (n = !0; r.length;) {
                            var e = r;
                            r = [], e.forEach(t)
                        }
                        r = {
                            push: function(e) {
                                return t(e)
                            },
                            filter: function() {
                                return r
                            }
                        }
                    },
                    assignMedium: function(t) {
                        n = !0;
                        var e = [];
                        if (r.length) {
                            var i = r;
                            r = [], i.forEach(t), e = r
                        }
                        var o = function() {
                                var r = e;
                                e = [], r.forEach(t)
                            },
                            s = function() {
                                return Promise.resolve().then(o)
                            };
                        s(), r = {
                            push: function(t) {
                                e.push(t), s()
                            },
                            filter: function(t) {
                                return e = e.filter(t), r
                            }
                        }
                    }
                }
            }
            var b = function(t) {
                    void 0 === t && (t = {});
                    var e = m(null);
                    return e.options = (0, i.__assign)({
                        async: !0,
                        ssr: !1
                    }, t), e
                }(),
                g = function() {},
                w = o.forwardRef(function(t, e) {
                    var r = o.useRef(null),
                        n = o.useState({
                            onScrollCapture: g,
                            onWheelCapture: g,
                            onTouchMoveCapture: g
                        }),
                        s = n[0],
                        a = n[1],
                        u = t.forwardProps,
                        c = t.children,
                        l = t.className,
                        h = t.removeScrollBar,
                        f = t.enabled,
                        d = t.shards,
                        y = t.sideCar,
                        m = t.noIsolation,
                        w = t.inert,
                        v = t.allowPinchZoom,
                        E = t.as,
                        x = void 0 === E ? "div" : E,
                        S = t.gapMode,
                        O = (0, i.__rest)(t, ["forwardProps", "children", "className", "removeScrollBar", "enabled", "shards", "sideCar", "noIsolation", "inert", "allowPinchZoom", "as", "gapMode"]),
                        C = y,
                        _ = p([r, e]),
                        A = (0, i.__assign)((0, i.__assign)({}, O), s);
                    return o.createElement(o.Fragment, null, f && o.createElement(C, {
                        sideCar: b,
                        removeScrollBar: h,
                        shards: d,
                        noIsolation: m,
                        inert: w,
                        setCallbacks: a,
                        allowPinchZoom: !!v,
                        lockRef: r,
                        gapMode: S
                    }), u ? o.cloneElement(o.Children.only(c), (0, i.__assign)((0, i.__assign)({}, A), {
                        ref: _
                    })) : o.createElement(x, (0, i.__assign)({}, A, {
                        className: l,
                        ref: _
                    }), c))
                });
            w.defaultProps = {
                enabled: !0,
                removeScrollBar: !0,
                inert: !1
            }, w.classNames = {
                fullWidth: a,
                zeroRight: s
            };
            var v = function(t) {
                var e = t.sideCar,
                    r = (0, i.__rest)(t, ["sideCar"]);
                if (!e) throw Error("Sidecar: please provide `sideCar` property to import the right car");
                var n = e.read();
                if (!n) throw Error("Sidecar medium not found");
                return o.createElement(n, (0, i.__assign)({}, r))
            };

            function E(t, e) {
                return t.useMedium(e), v
            }
            v.isSideCarExport = !0;
            var x = function() {
                return n || r.nc
            };

            function S() {
                if (!document) return null;
                var t = document.createElement("style");
                t.type = "text/css";
                var e = x();
                return e && t.setAttribute("nonce", e), t
            }

            function O(t, e) {
                t.styleSheet ? t.styleSheet.cssText = e : t.appendChild(document.createTextNode(e))
            }

            function C(t) {
                (document.head || document.getElementsByTagName("head")[0]).appendChild(t)
            }
            var _ = function() {
                    var t = 0,
                        e = null;
                    return {
                        add: function(r) {
                            0 == t && (e = S()) && (O(e, r), C(e)), t++
                        },
                        remove: function() {
                            --t || !e || (e.parentNode && e.parentNode.removeChild(e), e = null)
                        }
                    }
                },
                A = function() {
                    var t = _();
                    return function(e, r) {
                        o.useEffect(function() {
                            return t.add(e),
                                function() {
                                    t.remove()
                                }
                        }, [e && r])
                    }
                },
                P = function() {
                    var t = A();
                    return function(e) {
                        return t(e.styles, e.dynamic), null
                    }
                },
                k = {
                    left: 0,
                    top: 0,
                    right: 0,
                    gap: 0
                },
                D = function(t) {
                    return parseInt(t || "", 10) || 0
                },
                I = function(t) {
                    var e = window.getComputedStyle(document.body),
                        r = e["padding" === t ? "paddingLeft" : "marginLeft"],
                        n = e["padding" === t ? "paddingTop" : "marginTop"],
                        i = e["padding" === t ? "paddingRight" : "marginRight"];
                    return [D(r), D(n), D(i)]
                },
                M = function(t) {
                    if (void 0 === t && (t = "margin"), "undefined" == typeof window) return k;
                    var e = I(t),
                        r = document.documentElement.clientWidth,
                        n = window.innerWidth;
                    return {
                        left: e[0],
                        top: e[1],
                        right: e[2],
                        gap: Math.max(0, n - r + e[2] - e[0])
                    }
                },
                B = P(),
                R = "data-scroll-locked",
                T = function(t, e, r, n) {
                    var i = t.left,
                        o = t.top,
                        l = t.right,
                        h = t.gap;
                    return void 0 === r && (r = "margin"), "\n  .".concat(u, " {\n   overflow: hidden ").concat(n, ";\n   padding-right: ").concat(h, "px ").concat(n, ";\n  }\n  body[").concat(R, "] {\n    overflow: hidden ").concat(n, ";\n    overscroll-behavior: contain;\n    ").concat([e && "position: relative ".concat(n, ";"), "margin" === r && "\n    padding-left: ".concat(i, "px;\n    padding-top: ").concat(o, "px;\n    padding-right: ").concat(l, "px;\n    margin-left:0;\n    margin-top:0;\n    margin-right: ").concat(h, "px ").concat(n, ";\n    "), "padding" === r && "padding-right: ".concat(h, "px ").concat(n, ";")].filter(Boolean).join(""), "\n  }\n  \n  .").concat(s, " {\n    right: ").concat(h, "px ").concat(n, ";\n  }\n  \n  .").concat(a, " {\n    margin-right: ").concat(h, "px ").concat(n, ";\n  }\n  \n  .").concat(s, " .").concat(s, " {\n    right: 0 ").concat(n, ";\n  }\n  \n  .").concat(a, " .").concat(a, " {\n    margin-right: 0 ").concat(n, ";\n  }\n  \n  body[").concat(R, "] {\n    ").concat(c, ": ").concat(h, "px;\n  }\n")
                },
                j = function() {
                    var t = parseInt(document.body.getAttribute(R) || "0", 10);
                    return isFinite(t) ? t : 0
                },
                U = function() {
                    o.useEffect(function() {
                        return document.body.setAttribute(R, (j() + 1).toString()),
                            function() {
                                var t = j() - 1;
                                t <= 0 ? document.body.removeAttribute(R) : document.body.setAttribute(R, t.toString())
                            }
                    }, [])
                },
                N = function(t) {
                    var e = t.noRelative,
                        r = t.noImportant,
                        n = t.gapMode,
                        i = void 0 === n ? "margin" : n;
                    U();
                    var s = o.useMemo(function() {
                        return M(i)
                    }, [i]);
                    return o.createElement(B, {
                        styles: T(s, !e, i, r ? "" : "!important")
                    })
                },
                F = !1;
            if ("undefined" != typeof window) try {
                var L = Object.defineProperty({}, "passive", {
                    get: function() {
                        return F = !0, !0
                    }
                });
                window.addEventListener("test", L, L), window.removeEventListener("test", L, L)
            } catch (t) {
                F = !1
            }
            var q = !!F && {
                    passive: !1
                },
                $ = function(t) {
                    return "TEXTAREA" === t.tagName
                },
                W = function(t, e) {
                    var r = window.getComputedStyle(t);
                    return "hidden" !== r[e] && !(r.overflowY === r.overflowX && !$(t) && "visible" === r[e])
                },
                G = function(t) {
                    return W(t, "overflowY")
                },
                z = function(t) {
                    return W(t, "overflowX")
                },
                H = function(t, e) {
                    var r = e.ownerDocument,
                        n = e;
                    do {
                        if ("undefined" != typeof ShadowRoot && n instanceof ShadowRoot && (n = n.host), Q(t, n)) {
                            var i = Z(t, n);
                            if (i[1] > i[2]) return !0
                        }
                        n = n.parentNode
                    } while (n && n !== r.body);
                    return !1
                },
                K = function(t) {
                    return [t.scrollTop, t.scrollHeight, t.clientHeight]
                },
                V = function(t) {
                    return [t.scrollLeft, t.scrollWidth, t.clientWidth]
                },
                Q = function(t, e) {
                    return "v" === t ? G(e) : z(e)
                },
                Z = function(t, e) {
                    return "v" === t ? K(e) : V(e)
                },
                Y = function(t, e) {
                    return "h" === t && "rtl" === e ? -1 : 1
                },
                J = function(t, e, r, n, i) {
                    var o = Y(t, window.getComputedStyle(e).direction),
                        s = o * n,
                        a = r.target,
                        u = e.contains(a),
                        c = !1,
                        l = s > 0,
                        h = 0,
                        f = 0;
                    do {
                        var d = Z(t, a),
                            p = d[0],
                            y = d[1] - d[2] - o * p;
                        (p || y) && Q(t, a) && (h += y, f += p), a instanceof ShadowRoot ? a = a.host : a = a.parentNode
                    } while (!u && a !== document.body || u && (e.contains(a) || e === a));
                    return l && (i && 1 > Math.abs(h) || !i && s > h) ? c = !0 : !l && (i && 1 > Math.abs(f) || !i && -s > f) && (c = !0), c
                },
                X = function(t) {
                    return "changedTouches" in t ? [t.changedTouches[0].clientX, t.changedTouches[0].clientY] : [0, 0]
                },
                tt = function(t) {
                    return [t.deltaX, t.deltaY]
                },
                te = function(t) {
                    return t && "current" in t ? t.current : t
                },
                tr = function(t, e) {
                    return t[0] === e[0] && t[1] === e[1]
                },
                tn = function(t) {
                    return "\n  .block-interactivity-".concat(t, " {pointer-events: none;}\n  .allow-interactivity-").concat(t, " {pointer-events: all;}\n")
                },
                ti = 0,
                to = [];

            function ts(t) {
                for (var e = null; null !== t;) t instanceof ShadowRoot && (e = t.host, t = t.host), t = t.parentNode;
                return e
            }
            var ta = E(b, function(t) {
                    var e = o.useRef([]),
                        r = o.useRef([0, 0]),
                        n = o.useRef(),
                        s = o.useState(ti++)[0],
                        a = o.useState(P)[0],
                        u = o.useRef(t);
                    o.useEffect(function() {
                        u.current = t
                    }, [t]), o.useEffect(function() {
                        if (t.inert) {
                            document.body.classList.add("block-interactivity-".concat(s));
                            var e = (0, i.__spreadArray)([t.lockRef.current], (t.shards || []).map(te), !0).filter(Boolean);
                            return e.forEach(function(t) {
                                    return t.classList.add("allow-interactivity-".concat(s))
                                }),
                                function() {
                                    document.body.classList.remove("block-interactivity-".concat(s)), e.forEach(function(t) {
                                        return t.classList.remove("allow-interactivity-".concat(s))
                                    })
                                }
                        }
                    }, [t.inert, t.lockRef.current, t.shards]);
                    var c = o.useCallback(function(t, e) {
                            if ("touches" in t && 2 === t.touches.length) return !u.current.allowPinchZoom;
                            var i, o = X(t),
                                s = r.current,
                                a = "deltaX" in t ? t.deltaX : s[0] - o[0],
                                c = "deltaY" in t ? t.deltaY : s[1] - o[1],
                                l = t.target,
                                h = Math.abs(a) > Math.abs(c) ? "h" : "v";
                            if ("touches" in t && "h" === h && "range" === l.type) return !1;
                            var f = H(h, l);
                            if (!f) return !0;
                            if (f ? i = h : (i = "v" === h ? "h" : "v", f = H(h, l)), !f) return !1;
                            if (!n.current && "changedTouches" in t && (a || c) && (n.current = i), !i) return !0;
                            var d = n.current || i;
                            return J(d, e, t, "h" === d ? a : c, !0)
                        }, []),
                        l = o.useCallback(function(t) {
                            var r = t;
                            if (to.length && to[to.length - 1] === a) {
                                var n = "deltaY" in r ? tt(r) : X(r),
                                    i = e.current.filter(function(t) {
                                        return t.name === r.type && (t.target === r.target || r.target === t.shadowParent) && tr(t.delta, n)
                                    })[0];
                                if (i && i.should) {
                                    r.cancelable && r.preventDefault();
                                    return
                                }
                                if (!i) {
                                    var o = (u.current.shards || []).map(te).filter(Boolean).filter(function(t) {
                                        return t.contains(r.target)
                                    });
                                    (o.length > 0 ? c(r, o[0]) : !u.current.noIsolation) && r.cancelable && r.preventDefault()
                                }
                            }
                        }, []),
                        h = o.useCallback(function(t, r, n, i) {
                            var o = {
                                name: t,
                                delta: r,
                                target: n,
                                should: i,
                                shadowParent: ts(n)
                            };
                            e.current.push(o), setTimeout(function() {
                                e.current = e.current.filter(function(t) {
                                    return t !== o
                                })
                            }, 1)
                        }, []),
                        f = o.useCallback(function(t) {
                            r.current = X(t), n.current = void 0
                        }, []),
                        d = o.useCallback(function(e) {
                            h(e.type, tt(e), e.target, c(e, t.lockRef.current))
                        }, []),
                        p = o.useCallback(function(e) {
                            h(e.type, X(e), e.target, c(e, t.lockRef.current))
                        }, []);
                    o.useEffect(function() {
                        return to.push(a), t.setCallbacks({
                                onScrollCapture: d,
                                onWheelCapture: d,
                                onTouchMoveCapture: p
                            }), document.addEventListener("wheel", l, q), document.addEventListener("touchmove", l, q), document.addEventListener("touchstart", f, q),
                            function() {
                                to = to.filter(function(t) {
                                    return t !== a
                                }), document.removeEventListener("wheel", l, q), document.removeEventListener("touchmove", l, q), document.removeEventListener("touchstart", f, q)
                            }
                    }, []);
                    var y = t.removeScrollBar,
                        m = t.inert;
                    return o.createElement(o.Fragment, null, m ? o.createElement(a, {
                        styles: tn(s)
                    }) : null, y ? o.createElement(N, {
                        gapMode: t.gapMode
                    }) : null)
                }),
                tu = o.forwardRef(function(t, e) {
                    return o.createElement(w, (0, i.__assign)({}, t, {
                        ref: e,
                        sideCar: ta
                    }))
                });
            tu.classNames = w.classNames;
            var tc = tu
        },
        7137: function(t, e, r) {
            "use strict";
            var n, i = r(82957).Buffer;
            n = {
                value: !0
            };
            let o = r(77625),
                s = r(68343);
            class a extends o.EventEmitter {
                address;
                rpc_id;
                queue;
                options;
                autoconnect;
                ready;
                reconnect;
                reconnect_timer_id;
                reconnect_interval;
                max_reconnects;
                rest_options;
                current_reconnects;
                generate_request_id;
                socket;
                webSocketFactory;
                dataPack;
                constructor(t, e = "ws://localhost:8080", {
                    autoconnect: r = !0,
                    reconnect: n = !0,
                    reconnect_interval: i = 1e3,
                    max_reconnects: o = 5,
                    ...a
                } = {}, u, c) {
                    super(), this.webSocketFactory = t, this.queue = {}, this.rpc_id = 0, this.address = e, this.autoconnect = r, this.ready = !1, this.reconnect = n, this.reconnect_timer_id = void 0, this.reconnect_interval = i, this.max_reconnects = o, this.rest_options = a, this.current_reconnects = 0, this.generate_request_id = u || (() => ++this.rpc_id), c ? this.dataPack = c : this.dataPack = new s.DefaultDataPack, this.autoconnect && this._connect(this.address, {
                        autoconnect: this.autoconnect,
                        reconnect: this.reconnect,
                        reconnect_interval: this.reconnect_interval,
                        max_reconnects: this.max_reconnects,
                        ...this.rest_options
                    })
                }
                connect() {
                    this.socket || this._connect(this.address, {
                        autoconnect: this.autoconnect,
                        reconnect: this.reconnect,
                        reconnect_interval: this.reconnect_interval,
                        max_reconnects: this.max_reconnects,
                        ...this.rest_options
                    })
                }
                call(t, e, r, n) {
                    return n || "object" != typeof r || (n = r, r = null), new Promise((i, o) => {
                        if (!this.ready) return o(Error("socket not ready"));
                        let s = this.generate_request_id(t, e),
                            a = {
                                jsonrpc: "2.0",
                                method: t,
                                params: e || void 0,
                                id: s
                            };
                        this.socket.send(this.dataPack.encode(a), n, t => {
                            if (t) return o(t);
                            this.queue[s] = {
                                promise: [i, o]
                            }, r && (this.queue[s].timeout = setTimeout(() => {
                                delete this.queue[s], o(Error("reply timeout"))
                            }, r))
                        })
                    })
                }
                async login(t) {
                    let e = await this.call("rpc.login", t);
                    if (!e) throw Error("authentication failed");
                    return e
                }
                async listMethods() {
                    return await this.call("__listMethods")
                }
                notify(t, e) {
                    return new Promise((r, n) => {
                        if (!this.ready) return n(Error("socket not ready"));
                        let i = {
                            jsonrpc: "2.0",
                            method: t,
                            params: e
                        };
                        this.socket.send(this.dataPack.encode(i), t => {
                            if (t) return n(t);
                            r()
                        })
                    })
                }
                async subscribe(t) {
                    "string" == typeof t && (t = [t]);
                    let e = await this.call("rpc.on", t);
                    if ("string" == typeof t && "ok" !== e[t]) throw Error("Failed subscribing to an event '" + t + "' with: " + e[t]);
                    return e
                }
                async unsubscribe(t) {
                    "string" == typeof t && (t = [t]);
                    let e = await this.call("rpc.off", t);
                    if ("string" == typeof t && "ok" !== e[t]) throw Error("Failed unsubscribing from an event with: " + e);
                    return e
                }
                close(t, e) {
                    this.socket.close(t || 1e3, e)
                }
                setAutoReconnect(t) {
                    this.reconnect = t
                }
                setReconnectInterval(t) {
                    this.reconnect_interval = t
                }
                setMaxReconnects(t) {
                    this.max_reconnects = t
                }
                _connect(t, e) {
                    clearTimeout(this.reconnect_timer_id), this.socket = this.webSocketFactory(t, e), this.socket.addEventListener("open", () => {
                        this.ready = !0, this.emit("open"), this.current_reconnects = 0
                    }), this.socket.addEventListener("message", ({
                        data: t
                    }) => {
                        t instanceof ArrayBuffer && (t = i.from(t).toString());
                        try {
                            t = this.dataPack.decode(t)
                        } catch (t) {
                            return
                        }
                        if (t.notification && this.listeners(t.notification).length) {
                            if (!Object.keys(t.params).length) return this.emit(t.notification);
                            let e = [t.notification];
                            if (t.params.constructor === Object) e.push(t.params);
                            else
                                for (let r = 0; r < t.params.length; r++) e.push(t.params[r]);
                            return Promise.resolve().then(() => {
                                this.emit.apply(this, e)
                            })
                        }
                        if (!this.queue[t.id]) return t.method ? Promise.resolve().then(() => {
                            this.emit(t.method, t ? .params)
                        }) : void 0;
                        "error" in t == "result" in t && this.queue[t.id].promise[1](Error('Server response malformed. Response must include either "result" or "error", but not both.')), this.queue[t.id].timeout && clearTimeout(this.queue[t.id].timeout), t.error ? this.queue[t.id].promise[1](t.error) : this.queue[t.id].promise[0](t.result), delete this.queue[t.id]
                    }), this.socket.addEventListener("error", t => this.emit("error", t)), this.socket.addEventListener("close", ({
                        code: r,
                        reason: n
                    }) => {
                        this.ready && setTimeout(() => this.emit("close", r, n), 0), this.ready = !1, this.socket = void 0, 1e3 !== r && (this.current_reconnects++, this.reconnect && (this.max_reconnects > this.current_reconnects || 0 === this.max_reconnects) && (this.reconnect_timer_id = setTimeout(() => this._connect(t, e), this.reconnect_interval)))
                    })
                }
            }
            e.Z = a
        },
        58215: function(t, e, r) {
            "use strict";
            var n;
            n = {
                value: !0
            };
            let i = r(77625);
            class o extends i.EventEmitter {
                socket;
                constructor(t, e, r) {
                    super(), this.socket = new window.WebSocket(t, r), this.socket.onopen = () => this.emit("open"), this.socket.onmessage = t => this.emit("message", t.data), this.socket.onerror = t => this.emit("error", t), this.socket.onclose = t => {
                        this.emit("close", t.code, t.reason)
                    }
                }
                send(t, e, r) {
                    let n = r || e;
                    try {
                        this.socket.send(t), n()
                    } catch (t) {
                        n(t)
                    }
                }
                close(t, e) {
                    this.socket.close(t, e)
                }
                addEventListener(t, e, r) {
                    this.socket.addEventListener(t, e, r)
                }
            }

            function s(t, e) {
                return new o(t, e)
            }
            e.Z = s
        },
        68343: function(t, e) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.createError = e.DefaultDataPack = void 0;
            let r = new Map([
                [-32e3, "Event not provided"],
                [-32600, "Invalid Request"],
                [-32601, "Method not found"],
                [-32602, "Invalid params"],
                [-32603, "Internal error"],
                [-32604, "Params not found"],
                [-32605, "Method forbidden"],
                [-32606, "Event forbidden"],
                [-32700, "Parse error"]
            ]);
            class n {
                encode(t) {
                    return JSON.stringify(t)
                }
                decode(t) {
                    return JSON.parse(t)
                }
            }

            function i(t, e) {
                let n = {
                    code: t,
                    message: r.get(t) || "Internal Server Error"
                };
                return e && (n.data = e), n
            }
            e.DefaultDataPack = n, e.createError = i
        },
        73306: function(t, e, r) { /*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
            var n = r(82957),
                i = n.Buffer;

            function o(t, e) {
                for (var r in t) e[r] = t[r]
            }

            function s(t, e, r) {
                return i(t, e, r)
            }
            i.from && i.alloc && i.allocUnsafe && i.allocUnsafeSlow ? t.exports = n : (o(n, e), e.Buffer = s), s.prototype = Object.create(i.prototype), o(i, s), s.from = function(t, e, r) {
                if ("number" == typeof t) throw TypeError("Argument must not be a number");
                return i(t, e, r)
            }, s.alloc = function(t, e, r) {
                if ("number" != typeof t) throw TypeError("Argument must be a number");
                var n = i(t);
                return void 0 !== e ? "string" == typeof r ? n.fill(e, r) : n.fill(e) : n.fill(0), n
            }, s.allocUnsafe = function(t) {
                if ("number" != typeof t) throw TypeError("Argument must be a number");
                return i(t)
            }, s.allocUnsafeSlow = function(t) {
                if ("number" != typeof t) throw TypeError("Argument must be a number");
                return n.SlowBuffer(t)
            }
        },
        69301: function(t, e, r) {
            "use strict";
            var n = r(50071),
                i = r(33832),
                o = r(40927)(),
                s = r(50297),
                a = r(53842),
                u = n("%Math.floor%");
            t.exports = function(t, e) {
                if ("function" != typeof t) throw new a("`fn` is not a function");
                if ("number" != typeof e || e < 0 || e > 4294967295 || u(e) !== e) throw new a("`length` must be a positive 32-bit integer");
                var r = arguments.length > 2 && !!arguments[2],
                    n = !0,
                    c = !0;
                if ("length" in t && s) {
                    var l = s(t, "length");
                    l && !l.configurable && (n = !1), l && !l.writable && (c = !1)
                }
                return (n || c || !r) && (o ? i(t, "length", e, !0, !0) : i(t, "length", e)), t
            }
        },
        93129: function(t) {
            "use strict";
            t.exports = (t, e) => {
                if (!("string" == typeof t && "string" == typeof e)) throw TypeError("Expected the arguments to be of type `string`");
                if ("" === e) return [t];
                let r = t.indexOf(e);
                return -1 === r ? [t] : [t.slice(0, r), t.slice(r + e.length)]
            }
        },
        59148: function(t) {
            "use strict";
            t.exports = t => encodeURIComponent(t).replace(/[!'()*]/g, t => `%${t.charCodeAt(0).toString(16).toUpperCase()}`)
        },
        65768: function(t, e) {
            "use strict";

            function r(t, e, r) {
                return e <= t && t <= r
            }

            function n(t) {
                if (void 0 === t) return {};
                if (t === Object(t)) return t;
                throw TypeError("Could not convert argument to dictionary")
            }

            function i(t) {
                for (var e = String(t), r = e.length, n = 0, i = []; n < r;) {
                    var o = e.charCodeAt(n);
                    if (o < 55296 || o > 57343) i.push(o);
                    else if (56320 <= o && o <= 57343) i.push(65533);
                    else if (55296 <= o && o <= 56319) {
                        if (n === r - 1) i.push(65533);
                        else {
                            var s = t.charCodeAt(n + 1);
                            if (56320 <= s && s <= 57343) {
                                var a = 1023 & o,
                                    u = 1023 & s;
                                i.push(65536 + (a << 10) + u), n += 1
                            } else i.push(65533)
                        }
                    }
                    n += 1
                }
                return i
            }

            function o(t) {
                for (var e = "", r = 0; r < t.length; ++r) {
                    var n = t[r];
                    n <= 65535 ? e += String.fromCharCode(n) : (n -= 65536, e += String.fromCharCode((n >> 10) + 55296, (1023 & n) + 56320))
                }
                return e
            }
            var s = -1;

            function a(t) {
                this.tokens = [].slice.call(t)
            }
            a.prototype = {
                endOfStream: function() {
                    return !this.tokens.length
                },
                read: function() {
                    return this.tokens.length ? this.tokens.shift() : s
                },
                prepend: function(t) {
                    if (Array.isArray(t))
                        for (var e = t; e.length;) this.tokens.unshift(e.pop());
                    else this.tokens.unshift(t)
                },
                push: function(t) {
                    if (Array.isArray(t))
                        for (var e = t; e.length;) this.tokens.push(e.shift());
                    else this.tokens.push(t)
                }
            };
            var u = -1;

            function c(t, e) {
                if (t) throw TypeError("Decoder error");
                return e || 65533
            }
            var l = "utf-8";

            function h(t, e) {
                if (!(this instanceof h)) return new h(t, e);
                if ((t = void 0 !== t ? String(t).toLowerCase() : l) !== l) throw Error("Encoding not supported. Only utf-8 is supported");
                e = n(e), this._streaming = !1, this._BOMseen = !1, this._decoder = null, this._fatal = !!e.fatal, this._ignoreBOM = !!e.ignoreBOM, Object.defineProperty(this, "encoding", {
                    value: "utf-8"
                }), Object.defineProperty(this, "fatal", {
                    value: this._fatal
                }), Object.defineProperty(this, "ignoreBOM", {
                    value: this._ignoreBOM
                })
            }

            function f(t, e) {
                if (!(this instanceof f)) return new f(t, e);
                if ((t = void 0 !== t ? String(t).toLowerCase() : l) !== l) throw Error("Encoding not supported. Only utf-8 is supported");
                e = n(e), this._streaming = !1, this._encoder = null, this._options = {
                    fatal: !!e.fatal
                }, Object.defineProperty(this, "encoding", {
                    value: "utf-8"
                })
            }

            function d(t) {
                var e = t.fatal,
                    n = 0,
                    i = 0,
                    o = 0,
                    a = 128,
                    l = 191;
                this.handler = function(t, h) {
                    if (h === s && 0 !== o) return o = 0, c(e);
                    if (h === s) return u;
                    if (0 === o) {
                        if (r(h, 0, 127)) return h;
                        if (r(h, 194, 223)) o = 1, n = h - 192;
                        else if (r(h, 224, 239)) 224 === h && (a = 160), 237 === h && (l = 159), o = 2, n = h - 224;
                        else {
                            if (!r(h, 240, 244)) return c(e);
                            240 === h && (a = 144), 244 === h && (l = 143), o = 3, n = h - 240
                        }
                        return n <<= 6 * o, null
                    }
                    if (!r(h, a, l)) return n = o = i = 0, a = 128, l = 191, t.prepend(h), c(e);
                    if (a = 128, l = 191, i += 1, n += h - 128 << 6 * (o - i), i !== o) return null;
                    var f = n;
                    return n = o = i = 0, f
                }
            }

            function p(t) {
                t.fatal, this.handler = function(t, e) {
                    if (e === s) return u;
                    if (r(e, 0, 127)) return e;
                    r(e, 128, 2047) ? (n = 1, i = 192) : r(e, 2048, 65535) ? (n = 2, i = 224) : r(e, 65536, 1114111) && (n = 3, i = 240);
                    for (var n, i, o = [(e >> 6 * n) + i]; n > 0;) {
                        var a = e >> 6 * (n - 1);
                        o.push(128 | 63 & a), n -= 1
                    }
                    return o
                }
            }
            h.prototype = {
                decode: function(t, e) {
                    r = "object" == typeof t && t instanceof ArrayBuffer ? new Uint8Array(t) : "object" == typeof t && "buffer" in t && t.buffer instanceof ArrayBuffer ? new Uint8Array(t.buffer, t.byteOffset, t.byteLength) : new Uint8Array(0), e = n(e), this._streaming || (this._decoder = new d({
                        fatal: this._fatal
                    }), this._BOMseen = !1), this._streaming = !!e.stream;
                    for (var r, i, s = new a(r), c = []; !s.endOfStream() && (i = this._decoder.handler(s, s.read())) !== u;) null !== i && (Array.isArray(i) ? c.push.apply(c, i) : c.push(i));
                    if (!this._streaming) {
                        do {
                            if ((i = this._decoder.handler(s, s.read())) === u) break;
                            if (null === i) continue;
                            Array.isArray(i) ? c.push.apply(c, i) : c.push(i)
                        } while (!s.endOfStream());
                        this._decoder = null
                    }
                    return !c.length || -1 === ["utf-8"].indexOf(this.encoding) || this._ignoreBOM || this._BOMseen || (65279 === c[0] ? (this._BOMseen = !0, c.shift()) : this._BOMseen = !0), o(c)
                }
            }, f.prototype = {
                encode: function(t, e) {
                    t = t ? String(t) : "", e = n(e), this._streaming || (this._encoder = new p(this._options)), this._streaming = !!e.stream;
                    for (var r, o = [], s = new a(i(t)); !s.endOfStream() && (r = this._encoder.handler(s, s.read())) !== u;) Array.isArray(r) ? o.push.apply(o, r) : o.push(r);
                    if (!this._streaming) {
                        for (;
                            (r = this._encoder.handler(s, s.read())) !== u;) Array.isArray(r) ? o.push.apply(o, r) : o.push(r);
                        this._encoder = null
                    }
                    return new Uint8Array(o)
                }
            }, e.TextEncoder = f, e.TextDecoder = h
        },
        62061: function(t, e, r) {
            var n;
            ! function(i, o) {
                "use strict";
                var s = "1.0.37",
                    a = "",
                    u = "?",
                    c = "function",
                    l = "undefined",
                    h = "object",
                    f = "string",
                    d = "major",
                    p = "model",
                    y = "name",
                    m = "type",
                    b = "vendor",
                    g = "version",
                    w = "architecture",
                    v = "console",
                    E = "mobile",
                    x = "tablet",
                    S = "smarttv",
                    O = "wearable",
                    C = "embedded",
                    _ = 500,
                    A = "Amazon",
                    P = "Apple",
                    k = "ASUS",
                    D = "BlackBerry",
                    I = "Browser",
                    M = "Chrome",
                    B = "Firefox",
                    R = "Google",
                    T = "Huawei",
                    j = "LG",
                    U = "Microsoft",
                    N = "Motorola",
                    F = "Opera",
                    L = "Samsung",
                    q = "Sharp",
                    $ = "Sony",
                    W = "Xiaomi",
                    G = "Zebra",
                    z = "Facebook",
                    H = "Chromium OS",
                    K = "Mac OS",
                    V = function(t, e) {
                        var r = {};
                        for (var n in t) e[n] && e[n].length % 2 == 0 ? r[n] = e[n].concat(t[n]) : r[n] = t[n];
                        return r
                    },
                    Q = function(t) {
                        for (var e = {}, r = 0; r < t.length; r++) e[t[r].toUpperCase()] = t[r];
                        return e
                    },
                    Z = function(t, e) {
                        return typeof t === f && -1 !== Y(e).indexOf(Y(t))
                    },
                    Y = function(t) {
                        return t.toLowerCase()
                    },
                    J = function(t) {
                        return typeof t === f ? t.replace(/[^\d\.]/g, a).split(".")[0] : void 0
                    },
                    X = function(t, e) {
                        if (typeof t === f) return t = t.replace(/^\s\s*/, a), typeof e === l ? t : t.substring(0, _)
                    },
                    tt = function(t, e) {
                        for (var r, n, i, s, a, u, l = 0; l < e.length && !a;) {
                            var f = e[l],
                                d = e[l + 1];
                            for (r = n = 0; r < f.length && !a && f[r];)
                                if (a = f[r++].exec(t))
                                    for (i = 0; i < d.length; i++) u = a[++n], typeof(s = d[i]) === h && s.length > 0 ? 2 === s.length ? typeof s[1] == c ? this[s[0]] = s[1].call(this, u) : this[s[0]] = s[1] : 3 === s.length ? typeof s[1] !== c || s[1].exec && s[1].test ? this[s[0]] = u ? u.replace(s[1], s[2]) : void 0 : this[s[0]] = u ? s[1].call(this, u, s[2]) : void 0 : 4 === s.length && (this[s[0]] = u ? s[3].call(this, u.replace(s[1], s[2])) : o) : this[s] = u || o;
                            l += 2
                        }
                    },
                    te = function(t, e) {
                        for (var r in e)
                            if (typeof e[r] === h && e[r].length > 0) {
                                for (var n = 0; n < e[r].length; n++)
                                    if (Z(e[r][n], t)) return r === u ? o : r
                            } else if (Z(e[r], t)) return r === u ? o : r;
                        return t
                    },
                    tr = {
                        ME: "4.90",
                        "NT 3.11": "NT3.51",
                        "NT 4.0": "NT4.0",
                        2e3: "NT 5.0",
                        XP: ["NT 5.1", "NT 5.2"],
                        Vista: "NT 6.0",
                        7: "NT 6.1",
                        8: "NT 6.2",
                        "8.1": "NT 6.3",
                        10: ["NT 6.4", "NT 10.0"],
                        RT: "ARM"
                    },
                    tn = {
                        browser: [
                            [/\b(?:crmo|crios)\/([\w\.]+)/i],
                            [g, [y, "Chrome"]],
                            [/edg(?:e|ios|a)?\/([\w\.]+)/i],
                            [g, [y, "Edge"]],
                            [/(opera mini)\/([-\w\.]+)/i, /(opera [mobiletab]{3,6})\b.+version\/([-\w\.]+)/i, /(opera)(?:.+version\/|[\/ ]+)([\w\.]+)/i],
                            [y, g],
                            [/opios[\/ ]+([\w\.]+)/i],
                            [g, [y, F + " Mini"]],
                            [/\bopr\/([\w\.]+)/i],
                            [g, [y, F]],
                            [/\bb[ai]*d(?:uhd|[ub]*[aekoprswx]{5,6})[\/ ]?([\w\.]+)/i],
                            [g, [y, "Baidu"]],
                            [/(kindle)\/([\w\.]+)/i, /(lunascape|maxthon|netfront|jasmine|blazer)[\/ ]?([\w\.]*)/i, /(avant|iemobile|slim)\s?(?:browser)?[\/ ]?([\w\.]*)/i, /(?:ms|\()(ie) ([\w\.]+)/i, /(flock|rockmelt|midori|epiphany|silk|skyfire|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark|qupzilla|falkon|rekonq|puffin|brave|whale(?!.+naver)|qqbrowserlite|qq|duckduckgo)\/([-\w\.]+)/i, /(heytap|ovi)browser\/([\d\.]+)/i, /(weibo)__([\d\.]+)/i],
                            [y, g],
                            [/(?:\buc? ?browser|(?:juc.+)ucweb)[\/ ]?([\w\.]+)/i],
                            [g, [y, "UC" + I]],
                            [/microm.+\bqbcore\/([\w\.]+)/i, /\bqbcore\/([\w\.]+).+microm/i, /micromessenger\/([\w\.]+)/i],
                            [g, [y, "WeChat"]],
                            [/konqueror\/([\w\.]+)/i],
                            [g, [y, "Konqueror"]],
                            [/trident.+rv[: ]([\w\.]{1,9})\b.+like gecko/i],
                            [g, [y, "IE"]],
                            [/ya(?:search)?browser\/([\w\.]+)/i],
                            [g, [y, "Yandex"]],
                            [/slbrowser\/([\w\.]+)/i],
                            [g, [y, "Smart Lenovo " + I]],
                            [/(avast|avg)\/([\w\.]+)/i],
                            [
                                [y, /(.+)/, "$1 Secure " + I], g
                            ],
                            [/\bfocus\/([\w\.]+)/i],
                            [g, [y, B + " Focus"]],
                            [/\bopt\/([\w\.]+)/i],
                            [g, [y, F + " Touch"]],
                            [/coc_coc\w+\/([\w\.]+)/i],
                            [g, [y, "Coc Coc"]],
                            [/dolfin\/([\w\.]+)/i],
                            [g, [y, "Dolphin"]],
                            [/coast\/([\w\.]+)/i],
                            [g, [y, F + " Coast"]],
                            [/miuibrowser\/([\w\.]+)/i],
                            [g, [y, "MIUI " + I]],
                            [/fxios\/([-\w\.]+)/i],
                            [g, [y, B]],
                            [/\bqihu|(qi?ho?o?|360)browser/i],
                            [
                                [y, "360 " + I]
                            ],
                            [/(oculus|sailfish|huawei|vivo)browser\/([\w\.]+)/i],
                            [
                                [y, /(.+)/, "$1 " + I], g
                            ],
                            [/samsungbrowser\/([\w\.]+)/i],
                            [g, [y, L + " Internet"]],
                            [/(comodo_dragon)\/([\w\.]+)/i],
                            [
                                [y, /_/g, " "], g
                            ],
                            [/metasr[\/ ]?([\d\.]+)/i],
                            [g, [y, "Sogou Explorer"]],
                            [/(sogou)mo\w+\/([\d\.]+)/i],
                            [
                                [y, "Sogou Mobile"], g
                            ],
                            [/(electron)\/([\w\.]+) safari/i, /(tesla)(?: qtcarbrowser|\/(20\d\d\.[-\w\.]+))/i, /m?(qqbrowser|2345Explorer)[\/ ]?([\w\.]+)/i],
                            [y, g],
                            [/(lbbrowser)/i, /\[(linkedin)app\]/i],
                            [y],
                            [/((?:fban\/fbios|fb_iab\/fb4a)(?!.+fbav)|;fbav\/([\w\.]+);)/i],
                            [
                                [y, z], g
                            ],
                            [/(Klarna)\/([\w\.]+)/i, /(kakao(?:talk|story))[\/ ]([\w\.]+)/i, /(naver)\(.*?(\d+\.[\w\.]+).*\)/i, /safari (line)\/([\w\.]+)/i, /\b(line)\/([\w\.]+)\/iab/i, /(alipay)client\/([\w\.]+)/i, /(chromium|instagram|snapchat)[\/ ]([-\w\.]+)/i],
                            [y, g],
                            [/\bgsa\/([\w\.]+) .*safari\//i],
                            [g, [y, "GSA"]],
                            [/musical_ly(?:.+app_?version\/|_)([\w\.]+)/i],
                            [g, [y, "TikTok"]],
                            [/headlesschrome(?:\/([\w\.]+)| )/i],
                            [g, [y, M + " Headless"]],
                            [/ wv\).+(chrome)\/([\w\.]+)/i],
                            [
                                [y, M + " WebView"], g
                            ],
                            [/droid.+ version\/([\w\.]+)\b.+(?:mobile safari|safari)/i],
                            [g, [y, "Android " + I]],
                            [/(chrome|omniweb|arora|[tizenoka]{5} ?browser)\/v?([\w\.]+)/i],
                            [y, g],
                            [/version\/([\w\.\,]+) .*mobile\/\w+ (safari)/i],
                            [g, [y, "Mobile Safari"]],
                            [/version\/([\w(\.|\,)]+) .*(mobile ?safari|safari)/i],
                            [g, y],
                            [/webkit.+?(mobile ?safari|safari)(\/[\w\.]+)/i],
                            [y, [g, te, {
                                "1.0": "/8",
                                "1.2": "/1",
                                "1.3": "/3",
                                "2.0": "/412",
                                "2.0.2": "/416",
                                "2.0.3": "/417",
                                "2.0.4": "/419",
                                "?": "/"
                            }]],
                            [/(webkit|khtml)\/([\w\.]+)/i],
                            [y, g],
                            [/(navigator|netscape\d?)\/([-\w\.]+)/i],
                            [
                                [y, "Netscape"], g
                            ],
                            [/mobile vr; rv:([\w\.]+)\).+firefox/i],
                            [g, [y, B + " Reality"]],
                            [/ekiohf.+(flow)\/([\w\.]+)/i, /(swiftfox)/i, /(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror|klar)[\/ ]?([\w\.\+]+)/i, /(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\/([-\w\.]+)$/i, /(firefox)\/([\w\.]+)/i, /(mozilla)\/([\w\.]+) .+rv\:.+gecko\/\d+/i, /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir|obigo|mosaic|(?:go|ice|up)[\. ]?browser)[-\/ ]?v?([\w\.]+)/i, /(links) \(([\w\.]+)/i, /panasonic;(viera)/i],
                            [y, g],
                            [/(cobalt)\/([\w\.]+)/i],
                            [y, [g, /master.|lts./, ""]]
                        ],
                        cpu: [
                            [/(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\)]/i],
                            [
                                [w, "amd64"]
                            ],
                            [/(ia32(?=;))/i],
                            [
                                [w, Y]
                            ],
                            [/((?:i[346]|x)86)[;\)]/i],
                            [
                                [w, "ia32"]
                            ],
                            [/\b(aarch64|arm(v?8e?l?|_?64))\b/i],
                            [
                                [w, "arm64"]
                            ],
                            [/\b(arm(?:v[67])?ht?n?[fl]p?)\b/i],
                            [
                                [w, "armhf"]
                            ],
                            [/windows (ce|mobile); ppc;/i],
                            [
                                [w, "arm"]
                            ],
                            [/((?:ppc|powerpc)(?:64)?)(?: mac|;|\))/i],
                            [
                                [w, /ower/, a, Y]
                            ],
                            [/(sun4\w)[;\)]/i],
                            [
                                [w, "sparc"]
                            ],
                            [/((?:avr32|ia64(?=;))|68k(?=\))|\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\b|pa-risc)/i],
                            [
                                [w, Y]
                            ]
                        ],
                        device: [
                            [/\b(sch-i[89]0\d|shw-m380s|sm-[ptx]\w{2,4}|gt-[pn]\d{2,4}|sgh-t8[56]9|nexus 10)/i],
                            [p, [b, L],
                                [m, x]
                            ],
                            [/\b((?:s[cgp]h|gt|sm)-\w+|sc[g-]?[\d]+a?|galaxy nexus)/i, /samsung[- ]([-\w]+)/i, /sec-(sgh\w+)/i],
                            [p, [b, L],
                                [m, E]
                            ],
                            [/(?:\/|\()(ip(?:hone|od)[\w, ]*)(?:\/|;)/i],
                            [p, [b, P],
                                [m, E]
                            ],
                            [/\((ipad);[-\w\),; ]+apple/i, /applecoremedia\/[\w\.]+ \((ipad)/i, /\b(ipad)\d\d?,\d\d?[;\]].+ios/i],
                            [p, [b, P],
                                [m, x]
                            ],
                            [/(macintosh);/i],
                            [p, [b, P]],
                            [/\b(sh-?[altvz]?\d\d[a-ekm]?)/i],
                            [p, [b, q],
                                [m, E]
                            ],
                            [/\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\d{2})\b(?!.+d\/s)/i],
                            [p, [b, T],
                                [m, x]
                            ],
                            [/(?:huawei|honor)([-\w ]+)[;\)]/i, /\b(nexus 6p|\w{2,4}e?-[atu]?[ln][\dx][012359c][adn]?)\b(?!.+d\/s)/i],
                            [p, [b, T],
                                [m, E]
                            ],
                            [/\b(poco[\w ]+|m2\d{3}j\d\d[a-z]{2})(?: bui|\))/i, /\b; (\w+) build\/hm\1/i, /\b(hm[-_ ]?note?[_ ]?(?:\d\w)?) bui/i, /\b(redmi[\-_ ]?(?:note|k)?[\w_ ]+)(?: bui|\))/i, /oid[^\)]+; (m?[12][0-389][01]\w{3,6}[c-y])( bui|; wv|\))/i, /\b(mi[-_ ]?(?:a\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\d?\w?)[_ ]?(?:plus|se|lite)?)(?: bui|\))/i],
                            [
                                [p, /_/g, " "],
                                [b, W],
                                [m, E]
                            ],
                            [/oid[^\)]+; (2\d{4}(283|rpbf)[cgl])( bui|\))/i, /\b(mi[-_ ]?(?:pad)(?:[\w_ ]+))(?: bui|\))/i],
                            [
                                [p, /_/g, " "],
                                [b, W],
                                [m, x]
                            ],
                            [/; (\w+) bui.+ oppo/i, /\b(cph[12]\d{3}|p(?:af|c[al]|d\w|e[ar])[mt]\d0|x9007|a101op)\b/i],
                            [p, [b, "OPPO"],
                                [m, E]
                            ],
                            [/vivo (\w+)(?: bui|\))/i, /\b(v[12]\d{3}\w?[at])(?: bui|;)/i],
                            [p, [b, "Vivo"],
                                [m, E]
                            ],
                            [/\b(rmx[1-3]\d{3})(?: bui|;|\))/i],
                            [p, [b, "Realme"],
                                [m, E]
                            ],
                            [/\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\b[\w ]+build\//i, /\bmot(?:orola)?[- ](\w*)/i, /((?:moto[\w\(\) ]+|xt\d{3,4}|nexus 6)(?= bui|\)))/i],
                            [p, [b, N],
                                [m, E]
                            ],
                            [/\b(mz60\d|xoom[2 ]{0,2}) build\//i],
                            [p, [b, N],
                                [m, x]
                            ],
                            [/((?=lg)?[vl]k\-?\d{3}) bui| 3\.[-\w; ]{10}lg?-([06cv9]{3,4})/i],
                            [p, [b, j],
                                [m, x]
                            ],
                            [/(lm(?:-?f100[nv]?|-[\w\.]+)(?= bui|\))|nexus [45])/i, /\blg[-e;\/ ]+((?!browser|netcast|android tv)\w+)/i, /\blg-?([\d\w]+) bui/i],
                            [p, [b, j],
                                [m, E]
                            ],
                            [/(ideatab[-\w ]+)/i, /lenovo ?(s[56]000[-\w]+|tab(?:[\w ]+)|yt[-\d\w]{6}|tb[-\d\w]{6})/i],
                            [p, [b, "Lenovo"],
                                [m, x]
                            ],
                            [/(?:maemo|nokia).*(n900|lumia \d+)/i, /nokia[-_ ]?([-\w\.]*)/i],
                            [
                                [p, /_/g, " "],
                                [b, "Nokia"],
                                [m, E]
                            ],
                            [/(pixel c)\b/i],
                            [p, [b, R],
                                [m, x]
                            ],
                            [/droid.+; (pixel[\daxl ]{0,6})(?: bui|\))/i],
                            [p, [b, R],
                                [m, E]
                            ],
                            [/droid.+ (a?\d[0-2]{2}so|[c-g]\d{4}|so[-gl]\w+|xq-a\w[4-7][12])(?= bui|\).+chrome\/(?![1-6]{0,1}\d\.))/i],
                            [p, [b, $],
                                [m, E]
                            ],
                            [/sony tablet [ps]/i, /\b(?:sony)?sgp\w+(?: bui|\))/i],
                            [
                                [p, "Xperia Tablet"],
                                [b, $],
                                [m, x]
                            ],
                            [/ (kb2005|in20[12]5|be20[12][59])\b/i, /(?:one)?(?:plus)? (a\d0\d\d)(?: b|\))/i],
                            [p, [b, "OnePlus"],
                                [m, E]
                            ],
                            [/(alexa)webm/i, /(kf[a-z]{2}wi|aeo[c-r]{2})( bui|\))/i, /(kf[a-z]+)( bui|\)).+silk\//i],
                            [p, [b, A],
                                [m, x]
                            ],
                            [/((?:sd|kf)[0349hijorstuw]+)( bui|\)).+silk\//i],
                            [
                                [p, /(.+)/g, "Fire Phone $1"],
                                [b, A],
                                [m, E]
                            ],
                            [/(playbook);[-\w\),; ]+(rim)/i],
                            [p, b, [m, x]],
                            [/\b((?:bb[a-f]|st[hv])100-\d)/i, /\(bb10; (\w+)/i],
                            [p, [b, D],
                                [m, E]
                            ],
                            [/(?:\b|asus_)(transfo[prime ]{4,10} \w+|eeepc|slider \w+|nexus 7|padfone|p00[cj])/i],
                            [p, [b, k],
                                [m, x]
                            ],
                            [/ (z[bes]6[027][012][km][ls]|zenfone \d\w?)\b/i],
                            [p, [b, k],
                                [m, E]
                            ],
                            [/(nexus 9)/i],
                            [p, [b, "HTC"],
                                [m, x]
                            ],
                            [/(htc)[-;_ ]{1,2}([\w ]+(?=\)| bui)|\w+)/i, /(zte)[- ]([\w ]+?)(?: bui|\/|\))/i, /(alcatel|geeksphone|nexian|panasonic(?!(?:;|\.))|sony(?!-bra))[-_ ]?([-\w]*)/i],
                            [b, [p, /_/g, " "],
                                [m, E]
                            ],
                            [/droid.+; ([ab][1-7]-?[0178a]\d\d?)/i],
                            [p, [b, "Acer"],
                                [m, x]
                            ],
                            [/droid.+; (m[1-5] note) bui/i, /\bmz-([-\w]{2,})/i],
                            [p, [b, "Meizu"],
                                [m, E]
                            ],
                            [/; ((?:power )?armor(?:[\w ]{0,8}))(?: bui|\))/i],
                            [p, [b, "Ulefone"],
                                [m, E]
                            ],
                            [/(blackberry|benq|palm(?=\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron|infinix|tecno)[-_ ]?([-\w]*)/i, /(hp) ([\w ]+\w)/i, /(asus)-?(\w+)/i, /(microsoft); (lumia[\w ]+)/i, /(lenovo)[-_ ]?([-\w]+)/i, /(jolla)/i, /(oppo) ?([\w ]+) bui/i],
                            [b, p, [m, E]],
                            [/(kobo)\s(ereader|touch)/i, /(archos) (gamepad2?)/i, /(hp).+(touchpad(?!.+tablet)|tablet)/i, /(kindle)\/([\w\.]+)/i, /(nook)[\w ]+build\/(\w+)/i, /(dell) (strea[kpr\d ]*[\dko])/i, /(le[- ]+pan)[- ]+(\w{1,9}) bui/i, /(trinity)[- ]*(t\d{3}) bui/i, /(gigaset)[- ]+(q\w{1,9}) bui/i, /(vodafone) ([\w ]+)(?:\)| bui)/i],
                            [b, p, [m, x]],
                            [/(surface duo)/i],
                            [p, [b, U],
                                [m, x]
                            ],
                            [/droid [\d\.]+; (fp\du?)(?: b|\))/i],
                            [p, [b, "Fairphone"],
                                [m, E]
                            ],
                            [/(u304aa)/i],
                            [p, [b, "AT&T"],
                                [m, E]
                            ],
                            [/\bsie-(\w*)/i],
                            [p, [b, "Siemens"],
                                [m, E]
                            ],
                            [/\b(rct\w+) b/i],
                            [p, [b, "RCA"],
                                [m, x]
                            ],
                            [/\b(venue[\d ]{2,7}) b/i],
                            [p, [b, "Dell"],
                                [m, x]
                            ],
                            [/\b(q(?:mv|ta)\w+) b/i],
                            [p, [b, "Verizon"],
                                [m, x]
                            ],
                            [/\b(?:barnes[& ]+noble |bn[rt])([\w\+ ]*) b/i],
                            [p, [b, "Barnes & Noble"],
                                [m, x]
                            ],
                            [/\b(tm\d{3}\w+) b/i],
                            [p, [b, "NuVision"],
                                [m, x]
                            ],
                            [/\b(k88) b/i],
                            [p, [b, "ZTE"],
                                [m, x]
                            ],
                            [/\b(nx\d{3}j) b/i],
                            [p, [b, "ZTE"],
                                [m, E]
                            ],
                            [/\b(gen\d{3}) b.+49h/i],
                            [p, [b, "Swiss"],
                                [m, E]
                            ],
                            [/\b(zur\d{3}) b/i],
                            [p, [b, "Swiss"],
                                [m, x]
                            ],
                            [/\b((zeki)?tb.*\b) b/i],
                            [p, [b, "Zeki"],
                                [m, x]
                            ],
                            [/\b([yr]\d{2}) b/i, /\b(dragon[- ]+touch |dt)(\w{5}) b/i],
                            [
                                [b, "Dragon Touch"], p, [m, x]
                            ],
                            [/\b(ns-?\w{0,9}) b/i],
                            [p, [b, "Insignia"],
                                [m, x]
                            ],
                            [/\b((nxa|next)-?\w{0,9}) b/i],
                            [p, [b, "NextBook"],
                                [m, x]
                            ],
                            [/\b(xtreme\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i],
                            [
                                [b, "Voice"], p, [m, E]
                            ],
                            [/\b(lvtel\-)?(v1[12]) b/i],
                            [
                                [b, "LvTel"], p, [m, E]
                            ],
                            [/\b(ph-1) /i],
                            [p, [b, "Essential"],
                                [m, E]
                            ],
                            [/\b(v(100md|700na|7011|917g).*\b) b/i],
                            [p, [b, "Envizen"],
                                [m, x]
                            ],
                            [/\b(trio[-\w\. ]+) b/i],
                            [p, [b, "MachSpeed"],
                                [m, x]
                            ],
                            [/\btu_(1491) b/i],
                            [p, [b, "Rotor"],
                                [m, x]
                            ],
                            [/(shield[\w ]+) b/i],
                            [p, [b, "Nvidia"],
                                [m, x]
                            ],
                            [/(sprint) (\w+)/i],
                            [b, p, [m, E]],
                            [/(kin\.[onetw]{3})/i],
                            [
                                [p, /\./g, " "],
                                [b, U],
                                [m, E]
                            ],
                            [/droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\)/i],
                            [p, [b, G],
                                [m, x]
                            ],
                            [/droid.+; (ec30|ps20|tc[2-8]\d[kx])\)/i],
                            [p, [b, G],
                                [m, E]
                            ],
                            [/smart-tv.+(samsung)/i],
                            [b, [m, S]],
                            [/hbbtv.+maple;(\d+)/i],
                            [
                                [p, /^/, "SmartTV"],
                                [b, L],
                                [m, S]
                            ],
                            [/(nux; netcast.+smarttv|lg (netcast\.tv-201\d|android tv))/i],
                            [
                                [b, j],
                                [m, S]
                            ],
                            [/(apple) ?tv/i],
                            [b, [p, P + " TV"],
                                [m, S]
                            ],
                            [/crkey/i],
                            [
                                [p, M + "cast"],
                                [b, R],
                                [m, S]
                            ],
                            [/droid.+aft(\w+)( bui|\))/i],
                            [p, [b, A],
                                [m, S]
                            ],
                            [/\(dtv[\);].+(aquos)/i, /(aquos-tv[\w ]+)\)/i],
                            [p, [b, q],
                                [m, S]
                            ],
                            [/(bravia[\w ]+)( bui|\))/i],
                            [p, [b, $],
                                [m, S]
                            ],
                            [/(mitv-\w{5}) bui/i],
                            [p, [b, W],
                                [m, S]
                            ],
                            [/Hbbtv.*(technisat) (.*);/i],
                            [b, p, [m, S]],
                            [/\b(roku)[\dx]*[\)\/]((?:dvp-)?[\d\.]*)/i, /hbbtv\/\d+\.\d+\.\d+ +\([\w\+ ]*; *([\w\d][^;]*);([^;]*)/i],
                            [
                                [b, X],
                                [p, X],
                                [m, S]
                            ],
                            [/\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\b/i],
                            [
                                [m, S]
                            ],
                            [/(ouya)/i, /(nintendo) ([wids3utch]+)/i],
                            [b, p, [m, v]],
                            [/droid.+; (shield) bui/i],
                            [p, [b, "Nvidia"],
                                [m, v]
                            ],
                            [/(playstation [345portablevi]+)/i],
                            [p, [b, $],
                                [m, v]
                            ],
                            [/\b(xbox(?: one)?(?!; xbox))[\); ]/i],
                            [p, [b, U],
                                [m, v]
                            ],
                            [/((pebble))app/i],
                            [b, p, [m, O]],
                            [/(watch)(?: ?os[,\/]|\d,\d\/)[\d\.]+/i],
                            [p, [b, P],
                                [m, O]
                            ],
                            [/droid.+; (glass) \d/i],
                            [p, [b, R],
                                [m, O]
                            ],
                            [/droid.+; (wt63?0{2,3})\)/i],
                            [p, [b, G],
                                [m, O]
                            ],
                            [/(quest( 2| pro)?)/i],
                            [p, [b, z],
                                [m, O]
                            ],
                            [/(tesla)(?: qtcarbrowser|\/[-\w\.]+)/i],
                            [b, [m, C]],
                            [/(aeobc)\b/i],
                            [p, [b, A],
                                [m, C]
                            ],
                            [/droid .+?; ([^;]+?)(?: bui|; wv\)|\) applew).+? mobile safari/i],
                            [p, [m, E]],
                            [/droid .+?; ([^;]+?)(?: bui|\) applew).+?(?! mobile) safari/i],
                            [p, [m, x]],
                            [/\b((tablet|tab)[;\/]|focus\/\d(?!.+mobile))/i],
                            [
                                [m, x]
                            ],
                            [/(phone|mobile(?:[;\/]| [ \w\/\.]*safari)|pda(?=.+windows ce))/i],
                            [
                                [m, E]
                            ],
                            [/(android[-\w\. ]{0,9});.+buil/i],
                            [p, [b, "Generic"]]
                        ],
                        engine: [
                            [/windows.+ edge\/([\w\.]+)/i],
                            [g, [y, "EdgeHTML"]],
                            [/webkit\/537\.36.+chrome\/(?!27)([\w\.]+)/i],
                            [g, [y, "Blink"]],
                            [/(presto)\/([\w\.]+)/i, /(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\/([\w\.]+)/i, /ekioh(flow)\/([\w\.]+)/i, /(khtml|tasman|links)[\/ ]\(?([\w\.]+)/i, /(icab)[\/ ]([23]\.[\d\.]+)/i, /\b(libweb)/i],
                            [y, g],
                            [/rv\:([\w\.]{1,9})\b.+(gecko)/i],
                            [g, y]
                        ],
                        os: [
                            [/microsoft (windows) (vista|xp)/i],
                            [y, g],
                            [/(windows (?:phone(?: os)?|mobile))[\/ ]?([\d\.\w ]*)/i],
                            [y, [g, te, tr]],
                            [/windows nt 6\.2; (arm)/i, /windows[\/ ]?([ntce\d\. ]+\w)(?!.+xbox)/i, /(?:win(?=3|9|n)|win 9x )([nt\d\.]+)/i],
                            [
                                [g, te, tr],
                                [y, "Windows"]
                            ],
                            [/ip[honead]{2,4}\b(?:.*os ([\w]+) like mac|; opera)/i, /(?:ios;fbsv\/|iphone.+ios[\/ ])([\d\.]+)/i, /cfnetwork\/.+darwin/i],
                            [
                                [g, /_/g, "."],
                                [y, "iOS"]
                            ],
                            [/(mac os x) ?([\w\. ]*)/i, /(macintosh|mac_powerpc\b)(?!.+haiku)/i],
                            [
                                [y, K],
                                [g, /_/g, "."]
                            ],
                            [/droid ([\w\.]+)\b.+(android[- ]x86|harmonyos)/i],
                            [g, y],
                            [/(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish)[-\/ ]?([\w\.]*)/i, /(blackberry)\w*\/([\w\.]*)/i, /(tizen|kaios)[\/ ]([\w\.]+)/i, /\((series40);/i],
                            [y, g],
                            [/\(bb(10);/i],
                            [g, [y, D]],
                            [/(?:symbian ?os|symbos|s60(?=;)|series60)[-\/ ]?([\w\.]*)/i],
                            [g, [y, "Symbian"]],
                            [/mozilla\/[\d\.]+ \((?:mobile|tablet|tv|mobile; [\w ]+); rv:.+ gecko\/([\w\.]+)/i],
                            [g, [y, B + " OS"]],
                            [/web0s;.+rt(tv)/i, /\b(?:hp)?wos(?:browser)?\/([\w\.]+)/i],
                            [g, [y, "webOS"]],
                            [/watch(?: ?os[,\/]|\d,\d\/)([\d\.]+)/i],
                            [g, [y, "watchOS"]],
                            [/crkey\/([\d\.]+)/i],
                            [g, [y, M + "cast"]],
                            [/(cros) [\w]+(?:\)| ([\w\.]+)\b)/i],
                            [
                                [y, H], g
                            ],
                            [/panasonic;(viera)/i, /(netrange)mmh/i, /(nettv)\/(\d+\.[\w\.]+)/i, /(nintendo|playstation) ([wids345portablevuch]+)/i, /(xbox); +xbox ([^\);]+)/i, /\b(joli|palm)\b ?(?:os)?\/?([\w\.]*)/i, /(mint)[\/\(\) ]?(\w*)/i, /(mageia|vectorlinux)[; ]/i, /([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\/ ]?(?!chrom|package)([-\w\.]*)/i, /(hurd|linux) ?([\w\.]*)/i, /(gnu) ?([\w\.]*)/i, /\b([-frentopcghs]{0,5}bsd|dragonfly)[\/ ]?(?!amd|[ix346]{1,2}86)([\w\.]*)/i, /(haiku) (\w+)/i],
                            [y, g],
                            [/(sunos) ?([\w\.\d]*)/i],
                            [
                                [y, "Solaris"], g
                            ],
                            [/((?:open)?solaris)[-\/ ]?([\w\.]*)/i, /(aix) ((\d)(?=\.|\)| )[\w\.])*/i, /\b(beos|os\/2|amigaos|morphos|openvms|fuchsia|hp-ux|serenityos)/i, /(unix) ?([\w\.]*)/i],
                            [y, g]
                        ]
                    },
                    ti = function(t, e) {
                        if (typeof t === h && (e = t, t = o), !(this instanceof ti)) return new ti(t, e).getResult();
                        var r = typeof i !== l && i.navigator ? i.navigator : o,
                            n = t || (r && r.userAgent ? r.userAgent : a),
                            s = r && r.userAgentData ? r.userAgentData : o,
                            u = e ? V(tn, e) : tn,
                            v = r && r.userAgent == n;
                        return this.getBrowser = function() {
                            var t = {};
                            return t[y] = o, t[g] = o, tt.call(t, n, u.browser), t[d] = J(t[g]), v && r && r.brave && typeof r.brave.isBrave == c && (t[y] = "Brave"), t
                        }, this.getCPU = function() {
                            var t = {};
                            return t[w] = o, tt.call(t, n, u.cpu), t
                        }, this.getDevice = function() {
                            var t = {};
                            return t[b] = o, t[p] = o, t[m] = o, tt.call(t, n, u.device), v && !t[m] && s && s.mobile && (t[m] = E), v && "Macintosh" == t[p] && r && typeof r.standalone !== l && r.maxTouchPoints && r.maxTouchPoints > 2 && (t[p] = "iPad", t[m] = x), t
                        }, this.getEngine = function() {
                            var t = {};
                            return t[y] = o, t[g] = o, tt.call(t, n, u.engine), t
                        }, this.getOS = function() {
                            var t = {};
                            return t[y] = o, t[g] = o, tt.call(t, n, u.os), v && !t[y] && s && "Unknown" != s.platform && (t[y] = s.platform.replace(/chrome os/i, H).replace(/macos/i, K)), t
                        }, this.getResult = function() {
                            return {
                                ua: this.getUA(),
                                browser: this.getBrowser(),
                                engine: this.getEngine(),
                                os: this.getOS(),
                                device: this.getDevice(),
                                cpu: this.getCPU()
                            }
                        }, this.getUA = function() {
                            return n
                        }, this.setUA = function(t) {
                            return n = typeof t === f && t.length > _ ? X(t, _) : t, this
                        }, this.setUA(n), this
                    };
                ti.VERSION = s, ti.BROWSER = Q([y, g, d]), ti.CPU = Q([w]), ti.DEVICE = Q([p, b, m, v, E, S, x, O, C]), ti.ENGINE = ti.OS = Q([y, g]), typeof e !== l ? ("object" !== l && t.exports && (e = t.exports = ti), e.UAParser = ti) : "function" === c && r.amdO ? o !== (n = (function() {
                    return ti
                }).call(e, r, e, t)) && (t.exports = n) : typeof i !== l && (i.UAParser = ti);
                var to = typeof i !== l && (i.jQuery || i.Zepto);
                if (to && !to.ua) {
                    var ts = new ti;
                    to.ua = ts.getResult(), to.ua.get = function() {
                        return ts.getUA()
                    }, to.ua.set = function(t) {
                        ts.setUA(t);
                        var e = ts.getResult();
                        for (var r in e) to.ua[r] = e[r]
                    }
                }
            }("object" == typeof window ? window : this)
        },
        18749: function(t) {
            t.exports = function(t) {
                return t && "object" == typeof t && "function" == typeof t.copy && "function" == typeof t.fill && "function" == typeof t.readUInt8
            }
        },
        83075: function(t, e, r) {
            "use strict";
            var n = r(23722),
                i = r(80184),
                o = r(93790),
                s = r(87688);

            function a(t) {
                return t.call.bind(t)
            }
            var u = "undefined" != typeof BigInt,
                c = "undefined" != typeof Symbol,
                l = a(Object.prototype.toString),
                h = a(Number.prototype.valueOf),
                f = a(String.prototype.valueOf),
                d = a(Boolean.prototype.valueOf);
            if (u) var p = a(BigInt.prototype.valueOf);
            if (c) var y = a(Symbol.prototype.valueOf);

            function m(t, e) {
                if ("object" != typeof t) return !1;
                try {
                    return e(t), !0
                } catch (t) {
                    return !1
                }
            }

            function b(t) {
                return "undefined" != typeof Promise && t instanceof Promise || null !== t && "object" == typeof t && "function" == typeof t.then && "function" == typeof t.catch
            }

            function g(t) {
                return "undefined" != typeof ArrayBuffer && ArrayBuffer.isView ? ArrayBuffer.isView(t) : s(t) || q(t)
            }

            function w(t) {
                return "Uint8Array" === o(t)
            }

            function v(t) {
                return "Uint8ClampedArray" === o(t)
            }

            function E(t) {
                return "Uint16Array" === o(t)
            }

            function x(t) {
                return "Uint32Array" === o(t)
            }

            function S(t) {
                return "Int8Array" === o(t)
            }

            function O(t) {
                return "Int16Array" === o(t)
            }

            function C(t) {
                return "Int32Array" === o(t)
            }

            function _(t) {
                return "Float32Array" === o(t)
            }

            function A(t) {
                return "Float64Array" === o(t)
            }

            function P(t) {
                return "BigInt64Array" === o(t)
            }

            function k(t) {
                return "BigUint64Array" === o(t)
            }

            function D(t) {
                return "[object Map]" === l(t)
            }

            function I(t) {
                return "undefined" != typeof Map && (D.working ? D(t) : t instanceof Map)
            }

            function M(t) {
                return "[object Set]" === l(t)
            }

            function B(t) {
                return "undefined" != typeof Set && (M.working ? M(t) : t instanceof Set)
            }

            function R(t) {
                return "[object WeakMap]" === l(t)
            }

            function T(t) {
                return "undefined" != typeof WeakMap && (R.working ? R(t) : t instanceof WeakMap)
            }

            function j(t) {
                return "[object WeakSet]" === l(t)
            }

            function U(t) {
                return j(t)
            }

            function N(t) {
                return "[object ArrayBuffer]" === l(t)
            }

            function F(t) {
                return "undefined" != typeof ArrayBuffer && (N.working ? N(t) : t instanceof ArrayBuffer)
            }

            function L(t) {
                return "[object DataView]" === l(t)
            }

            function q(t) {
                return "undefined" != typeof DataView && (L.working ? L(t) : t instanceof DataView)
            }
            e.isArgumentsObject = n, e.isGeneratorFunction = i, e.isTypedArray = s, e.isPromise = b, e.isArrayBufferView = g, e.isUint8Array = w, e.isUint8ClampedArray = v, e.isUint16Array = E, e.isUint32Array = x, e.isInt8Array = S, e.isInt16Array = O, e.isInt32Array = C, e.isFloat32Array = _, e.isFloat64Array = A, e.isBigInt64Array = P, e.isBigUint64Array = k, D.working = "undefined" != typeof Map && D(new Map), e.isMap = I, M.working = "undefined" != typeof Set && M(new Set), e.isSet = B, R.working = "undefined" != typeof WeakMap && R(new WeakMap), e.isWeakMap = T, j.working = "undefined" != typeof WeakSet && j(new WeakSet), e.isWeakSet = U, N.working = "undefined" != typeof ArrayBuffer && N(new ArrayBuffer), e.isArrayBuffer = F, L.working = "undefined" != typeof ArrayBuffer && "undefined" != typeof DataView && L(new DataView(new ArrayBuffer(1), 0, 1)), e.isDataView = q;
            var $ = "undefined" != typeof SharedArrayBuffer ? SharedArrayBuffer : void 0;

            function W(t) {
                return "[object SharedArrayBuffer]" === l(t)
            }

            function G(t) {
                return void 0 !== $ && (void 0 === W.working && (W.working = W(new $)), W.working ? W(t) : t instanceof $)
            }

            function z(t) {
                return "[object AsyncFunction]" === l(t)
            }

            function H(t) {
                return "[object Map Iterator]" === l(t)
            }

            function K(t) {
                return "[object Set Iterator]" === l(t)
            }

            function V(t) {
                return "[object Generator]" === l(t)
            }

            function Q(t) {
                return "[object WebAssembly.Module]" === l(t)
            }

            function Z(t) {
                return m(t, h)
            }

            function Y(t) {
                return m(t, f)
            }

            function J(t) {
                return m(t, d)
            }

            function X(t) {
                return u && m(t, p)
            }

            function tt(t) {
                return c && m(t, y)
            }

            function te(t) {
                return Z(t) || Y(t) || J(t) || X(t) || tt(t)
            }

            function tr(t) {
                return "undefined" != typeof Uint8Array && (F(t) || G(t))
            }
            e.isSharedArrayBuffer = G, e.isAsyncFunction = z, e.isMapIterator = H, e.isSetIterator = K, e.isGeneratorObject = V, e.isWebAssemblyCompiledModule = Q, e.isNumberObject = Z, e.isStringObject = Y, e.isBooleanObject = J, e.isBigIntObject = X, e.isSymbolObject = tt, e.isBoxedPrimitive = te, e.isAnyArrayBuffer = tr, ["isProxy", "isExternal", "isModuleNamespaceObject"].forEach(function(t) {
                Object.defineProperty(e, t, {
                    enumerable: !1,
                    value: function() {
                        throw Error(t + " is not supported in userland")
                    }
                })
            })
        },
        85508: function(t, e, r) {
            var n = r(25566),
                i = Object.getOwnPropertyDescriptors || function(t) {
                    for (var e = Object.keys(t), r = {}, n = 0; n < e.length; n++) r[e[n]] = Object.getOwnPropertyDescriptor(t, e[n]);
                    return r
                },
                o = /%[sdj%]/g;
            e.format = function(t) {
                if (!O(t)) {
                    for (var e = [], r = 0; r < arguments.length; r++) e.push(c(arguments[r]));
                    return e.join(" ")
                }
                for (var r = 1, n = arguments, i = n.length, s = String(t).replace(o, function(t) {
                        if ("%%" === t) return "%";
                        if (r >= i) return t;
                        switch (t) {
                            case "%s":
                                return String(n[r++]);
                            case "%d":
                                return Number(n[r++]);
                            case "%j":
                                try {
                                    return JSON.stringify(n[r++])
                                } catch (t) {
                                    return "[Circular]"
                                }
                            default:
                                return t
                        }
                    }), a = n[r]; r < i; a = n[++r]) E(a) || !P(a) ? s += " " + a : s += " " + c(a);
                return s
            }, e.deprecate = function(t, r) {
                if (void 0 !== n && !0 === n.noDeprecation) return t;
                if (void 0 === n) return function() {
                    return e.deprecate(t, r).apply(this, arguments)
                };
                var i = !1;
                return function() {
                    if (!i) {
                        if (n.throwDeprecation) throw Error(r);
                        n.traceDeprecation ? console.trace(r) : console.error(r), i = !0
                    }
                    return t.apply(this, arguments)
                }
            };
            var s = {},
                a = /^$/;
            if (n.env.NODE_DEBUG) {
                var u = n.env.NODE_DEBUG;
                a = RegExp("^" + (u = u.replace(/[|\\{}()[\]^$+?.]/g, "\\$&").replace(/\*/g, ".*").replace(/,/g, "$|^").toUpperCase()) + "$", "i")
            }

            function c(t, r) {
                var n = {
                    seen: [],
                    stylize: h
                };
                return arguments.length >= 3 && (n.depth = arguments[2]), arguments.length >= 4 && (n.colors = arguments[3]), v(r) ? n.showHidden = r : r && e._extend(n, r), _(n.showHidden) && (n.showHidden = !1), _(n.depth) && (n.depth = 2), _(n.colors) && (n.colors = !1), _(n.customInspect) && (n.customInspect = !0), n.colors && (n.stylize = l), d(n, t, n.depth)
            }

            function l(t, e) {
                var r = c.styles[e];
                return r ? "\x1b[" + c.colors[r][0] + "m" + t + "\x1b[" + c.colors[r][1] + "m" : t
            }

            function h(t, e) {
                return t
            }

            function f(t) {
                var e = {};
                return t.forEach(function(t, r) {
                    e[t] = !0
                }), e
            }

            function d(t, r, n) {
                if (t.customInspect && r && I(r.inspect) && r.inspect !== e.inspect && !(r.constructor && r.constructor.prototype === r)) {
                    var i, o = r.inspect(n, t);
                    return O(o) || (o = d(t, o, n)), o
                }
                var s = p(t, r);
                if (s) return s;
                var a = Object.keys(r),
                    u = f(a);
                if (t.showHidden && (a = Object.getOwnPropertyNames(r)), D(r) && (a.indexOf("message") >= 0 || a.indexOf("description") >= 0)) return y(r);
                if (0 === a.length) {
                    if (I(r)) {
                        var c = r.name ? ": " + r.name : "";
                        return t.stylize("[Function" + c + "]", "special")
                    }
                    if (A(r)) return t.stylize(RegExp.prototype.toString.call(r), "regexp");
                    if (k(r)) return t.stylize(Date.prototype.toString.call(r), "date");
                    if (D(r)) return y(r)
                }
                var l = "",
                    h = !1,
                    v = ["{", "}"];
                return (w(r) && (h = !0, v = ["[", "]"]), I(r) && (l = " [Function" + (r.name ? ": " + r.name : "") + "]"), A(r) && (l = " " + RegExp.prototype.toString.call(r)), k(r) && (l = " " + Date.prototype.toUTCString.call(r)), D(r) && (l = " " + y(r)), 0 !== a.length || h && 0 != r.length) ? n < 0 ? A(r) ? t.stylize(RegExp.prototype.toString.call(r), "regexp") : t.stylize("[Object]", "special") : (t.seen.push(r), i = h ? m(t, r, n, u, a) : a.map(function(e) {
                    return b(t, r, n, u, e, h)
                }), t.seen.pop(), g(i, l, v)) : v[0] + l + v[1]
            }

            function p(t, e) {
                if (_(e)) return t.stylize("undefined", "undefined");
                if (O(e)) {
                    var r = "'" + JSON.stringify(e).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
                    return t.stylize(r, "string")
                }
                return S(e) ? t.stylize("" + e, "number") : v(e) ? t.stylize("" + e, "boolean") : E(e) ? t.stylize("null", "null") : void 0
            }

            function y(t) {
                return "[" + Error.prototype.toString.call(t) + "]"
            }

            function m(t, e, r, n, i) {
                for (var o = [], s = 0, a = e.length; s < a; ++s) U(e, String(s)) ? o.push(b(t, e, r, n, String(s), !0)) : o.push("");
                return i.forEach(function(i) {
                    i.match(/^\d+$/) || o.push(b(t, e, r, n, i, !0))
                }), o
            }

            function b(t, e, r, n, i, o) {
                var s, a, u;
                if ((u = Object.getOwnPropertyDescriptor(e, i) || {
                        value: e[i]
                    }).get ? a = u.set ? t.stylize("[Getter/Setter]", "special") : t.stylize("[Getter]", "special") : u.set && (a = t.stylize("[Setter]", "special")), U(n, i) || (s = "[" + i + "]"), !a && (0 > t.seen.indexOf(u.value) ? (a = E(r) ? d(t, u.value, null) : d(t, u.value, r - 1)).indexOf("\n") > -1 && (a = o ? a.split("\n").map(function(t) {
                        return "  " + t
                    }).join("\n").slice(2) : "\n" + a.split("\n").map(function(t) {
                        return "   " + t
                    }).join("\n")) : a = t.stylize("[Circular]", "special")), _(s)) {
                    if (o && i.match(/^\d+$/)) return a;
                    (s = JSON.stringify("" + i)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/) ? (s = s.slice(1, -1), s = t.stylize(s, "name")) : (s = s.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'"), s = t.stylize(s, "string"))
                }
                return s + ": " + a
            }

            function g(t, e, r) {
                var n = 0;
                return t.reduce(function(t, e) {
                    return n++, e.indexOf("\n") >= 0 && n++, t + e.replace(/\u001b\[\d\d?m/g, "").length + 1
                }, 0) > 60 ? r[0] + ("" === e ? "" : e + "\n ") + " " + t.join(",\n  ") + " " + r[1] : r[0] + e + " " + t.join(", ") + " " + r[1]
            }

            function w(t) {
                return Array.isArray(t)
            }

            function v(t) {
                return "boolean" == typeof t
            }

            function E(t) {
                return null === t
            }

            function x(t) {
                return null == t
            }

            function S(t) {
                return "number" == typeof t
            }

            function O(t) {
                return "string" == typeof t
            }

            function C(t) {
                return "symbol" == typeof t
            }

            function _(t) {
                return void 0 === t
            }

            function A(t) {
                return P(t) && "[object RegExp]" === B(t)
            }

            function P(t) {
                return "object" == typeof t && null !== t
            }

            function k(t) {
                return P(t) && "[object Date]" === B(t)
            }

            function D(t) {
                return P(t) && ("[object Error]" === B(t) || t instanceof Error)
            }

            function I(t) {
                return "function" == typeof t
            }

            function M(t) {
                return null === t || "boolean" == typeof t || "number" == typeof t || "string" == typeof t || "symbol" == typeof t || void 0 === t
            }

            function B(t) {
                return Object.prototype.toString.call(t)
            }

            function R(t) {
                return t < 10 ? "0" + t.toString(10) : t.toString(10)
            }
            e.debuglog = function(t) {
                if (!s[t = t.toUpperCase()]) {
                    if (a.test(t)) {
                        var r = n.pid;
                        s[t] = function() {
                            var n = e.format.apply(e, arguments);
                            console.error("%s %d: %s", t, r, n)
                        }
                    } else s[t] = function() {}
                }
                return s[t]
            }, e.inspect = c, c.colors = {
                bold: [1, 22],
                italic: [3, 23],
                underline: [4, 24],
                inverse: [7, 27],
                white: [37, 39],
                grey: [90, 39],
                black: [30, 39],
                blue: [34, 39],
                cyan: [36, 39],
                green: [32, 39],
                magenta: [35, 39],
                red: [31, 39],
                yellow: [33, 39]
            }, c.styles = {
                special: "cyan",
                number: "yellow",
                boolean: "yellow",
                undefined: "grey",
                null: "bold",
                string: "green",
                date: "magenta",
                regexp: "red"
            }, e.types = r(83075), e.isArray = w, e.isBoolean = v, e.isNull = E, e.isNullOrUndefined = x, e.isNumber = S, e.isString = O, e.isSymbol = C, e.isUndefined = _, e.isRegExp = A, e.types.isRegExp = A, e.isObject = P, e.isDate = k, e.types.isDate = k, e.isError = D, e.types.isNativeError = D, e.isFunction = I, e.isPrimitive = M, e.isBuffer = r(18749);
            var T = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];

            function j() {
                var t = new Date,
                    e = [R(t.getHours()), R(t.getMinutes()), R(t.getSeconds())].join(":");
                return [t.getDate(), T[t.getMonth()], e].join(" ")
            }

            function U(t, e) {
                return Object.prototype.hasOwnProperty.call(t, e)
            }
            e.log = function() {
                console.log("%s - %s", j(), e.format.apply(e, arguments))
            }, e.inherits = r(56853), e._extend = function(t, e) {
                if (!e || !P(e)) return t;
                for (var r = Object.keys(e), n = r.length; n--;) t[r[n]] = e[r[n]];
                return t
            };
            var N = "undefined" != typeof Symbol ? Symbol("util.promisify.custom") : void 0;

            function F(t, e) {
                if (!t) {
                    var r = Error("Promise was rejected with a falsy value");
                    r.reason = t, t = r
                }
                return e(t)
            }

            function L(t) {
                if ("function" != typeof t) throw TypeError('The "original" argument must be of type Function');

                function e() {
                    for (var e = [], r = 0; r < arguments.length; r++) e.push(arguments[r]);
                    var i = e.pop();
                    if ("function" != typeof i) throw TypeError("The last argument must be of type Function");
                    var o = this,
                        s = function() {
                            return i.apply(o, arguments)
                        };
                    t.apply(this, e).then(function(t) {
                        n.nextTick(s.bind(null, null, t))
                    }, function(t) {
                        n.nextTick(F.bind(null, t, s))
                    })
                }
                return Object.setPrototypeOf(e, Object.getPrototypeOf(t)), Object.defineProperties(e, i(t)), e
            }
            e.promisify = function(t) {
                if ("function" != typeof t) throw TypeError('The "original" argument must be of type Function');
                if (N && t[N]) {
                    var e = t[N];
                    if ("function" != typeof e) throw TypeError('The "util.promisify.custom" argument must be of type Function');
                    return Object.defineProperty(e, N, {
                        value: e,
                        enumerable: !1,
                        writable: !1,
                        configurable: !0
                    }), e
                }

                function e() {
                    for (var e, r, n = new Promise(function(t, n) {
                            e = t, r = n
                        }), i = [], o = 0; o < arguments.length; o++) i.push(arguments[o]);
                    i.push(function(t, n) {
                        t ? r(t) : e(n)
                    });
                    try {
                        t.apply(this, i)
                    } catch (t) {
                        r(t)
                    }
                    return n
                }
                return Object.setPrototypeOf(e, Object.getPrototypeOf(t)), N && Object.defineProperty(e, N, {
                    value: e,
                    enumerable: !1,
                    writable: !1,
                    configurable: !0
                }), Object.defineProperties(e, i(t))
            }, e.promisify.custom = N, e.callbackify = L
        },
        43763: function(t, e, r) {
            "use strict";
            r.d(e, {
                v4: function() {
                    return h
                }
            });
            var n, i = new Uint8Array(16);

            function o() {
                if (!n && !(n = "undefined" != typeof crypto && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || "undefined" != typeof msCrypto && "function" == typeof msCrypto.getRandomValues && msCrypto.getRandomValues.bind(msCrypto))) throw Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
                return n(i)
            }
            for (var s = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i, a = function(t) {
                    return "string" == typeof t && s.test(t)
                }, u = [], c = 0; c < 256; ++c) u.push((c + 256).toString(16).substr(1));
            var l = function(t) {
                    var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                        r = (u[t[e + 0]] + u[t[e + 1]] + u[t[e + 2]] + u[t[e + 3]] + "-" + u[t[e + 4]] + u[t[e + 5]] + "-" + u[t[e + 6]] + u[t[e + 7]] + "-" + u[t[e + 8]] + u[t[e + 9]] + "-" + u[t[e + 10]] + u[t[e + 11]] + u[t[e + 12]] + u[t[e + 13]] + u[t[e + 14]] + u[t[e + 15]]).toLowerCase();
                    if (!a(r)) throw TypeError("Stringified UUID is invalid");
                    return r
                },
                h = function(t, e, r) {
                    var n = (t = t || {}).random || (t.rng || o)();
                    if (n[6] = 15 & n[6] | 64, n[8] = 63 & n[8] | 128, e) {
                        r = r || 0;
                        for (var i = 0; i < 16; ++i) e[r + i] = n[i];
                        return e
                    }
                    return l(n)
                }
        },
        18413: function(t, e, r) {
            "use strict";
            /**
             * @license React
             * use-sync-external-store-shim.production.min.js
             *
             * Copyright (c) Facebook, Inc. and its affiliates.
             *
             * This source code is licensed under the MIT license found in the
             * LICENSE file in the root directory of this source tree.
             */
            var n = r(2265);

            function i(t, e) {
                return t === e && (0 !== t || 1 / t == 1 / e) || t != t && e != e
            }
            var o = "function" == typeof Object.is ? Object.is : i,
                s = n.useState,
                a = n.useEffect,
                u = n.useLayoutEffect,
                c = n.useDebugValue;

            function l(t, e) {
                var r = e(),
                    n = s({
                        inst: {
                            value: r,
                            getSnapshot: e
                        }
                    }),
                    i = n[0].inst,
                    o = n[1];
                return u(function() {
                    i.value = r, i.getSnapshot = e, h(i) && o({
                        inst: i
                    })
                }, [t, r, e]), a(function() {
                    return h(i) && o({
                        inst: i
                    }), t(function() {
                        h(i) && o({
                            inst: i
                        })
                    })
                }, [t]), c(r), r
            }

            function h(t) {
                var e = t.getSnapshot;
                t = t.value;
                try {
                    var r = e();
                    return !o(t, r)
                } catch (t) {
                    return !0
                }
            }

            function f(t, e) {
                return e()
            }
            var d = "undefined" == typeof window || void 0 === window.document || void 0 === window.document.createElement ? f : l;
            e.useSyncExternalStore = void 0 !== n.useSyncExternalStore ? n.useSyncExternalStore : d
        },
        33977: function(t, e, r) {
            "use strict";
            /**
             * @license React
             * use-sync-external-store-shim/with-selector.production.min.js
             *
             * Copyright (c) Facebook, Inc. and its affiliates.
             *
             * This source code is licensed under the MIT license found in the
             * LICENSE file in the root directory of this source tree.
             */
            var n = r(2265),
                i = r(60293);

            function o(t, e) {
                return t === e && (0 !== t || 1 / t == 1 / e) || t != t && e != e
            }
            var s = "function" == typeof Object.is ? Object.is : o,
                a = i.useSyncExternalStore,
                u = n.useRef,
                c = n.useEffect,
                l = n.useMemo,
                h = n.useDebugValue;
            e.useSyncExternalStoreWithSelector = function(t, e, r, n, i) {
                var o = u(null);
                if (null === o.current) {
                    var f = {
                        hasValue: !1,
                        value: null
                    };
                    o.current = f
                } else f = o.current;
                var d = a(t, (o = l(function() {
                    function t(t) {
                        if (!u) {
                            if (u = !0, o = t, t = n(t), void 0 !== i && f.hasValue) {
                                var e = f.value;
                                if (i(e, t)) return a = e
                            }
                            return a = t
                        }
                        if (e = a, s(o, t)) return e;
                        var r = n(t);
                        return void 0 !== i && i(e, r) ? e : (o = t, a = r)
                    }
                    var o, a, u = !1,
                        c = void 0 === r ? null : r;
                    return [function() {
                        return t(e())
                    }, null === c ? void 0 : function() {
                        return t(c())
                    }]
                }, [e, r, n, i]))[0], o[1]);
                return c(function() {
                    f.hasValue = !0, f.value = d
                }, [d]), h(d), d
            }
        },
        60293: function(t, e, r) {
            "use strict";
            t.exports = r(18413)
        },
        48892: function(t, e, r) {
            "use strict";
            t.exports = r(33977)
        },
        93790: function(t, e, r) {
            "use strict";
            var n = r(27660),
                i = r(77509),
                o = r(72884),
                s = r(23837),
                a = r(50297),
                u = s("Object.prototype.toString"),
                c = r(50212)(),
                l = "undefined" == typeof globalThis ? r.g : globalThis,
                h = i(),
                f = s("String.prototype.slice"),
                d = Object.getPrototypeOf,
                p = s("Array.prototype.indexOf", !0) || function(t, e) {
                    for (var r = 0; r < t.length; r += 1)
                        if (t[r] === e) return r;
                    return -1
                },
                y = {
                    __proto__: null
                };
            c && a && d ? n(h, function(t) {
                var e = new l[t];
                if (Symbol.toStringTag in e) {
                    var r = d(e),
                        n = a(r, Symbol.toStringTag);
                    n || (n = a(d(r), Symbol.toStringTag)), y["$" + t] = o(n.get)
                }
            }) : n(h, function(t) {
                var e = new l[t],
                    r = e.slice || e.set;
                r && (y["$" + t] = o(r))
            });
            var m = function(t) {
                    var e = !1;
                    return n(y, function(r, n) {
                        if (!e) try {
                            "$" + r(t) === n && (e = f(n, 1))
                        } catch (t) {}
                    }), e
                },
                b = function(t) {
                    var e = !1;
                    return n(y, function(r, n) {
                        if (!e) try {
                            r(t), e = f(n, 1)
                        } catch (t) {}
                    }), e
                };
            t.exports = function(t) {
                if (!t || "object" != typeof t) return !1;
                if (!c) {
                    var e = f(u(t), 8, -1);
                    return p(h, e) > -1 ? e : "Object" === e && b(t)
                }
                return a ? m(t) : null
            }
        },
        77509: function(t, e, r) {
            "use strict";
            var n = r(78584),
                i = "undefined" == typeof globalThis ? r.g : globalThis;
            t.exports = function() {
                for (var t = [], e = 0; e < n.length; e++) "function" == typeof i[n[e]] && (t[t.length] = n[e]);
                return t
            }
        },
        91180: function(t, e, r) {
            "use strict";
            r.d(e, {
                I: function() {
                    return n
                }
            });
            var n = '{\n  "connect_wallet": {\n    "label": "Connect Wallet",\n    "wrong_network": {\n      "label": "Wrong network"\n    }\n  },\n\n  "intro": {\n    "title": "What is a Wallet?",\n    "description": "A wallet is used to send, receive, store, and display digital assets. It\'s also a new way to log in, without needing to create new accounts and passwords on every website.",\n    "digital_asset": {\n      "title": "A Home for your Digital Assets",\n      "description": "Wallets are used to send, receive, store, and display digital assets like Ethereum and NFTs."\n    },\n    "login": {\n      "title": "A New Way to Log In",\n      "description": "Instead of creating new accounts and passwords on every website, just connect your wallet."\n    },\n    "get": {\n      "label": "Get a Wallet"\n    },\n    "learn_more": {\n      "label": "Learn More"\n    }\n  },\n\n  "sign_in": {\n    "label": "Verify your account",\n    "description": "To finish connecting, you must sign a message in your wallet to verify that you are the owner of this account.",\n    "message": {\n      "send": "Sign message",\n      "preparing": "Preparing message...",\n      "cancel": "Cancel",\n      "preparing_error": "Error preparing message, please retry!"\n    },\n    "signature": {\n      "waiting": "Waiting for signature...",\n      "verifying": "Verifying signature...",\n      "signing_error": "Error signing message, please retry!",\n      "verifying_error": "Error verifying signature, please retry!",\n      "oops_error": "Oops, something went wrong!"\n    }\n  },\n\n  "connect": {\n    "label": "Connect",\n    "title": "Connect a Wallet",\n    "new_to_ethereum": {\n      "description": "New to Ethereum wallets?",\n      "learn_more": {\n        "label": "Learn More"\n      }\n    },\n    "learn_more": {\n      "label": "Learn more"\n    },\n    "recent": "Recent",\n    "status": {\n      "opening": "Opening %{wallet}...",\n      "connecting": "Connecting",\n      "connect_mobile": "Continue in %{wallet}",\n      "not_installed": "%{wallet} is not installed",\n      "not_available": "%{wallet} is not available",\n      "confirm": "Confirm connection in the extension",\n      "confirm_mobile": "Accept connection request in the wallet"\n    },\n    "secondary_action": {\n      "get": {\n        "description": "Don\'t have %{wallet}?",\n        "label": "GET"\n      },\n      "install": {\n        "label": "INSTALL"\n      },\n      "retry": {\n        "label": "RETRY"\n      }\n    },\n    "walletconnect": {\n      "description": {\n        "full": "Need the official WalletConnect modal?",\n        "compact": "Need the WalletConnect modal?"\n      },\n      "open": {\n        "label": "OPEN"\n      }\n    }\n  },\n\n  "connect_scan": {\n    "title": "Scan with %{wallet}",\n    "fallback_title": "Scan with your phone"\n  },\n\n  "connector_group": {\n    "recommended": "Recommended",\n    "other": "Other",\n    "popular": "Popular",\n    "more": "More",\n    "others": "Others"\n  },\n\n  "get": {\n    "title": "Get a Wallet",\n    "action": {\n      "label": "GET"\n    },\n    "mobile": {\n      "description": "Mobile Wallet"\n    },\n    "extension": {\n      "description": "Browser Extension"\n    },\n    "mobile_and_extension": {\n      "description": "Mobile Wallet and Extension"\n    },\n    "mobile_and_desktop": {\n      "description": "Mobile and Desktop Wallet"\n    },\n    "looking_for": {\n      "title": "Not what you\'re looking for?",\n      "mobile": {\n        "description": "Select a wallet on the main screen to get started with a different wallet provider."\n      },\n      "desktop": {\n        "compact_description": "Select a wallet on the main screen to get started with a different wallet provider.",\n        "wide_description": "Select a wallet on the left to get started with a different wallet provider."\n      }\n    }\n  },\n\n  "get_options": {\n    "title": "Get started with %{wallet}",\n    "short_title": "Get %{wallet}",\n    "mobile": {\n      "title": "%{wallet} for Mobile",\n      "description": "Use the mobile wallet to explore the world of Ethereum.",\n      "download": {\n        "label": "Get the app"\n      }\n    },\n    "extension": {\n      "title": "%{wallet} for %{browser}",\n      "description": "Access your wallet right from your favorite web browser.",\n      "download": {\n        "label": "Add to %{browser}"\n      }\n    },\n    "desktop": {\n      "title": "%{wallet} for %{platform}",\n      "description": "Access your wallet natively from your powerful desktop.",\n      "download": {\n        "label": "Add to %{platform}"\n      }\n    }\n  },\n\n  "get_mobile": {\n    "title": "Install %{wallet}",\n    "description": "Scan with your phone to download on iOS or Android",\n    "continue": {\n      "label": "Continue"\n    }\n  },\n\n  "get_instructions": {\n    "mobile": {\n      "connect": {\n        "label": "Connect"\n      },\n      "learn_more": {\n        "label": "Learn More"\n      }\n    },\n    "extension": {\n      "refresh": {\n        "label": "Refresh"\n      },\n      "learn_more": {\n        "label": "Learn More"\n      }\n    },\n    "desktop": {\n      "connect": {\n        "label": "Connect"\n      },\n      "learn_more": {\n        "label": "Learn More"\n      }\n    }\n  },\n\n  "chains": {\n    "title": "Switch Networks",\n    "wrong_network": "Wrong network detected, switch or disconnect to continue.",\n    "confirm": "Confirm in Wallet",\n    "switching_not_supported": "Your wallet does not support switching networks from %{appName}. Try switching networks from within your wallet instead.",\n    "switching_not_supported_fallback": "Your wallet does not support switching networks from this app. Try switching networks from within your wallet instead.",\n    "disconnect": "Disconnect",\n    "connected": "Connected"\n  },\n\n  "profile": {\n    "disconnect": {\n      "label": "Disconnect"\n    },\n    "copy_address": {\n      "label": "Copy Address",\n      "copied": "Copied!"\n    },\n    "explorer": {\n      "label": "View more on explorer"\n    },\n    "transactions": {\n      "description": "%{appName} transactions will appear here...",\n      "description_fallback": "Your transactions will appear here...",\n      "recent": {\n        "title": "Recent Transactions"\n      },\n      "clear": {\n        "label": "Clear All"\n      }\n    }\n  },\n\n  "wallet_connectors": {\n    "argent": {\n      "qr_code": {\n        "step1": {\n          "description": "Put Argent on your home screen for faster access to your wallet.",\n          "title": "Open the Argent app"\n        },\n        "step2": {\n          "description": "Create a wallet and username, or import an existing wallet.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet.",\n          "title": "Tap the Scan QR button"\n        }\n      }\n    },\n\n    "bifrost": {\n      "qr_code": {\n        "step1": {\n          "description": "We recommend putting Bifrost Wallet on your home screen for quicker access.",\n          "title": "Open the Bifrost Wallet app"\n        },\n        "step2": {\n          "description": "Create or import a wallet using your recovery phrase.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet.",\n          "title": "Tap the scan button"\n        }\n      }\n    },\n\n    "bitget": {\n      "qr_code": {\n        "step1": {\n          "description": "We recommend putting Bitget Wallet on your home screen for quicker access.",\n          "title": "Open the Bitget Wallet app"\n        },\n        "step2": {\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet.",\n          "title": "Tap the scan button"\n        }\n      },\n\n      "extension": {\n        "step1": {\n          "description": "We recommend pinning Bitget Wallet to your taskbar for quicker access to your wallet.",\n          "title": "Install the Bitget Wallet extension"\n        },\n        "step2": {\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension.",\n          "title": "Refresh your browser"\n        }\n      }\n    },\n\n    "bitski": {\n      "extension": {\n        "step1": {\n          "description": "We recommend pinning Bitski to your taskbar for quicker access to your wallet.",\n          "title": "Install the Bitski extension"\n        },\n        "step2": {\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension.",\n          "title": "Refresh your browser"\n        }\n      }\n    },\n\n    "coin98": {\n      "qr_code": {\n        "step1": {\n          "description": "We recommend putting Coin98 Wallet on your home screen for faster access to your wallet.",\n          "title": "Open the Coin98 Wallet app"\n        },\n        "step2": {\n          "description": "You can easily backup your wallet using our backup feature on your phone.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet.",\n          "title": "Tap the WalletConnect button"\n        }\n      },\n\n      "extension": {\n        "step1": {\n          "description": "Click at the top right of your browser and pin Coin98 Wallet for easy access.",\n          "title": "Install the Coin98 Wallet extension"\n        },\n        "step2": {\n          "description": "Create a new wallet or import an existing one.",\n          "title": "Create or Import a wallet"\n        },\n        "step3": {\n          "description": "Once you set up Coin98 Wallet, click below to refresh the browser and load up the extension.",\n          "title": "Refresh your browser"\n        }\n      }\n    },\n\n    "coinbase": {\n      "qr_code": {\n        "step1": {\n          "description": "We recommend putting Coinbase Wallet on your home screen for quicker access.",\n          "title": "Open the Coinbase Wallet app"\n        },\n        "step2": {\n          "description": "You can easily backup your wallet using the cloud backup feature.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet.",\n          "title": "Tap the scan button"\n        }\n      },\n\n      "extension": {\n        "step1": {\n          "description": "We recommend pinning Coinbase Wallet to your taskbar for quicker access to your wallet.",\n          "title": "Install the Coinbase Wallet extension"\n        },\n        "step2": {\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension.",\n          "title": "Refresh your browser"\n        }\n      }\n    },\n\n    "core": {\n      "qr_code": {\n        "step1": {\n          "description": "We recommend putting Core on your home screen for faster access to your wallet.",\n          "title": "Open the Core app"\n        },\n        "step2": {\n          "description": "You can easily backup your wallet using our backup feature on your phone.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet.",\n          "title": "Tap the WalletConnect button"\n        }\n      },\n\n      "extension": {\n        "step1": {\n          "description": "We recommend pinning Core to your taskbar for quicker access to your wallet.",\n          "title": "Install the Core extension"\n        },\n        "step2": {\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension.",\n          "title": "Refresh your browser"\n        }\n      }\n    },\n\n    "fox": {\n      "qr_code": {\n        "step1": {\n          "description": "We recommend putting FoxWallet on your home screen for quicker access.",\n          "title": "Open the FoxWallet app"\n        },\n        "step2": {\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet.",\n          "title": "Tap the scan button"\n        }\n      }\n    },\n\n    "frontier": {\n      "qr_code": {\n        "step1": {\n          "description": "We recommend putting Frontier Wallet on your home screen for quicker access.",\n          "title": "Open the Frontier Wallet app"\n        },\n        "step2": {\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet.",\n          "title": "Tap the scan button"\n        }\n      },\n\n      "extension": {\n        "step1": {\n          "description": "We recommend pinning Frontier Wallet to your taskbar for quicker access to your wallet.",\n          "title": "Install the Frontier Wallet extension"\n        },\n        "step2": {\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension.",\n          "title": "Refresh your browser"\n        }\n      }\n    },\n\n    "im_token": {\n      "qr_code": {\n        "step1": {\n          "title": "Open the imToken app",\n          "description": "Put imToken app on your home screen for faster access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Create a new wallet or import an existing one."\n        },\n        "step3": {\n          "title": "Tap Scanner Icon in top right corner",\n          "description": "Choose New Connection, then scan the QR code and confirm the prompt to connect."\n        }\n      }\n    },\n\n    "metamask": {\n      "qr_code": {\n        "step1": {\n          "title": "Open the MetaMask app",\n          "description": "We recommend putting MetaMask on your home screen for quicker access."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Tap the scan button",\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet."\n        }\n      },\n\n      "extension": {\n        "step1": {\n          "title": "Install the MetaMask extension",\n          "description": "We recommend pinning MetaMask to your taskbar for quicker access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension."\n        }\n      }\n    },\n\n    "okx": {\n      "qr_code": {\n        "step1": {\n          "title": "Open the OKX Wallet app",\n          "description": "We recommend putting OKX Wallet on your home screen for quicker access."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Tap the scan button",\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet."\n        }\n      },\n\n      "extension": {\n        "step1": {\n          "title": "Install the OKX Wallet extension",\n          "description": "We recommend pinning OKX Wallet to your taskbar for quicker access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension."\n        }\n      }\n    },\n\n    "omni": {\n      "qr_code": {\n        "step1": {\n          "title": "Open the Omni app",\n          "description": "Add Omni to your home screen for faster access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Create a new wallet or import an existing one."\n        },\n        "step3": {\n          "title": "Tap the QR icon and scan",\n          "description": "Tap the QR icon on your home screen, scan the code and confirm the prompt to connect."\n        }\n      }\n    },\n\n    "token_pocket": {\n      "qr_code": {\n        "step1": {\n          "title": "Open the TokenPocket app",\n          "description": "We recommend putting TokenPocket on your home screen for quicker access."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Tap the scan button",\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet."\n        }\n      },\n\n      "extension": {\n        "step1": {\n          "title": "Install the TokenPocket extension",\n          "description": "We recommend pinning TokenPocket to your taskbar for quicker access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension."\n        }\n      }\n    },\n\n    "trust": {\n      "qr_code": {\n        "step1": {\n          "title": "Open the Trust Wallet app",\n          "description": "Put Trust Wallet on your home screen for faster access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Create a new wallet or import an existing one."\n        },\n        "step3": {\n          "title": "Tap WalletConnect in Settings",\n          "description": "Choose New Connection, then scan the QR code and confirm the prompt to connect."\n        }\n      },\n\n      "extension": {\n        "step1": {\n          "title": "Install the Trust Wallet extension",\n          "description": "Click at the top right of your browser and pin Trust Wallet for easy access."\n        },\n        "step2": {\n          "title": "Create or Import a wallet",\n          "description": "Create a new wallet or import an existing one."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up Trust Wallet, click below to refresh the browser and load up the extension."\n        }\n      }\n    },\n\n    "uniswap": {\n      "qr_code": {\n        "step1": {\n          "title": "Open the Uniswap app",\n          "description": "Add Uniswap Wallet to your home screen for faster access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Create a new wallet or import an existing one."\n        },\n        "step3": {\n          "title": "Tap the QR icon and scan",\n          "description": "Tap the QR icon on your homescreen, scan the code and confirm the prompt to connect."\n        }\n      }\n    },\n\n    "zerion": {\n      "qr_code": {\n        "step1": {\n          "title": "Open the Zerion app",\n          "description": "We recommend putting Zerion on your home screen for quicker access."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Tap the scan button",\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet."\n        }\n      },\n\n      "extension": {\n        "step1": {\n          "title": "Install the Zerion extension",\n          "description": "We recommend pinning Zerion to your taskbar for quicker access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension."\n        }\n      }\n    },\n\n    "rainbow": {\n      "qr_code": {\n        "step1": {\n          "title": "Open the Rainbow app",\n          "description": "We recommend putting Rainbow on your home screen for faster access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "You can easily backup your wallet using our backup feature on your phone."\n        },\n        "step3": {\n          "title": "Tap the scan button",\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet."\n        }\n      }\n    },\n\n    "enkrypt": {\n      "extension": {\n        "step1": {\n          "description": "We recommend pinning Enkrypt Wallet to your taskbar for quicker access to your wallet.",\n          "title": "Install the Enkrypt Wallet extension"\n        },\n        "step2": {\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension.",\n          "title": "Refresh your browser"\n        }\n      }\n    },\n\n    "frame": {\n      "extension": {\n        "step1": {\n          "description": "We recommend pinning Frame to your taskbar for quicker access to your wallet.",\n          "title": "Install Frame & the companion extension"\n        },\n        "step2": {\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension.",\n          "title": "Refresh your browser"\n        }\n      }\n    },\n\n    "one_key": {\n      "extension": {\n        "step1": {\n          "title": "Install the OneKey Wallet extension",\n          "description": "We recommend pinning OneKey Wallet to your taskbar for quicker access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension."\n        }\n      }\n    },\n\n    "phantom": {\n      "extension": {\n        "step1": {\n          "title": "Install the Phantom extension",\n          "description": "We recommend pinning Phantom to your taskbar for easier access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret recovery phrase with anyone."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension."\n        }\n      }\n    },\n\n    "rabby": {\n      "extension": {\n        "step1": {\n          "title": "Install the Rabby extension",\n          "description": "We recommend pinning Rabby to your taskbar for quicker access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension."\n        }\n      }\n    },\n\n    "safeheron": {\n      "extension": {\n        "step1": {\n          "title": "Install the Core extension",\n          "description": "We recommend pinning Safeheron to your taskbar for quicker access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension."\n        }\n      }\n    },\n\n    "taho": {\n      "extension": {\n        "step1": {\n          "title": "Install the Taho extension",\n          "description": "We recommend pinning Taho to your taskbar for quicker access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension."\n        }\n      }\n    },\n\n    "talisman": {\n      "extension": {\n        "step1": {\n          "title": "Install the Talisman extension",\n          "description": "We recommend pinning Talisman to your taskbar for quicker access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import an Ethereum Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your recovery phrase with anyone."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension."\n        }\n      }\n    },\n\n    "xdefi": {\n      "extension": {\n        "step1": {\n          "title": "Install the XDEFI Wallet extension",\n          "description": "We recommend pinning XDEFI Wallet to your taskbar for quicker access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension."\n        }\n      }\n    },\n\n    "zeal": {\n      "extension": {\n        "step1": {\n          "title": "Install the Zeal extension",\n          "description": "We recommend pinning Zeal to your taskbar for quicker access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension."\n        }\n      }\n    },\n\n    "safepal": {\n      "extension": {\n        "step1": {\n          "title": "Install the SafePal Wallet extension",\n          "description": "Click at the top right of your browser and pin SafePal Wallet for easy access."\n        },\n        "step2": {\n          "title": "Create or Import a wallet",\n          "description": "Create a new wallet or import an existing one."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up SafePal Wallet, click below to refresh the browser and load up the extension."\n        }\n      },\n      "qr_code": {\n        "step1": {\n          "title": "Open the SafePal Wallet app",\n          "description": "Put SafePal Wallet on your home screen for faster access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Create a new wallet or import an existing one."\n        },\n        "step3": {\n          "title": "Tap WalletConnect in Settings",\n          "description": "Choose New Connection, then scan the QR code and confirm the prompt to connect."\n        }\n      }\n    },\n\n    "desig": {\n      "extension": {\n        "step1": {\n          "title": "Install the Desig extension",\n          "description": "We recommend pinning Desig to your taskbar for easier access to your wallet."\n        },\n        "step2": {\n          "title": "Create a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension."\n        }\n      }\n    },\n\n    "subwallet": {\n      "extension": {\n        "step1": {\n          "title": "Install the SubWallet extension",\n          "description": "We recommend pinning SubWallet to your taskbar for quicker access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your recovery phrase with anyone."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension."\n        }\n      },\n      "qr_code": {\n        "step1": {\n          "title": "Open the SubWallet app",\n          "description": "We recommend putting SubWallet on your home screen for quicker access."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Tap the scan button",\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet."\n        }\n      }\n    },\n\n    "clv": {\n      "extension": {\n        "step1": {\n          "title": "Install the CLV Wallet extension",\n          "description": "We recommend pinning CLV Wallet to your taskbar for quicker access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension."\n        }\n      },\n      "qr_code": {\n        "step1": {\n          "title": "Open the CLV Wallet app",\n          "description": "We recommend putting CLV Wallet on your home screen for quicker access."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Tap the scan button",\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet."\n        }\n      }\n    },\n\n    "okto": {\n      "qr_code": {\n        "step1": {\n          "title": "Open the Okto app",\n          "description": "Add Okto to your home screen for quick access"\n        },\n        "step2": {\n          "title": "Create an MPC Wallet",\n          "description": "Create an account and generate a wallet"\n        },\n        "step3": {\n          "title": "Tap WalletConnect in Settings",\n          "description": "Tap the Scan QR icon at the top right and confirm the prompt to connect."\n        }\n      }\n    },\n\n    "ledger": {\n      "desktop": {\n        "step1": {\n          "title": "Open the Ledger Live app",\n          "description": "We recommend putting Ledger Live on your home screen for quicker access."\n        },\n        "step2": {\n          "title": "Set up your Ledger",\n          "description": "Set up a new Ledger or connect to an existing one."\n        },\n        "step3": {\n          "title": "Connect",\n          "description": "A connection prompt will appear for you to connect your wallet."\n        }\n      },\n      "qr_code": {\n        "step1": {\n          "title": "Open the Ledger Live app",\n          "description": "We recommend putting Ledger Live on your home screen for quicker access."\n        },\n        "step2": {\n          "title": "Set up your Ledger",\n          "description": "You can either sync with the desktop app or connect your Ledger."\n        },\n        "step3": {\n          "title": "Scan the code",\n          "description": "Tap WalletConnect then Switch to Scanner. After you scan, a connection prompt will appear for you to connect your wallet."\n        }\n      }\n    }\n  }\n}\n'
        },
        67148: function(t, e, r) {
            "use strict";
            r.d(e, {
                W: function() {
                    return l
                }
            });
            var n = '-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',
                i = {
                    rounded: 'SFRounded, ui-rounded, "SF Pro Rounded", '.concat(n),
                    system: n
                },
                o = {
                    large: {
                        actionButton: "9999px",
                        connectButton: "12px",
                        modal: "24px",
                        modalMobile: "28px"
                    },
                    medium: {
                        actionButton: "10px",
                        connectButton: "8px",
                        modal: "16px",
                        modalMobile: "18px"
                    },
                    none: {
                        actionButton: "0px",
                        connectButton: "0px",
                        modal: "0px",
                        modalMobile: "0px"
                    },
                    small: {
                        actionButton: "4px",
                        connectButton: "4px",
                        modal: "8px",
                        modalMobile: "8px"
                    }
                },
                s = {
                    large: {
                        modalOverlay: "blur(20px)"
                    },
                    none: {
                        modalOverlay: "blur(0px)"
                    },
                    small: {
                        modalOverlay: "blur(4px)"
                    }
                },
                a = t => {
                    let {
                        borderRadius: e = "large",
                        fontStack: r = "rounded",
                        overlayBlur: n = "none"
                    } = t;
                    return {
                        blurs: {
                            modalOverlay: s[n].modalOverlay
                        },
                        fonts: {
                            body: i[r]
                        },
                        radii: {
                            actionButton: o[e].actionButton,
                            connectButton: o[e].connectButton,
                            menuButton: o[e].connectButton,
                            modal: o[e].modal,
                            modalMobile: o[e].modalMobile
                        }
                    }
                },
                u = {
                    blue: {
                        accentColor: "#0E76FD",
                        accentColorForeground: "#FFF"
                    },
                    green: {
                        accentColor: "#1DB847",
                        accentColorForeground: "#FFF"
                    },
                    orange: {
                        accentColor: "#FF801F",
                        accentColorForeground: "#FFF"
                    },
                    pink: {
                        accentColor: "#FF5CA0",
                        accentColorForeground: "#FFF"
                    },
                    purple: {
                        accentColor: "#5F5AFA",
                        accentColorForeground: "#FFF"
                    },
                    red: {
                        accentColor: "#FA423C",
                        accentColorForeground: "#FFF"
                    }
                },
                c = u.blue,
                l = function() {
                    let {
                        accentColor: t = c.accentColor,
                        accentColorForeground: e = c.accentColorForeground,
                        ...r
                    } = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                    return { ...a(r),
                        colors: {
                            accentColor: t,
                            accentColorForeground: e,
                            actionButtonBorder: "rgba(0, 0, 0, 0.04)",
                            actionButtonBorderMobile: "rgba(0, 0, 0, 0.06)",
                            actionButtonSecondaryBackground: "rgba(0, 0, 0, 0.06)",
                            closeButton: "rgba(60, 66, 66, 0.8)",
                            closeButtonBackground: "rgba(0, 0, 0, 0.06)",
                            connectButtonBackground: "#FFF",
                            connectButtonBackgroundError: "#FF494A",
                            connectButtonInnerBackground: "linear-gradient(0deg, rgba(0, 0, 0, 0.03), rgba(0, 0, 0, 0.06))",
                            connectButtonText: "#25292E",
                            connectButtonTextError: "#FFF",
                            connectionIndicator: "#30E000",
                            downloadBottomCardBackground: "linear-gradient(126deg, rgba(255, 255, 255, 0) 9.49%, rgba(171, 171, 171, 0.04) 71.04%), #FFFFFF",
                            downloadTopCardBackground: "linear-gradient(126deg, rgba(171, 171, 171, 0.2) 9.49%, rgba(255, 255, 255, 0) 71.04%), #FFFFFF",
                            error: "#FF494A",
                            generalBorder: "rgba(0, 0, 0, 0.06)",
                            generalBorderDim: "rgba(0, 0, 0, 0.03)",
                            menuItemBackground: "rgba(60, 66, 66, 0.1)",
                            modalBackdrop: "rgba(0, 0, 0, 0.3)",
                            modalBackground: "#FFF",
                            modalBorder: "transparent",
                            modalText: "#25292E",
                            modalTextDim: "rgba(60, 66, 66, 0.3)",
                            modalTextSecondary: "rgba(60, 66, 66, 0.6)",
                            profileAction: "#FFF",
                            profileActionHover: "rgba(255, 255, 255, 0.5)",
                            profileForeground: "rgba(60, 66, 66, 0.06)",
                            selectedOptionBorder: "rgba(60, 66, 66, 0.1)",
                            standby: "#FFD641"
                        },
                        shadows: {
                            connectButton: "0px 4px 12px rgba(0, 0, 0, 0.1)",
                            dialog: "0px 8px 32px rgba(0, 0, 0, 0.32)",
                            profileDetailsAction: "0px 2px 6px rgba(37, 41, 46, 0.04)",
                            selectedOption: "0px 2px 6px rgba(0, 0, 0, 0.24)",
                            selectedWallet: "0px 2px 6px rgba(0, 0, 0, 0.12)",
                            walletLogo: "0px 2px 16px rgba(0, 0, 0, 0.16)"
                        }
                    }
                };
            l.accentColors = u
        },
        96450: function(t, e, r) {
            "use strict";
            r.d(e, {
                d: function() {
                    return w
                },
                J: function() {
                    return m
                }
            });
            var n, i, o, s = r(96095),
                a = r(21960),
                u = r(20760),
                c = r(31669),
                l = r(77014),
                h = r(75073),
                f = r(93715),
                d = r(59455),
                p = /(imtoken|metamask|rainbow|trust wallet|uniswap wallet|ledger)/i,
                y = class extends u.wR {
                    constructor() {
                        super(...arguments), (0, u.Ko)(this, i), this.id = "walletConnectLegacy", this.name = "WalletConnectLegacy", this.ready = !0, (0, u.Ko)(this, n, void 0), this.onAccountsChanged = t => {
                            0 === t.length ? this.emit("disconnect") : this.emit("change", {
                                account: (0, c.K)(t[0])
                            })
                        }, this.onChainChanged = t => {
                            let e = (0, a.J)(t),
                                r = this.isChainUnsupported(e);
                            this.emit("change", {
                                chain: {
                                    id: e,
                                    unsupported: r
                                }
                            })
                        }, this.onDisconnect = () => {
                            this.emit("disconnect")
                        }
                    }
                    async connect({
                        chainId: t
                    } = {}) {
                        try {
                            let e = t;
                            if (!e) {
                                let t = this.storage ? .getItem("store"),
                                    r = t ? .state ? .data ? .chain ? .id;
                                r && !this.isChainUnsupported(r) && (e = r)
                            }
                            let r = await this.getProvider({
                                chainId: e,
                                create: !0
                            });
                            r.on("accountsChanged", this.onAccountsChanged), r.on("chainChanged", this.onChainChanged), r.on("disconnect", this.onDisconnect), setTimeout(() => this.emit("message", {
                                type: "connecting"
                            }), 0);
                            let n = await r.enable(),
                                s = (0, c.K)(n[0]),
                                a = await this.getChainId(),
                                l = this.isChainUnsupported(a),
                                h = r.connector ? .peerMeta ? .name ? ? "";
                            return p.test(h) && (this.switchChain = (0, u.U9)(this, i, o)), {
                                account: s,
                                chain: {
                                    id: a,
                                    unsupported: l
                                }
                            }
                        } catch (t) {
                            if (/user closed modal/i.test(t.message)) throw new l.ab(t);
                            throw t
                        }
                    }
                    async disconnect() {
                        let t = await this.getProvider();
                        await t.disconnect(), t.removeListener("accountsChanged", this.onAccountsChanged), t.removeListener("chainChanged", this.onChainChanged), t.removeListener("disconnect", this.onDisconnect), "undefined" != typeof localStorage && localStorage.removeItem("walletconnect")
                    }
                    async getAccount() {
                        let t = (await this.getProvider()).accounts;
                        return (0, c.K)(t[0])
                    }
                    async getChainId() {
                        let t = await this.getProvider();
                        return (0, a.J)(t.chainId)
                    }
                    async getProvider({
                        chainId: t,
                        create: e
                    } = {}) {
                        if (!(0, u.ac)(this, n) || t || e) {
                            let e = this.options ? .infuraId ? {} : this.chains.reduce((t, e) => ({ ...t,
                                    [e.id]: e.rpcUrls.default.http[0]
                                }), {}),
                                i = (await Promise.all([r.e(730), r.e(9135)]).then(r.bind(r, 99135))).default;
                            (0, u.qx)(this, n, new i({ ...this.options,
                                chainId: t,
                                rpc: { ...e,
                                    ...this.options ? .rpc
                                }
                            })), (0, u.ac)(this, n).http = await (0, u.ac)(this, n).setHttpProvider(t)
                        }
                        return (0, u.ac)(this, n)
                    }
                    async getWalletClient({
                        chainId: t
                    } = {}) {
                        let [e, r] = await Promise.all([this.getProvider({
                            chainId: t
                        }), this.getAccount()]), n = this.chains.find(e => e.id === t);
                        if (!e) throw Error("provider is required.");
                        return (0, h.K)({
                            account: r,
                            chain: n,
                            transport: (0, f.P)(e)
                        })
                    }
                    async isAuthorized() {
                        try {
                            return !!await this.getAccount()
                        } catch {
                            return !1
                        }
                    }
                };
            async function m(t, e) {
                let r = await t.getProvider();
                return "2" === e ? new Promise(t => r.once("display_uri", t)) : r.connector.uri
            }
            n = new WeakMap, i = new WeakSet, o = async function(t) {
                let e = await this.getProvider(),
                    r = (0, d.eC)(t);
                try {
                    return await Promise.race([e.request({
                        method: "wallet_switchEthereumChain",
                        params: [{
                            chainId: r
                        }]
                    }), new Promise(e => this.on("change", ({
                        chain: r
                    }) => {
                        r ? .id === t && e(t)
                    }))]), this.chains.find(e => e.id === t) ? ? {
                        id: t,
                        name: `Chain ${r}`,
                        network: `${r}`,
                        nativeCurrency: {
                            name: "Ether",
                            decimals: 18,
                            symbol: "ETH"
                        },
                        rpcUrls: {
                            default: {
                                http: [""]
                            },
                            public: {
                                http: [""]
                            }
                        }
                    }
                } catch (e) {
                    let t = "string" == typeof e ? e : e ? .message;
                    if (/user rejected request/i.test(t)) throw new l.ab(e);
                    throw new l.x3(e)
                }
            };
            var b = new Map;

            function g(t, e) {
                let r = "1" === t ? new y(e) : new s.z(e);
                return b.set(JSON.stringify(e), r), r
            }

            function w(t) {
                let {
                    chains: e,
                    options: r = {},
                    projectId: n,
                    version: i = "2"
                } = t, o = "21fef48091f12692cad574a6f7753643";
                if ("2" === i) {
                    if (!n || "" === n) throw Error("No projectId found. Every dApp must now provide a WalletConnect Cloud projectId to enable WalletConnect v2 https://www.rainbowkit.com/docs/installation#configure");
                    ("YOUR_PROJECT_ID" === n || n === o) && console.warn("Invalid projectId. Please create a unique WalletConnect Cloud projectId for your dApp https://www.rainbowkit.com/docs/installation#configure")
                }
                let s = {
                        chains: e,
                        options: "1" === i ? {
                            qrcode: !1,
                            ...r
                        } : {
                            projectId: "YOUR_PROJECT_ID" === n ? o : n,
                            showQrModal: !1,
                            ...r
                        }
                    },
                    a = JSON.stringify(s),
                    u = b.get(a);
                return null != u ? u : g(i, s)
            }
        },
        50388: function(t, e, r) {
            "use strict";
            r.d(e, {
                U: function() {
                    return i
                }
            });
            var n = r(76160),
                i = t => {
                    let {
                        chains: e,
                        ...i
                    } = t;
                    return {
                        id: "injected",
                        name: "Browser Wallet",
                        iconUrl: async () => (await r.e(6670).then(r.bind(r, 96670))).default,
                        iconBackground: "#fff",
                        hidden: t => {
                            let {
                                wallets: e
                            } = t;
                            return e.some(t => t.installed && t.name === t.connector.name && (t.connector instanceof n._ || "coinbase" === t.id))
                        },
                        createConnector: () => ({
                            connector: new n._({
                                chains: e,
                                options: i
                            })
                        })
                    }
                }
        },
        58473: function(t, e, r) {
            "use strict";
            r.d(e, {
                D: function() {
                    return o
                }
            });
            var n = r(49341),
                i = r(96450),
                o = t => {
                    let {
                        chains: e,
                        options: o,
                        projectId: s,
                        version: a = "2"
                    } = t;
                    return {
                        id: "walletConnect",
                        name: "WalletConnect",
                        iconUrl: async () => (await r.e(4277).then(r.bind(r, 4277))).default,
                        iconBackground: "#3b99fc",
                        createConnector: () => {
                            let t = (0, n.gn)(),
                                r = "1" === a ? (0, i.d)({
                                    version: "1",
                                    chains: e,
                                    options: {
                                        qrcode: t,
                                        ...o
                                    }
                                }) : (0, i.d)({
                                    version: "2",
                                    chains: e,
                                    projectId: s,
                                    options: {
                                        showQrModal: t,
                                        ...o
                                    }
                                }),
                                u = async () => (0, i.J)(r, a);
                            return {
                                connector: r,
                                ...t ? {} : {
                                    mobile: {
                                        getUri: u
                                    },
                                    qrCode: {
                                        getUri: u
                                    }
                                }
                            }
                        }
                    }
                }
        },
        55550: function(t, e, r) {
            "use strict";
            r.d(e, {
                p: function() {
                    return s
                }
            });
            var n = r(48047),
                i = r(49341),
                o = r(96450),
                s = t => {
                    let {
                        chains: e,
                        projectId: s,
                        walletConnectOptions: a,
                        walletConnectVersion: u = "2",
                        ...c
                    } = t, l = (0, i.tq)() ? (0, n.B)("isTrust") : (0, n.B)("isTrustWallet"), h = !l;
                    return {
                        id: "trust",
                        name: "Trust Wallet",
                        iconUrl: async () => (await r.e(4744).then(r.bind(r, 94744))).default,
                        installed: l || void 0,
                        iconAccent: "#3375BB",
                        iconBackground: "#fff",
                        downloadUrls: {
                            android: "https://play.google.com/store/apps/details?id=com.wallet.crypto.trustapp",
                            ios: "https://apps.apple.com/us/app/trust-crypto-bitcoin-wallet/id1288339409",
                            mobile: "https://trustwallet.com/download",
                            qrCode: "https://trustwallet.com/download",
                            chrome: "https://chrome.google.com/webstore/detail/trust-wallet/egjidjbpglichdcondbcbdnbeeppgdph",
                            browserExtension: "https://trustwallet.com/browser-extension"
                        },
                        createConnector: () => {
                            let t;
                            let r = async () => {
                                    let t = await (0, o.J)(f, u);
                                    return "trust://wc?uri=".concat(encodeURIComponent(t))
                                },
                                l = async () => await (0, o.J)(f, u),
                                f = h ? (0, o.d)({
                                    projectId: s,
                                    chains: e,
                                    version: u,
                                    options: a
                                }) : (0, i.tq)() ? (0, n.K)({
                                    flag: "isTrust",
                                    chains: e,
                                    options: c
                                }) : (0, n.K)({
                                    flag: "isTrustWallet",
                                    chains: e,
                                    options: c
                                }),
                                d = {
                                    getUri: h ? r : void 0
                                };
                            return h && (t = {
                                getUri: l,
                                instructions: {
                                    learnMoreUrl: "https://trustwallet.com/",
                                    steps: [{
                                        description: "wallet_connectors.trust.qr_code.step1.description",
                                        step: "install",
                                        title: "wallet_connectors.trust.qr_code.step1.title"
                                    }, {
                                        description: "wallet_connectors.trust.qr_code.step2.description",
                                        step: "create",
                                        title: "wallet_connectors.trust.qr_code.step2.title"
                                    }, {
                                        description: "wallet_connectors.trust.qr_code.step3.description",
                                        step: "scan",
                                        title: "wallet_connectors.trust.qr_code.step3.title"
                                    }]
                                }
                            }), {
                                connector: f,
                                mobile: d,
                                qrCode: t,
                                extension: {
                                    instructions: {
                                        learnMoreUrl: "https://trustwallet.com/browser-extension",
                                        steps: [{
                                            description: "wallet_connectors.trust.extension.step1.description",
                                            step: "install",
                                            title: "wallet_connectors.trust.extension.step1.title"
                                        }, {
                                            description: "wallet_connectors.trust.extension.step2.description",
                                            step: "create",
                                            title: "wallet_connectors.trust.extension.step2.title"
                                        }, {
                                            description: "wallet_connectors.trust.extension.step3.description",
                                            step: "refresh",
                                            title: "wallet_connectors.trust.extension.step3.title"
                                        }]
                                    }
                                }
                            }
                        }
                    }
                }
        },
        48047: function(t, e, r) {
            "use strict";
            r.d(e, {
                B: function() {
                    return o
                },
                K: function() {
                    return a
                }
            });
            var n = r(76160);

            function i(t) {
                if ("undefined" == typeof window || void 0 === window.ethereum) return;
                let e = window.ethereum.providers;
                return e ? e.find(e => e[t]) : window.ethereum[t] ? window.ethereum : void 0
            }

            function o(t) {
                return !!i(t)
            }

            function s(t) {
                if ("undefined" == typeof window || void 0 === window.ethereum) return;
                let e = window.ethereum.providers;
                return i(t) || (void 0 !== e && e.length > 0 ? e[0] : window.ethereum)
            }

            function a(t) {
                let {
                    chains: e,
                    flag: r,
                    options: i
                } = t;
                return new n._({
                    chains: e,
                    options: {
                        getProvider: () => s(r),
                        ...i
                    }
                })
            }
        },
        40760: function(t, e, r) {
            "use strict";
            r.d(e, {
                D: function() {
                    return m
                }
            });
            var n, i, o = r(48047),
                s = r(49341),
                a = r(77233),
                u = r(21960),
                c = r(20760),
                l = r(31669),
                h = r(77014),
                f = r(75073),
                d = r(93715),
                p = r(59455),
                y = class extends c.wR {
                    constructor({
                        chains: t,
                        options: e
                    }) {
                        super({
                            chains: t,
                            options: {
                                reloadOnDisconnect: !1,
                                ...e
                            }
                        }), this.id = "coinbaseWallet", this.name = "Coinbase Wallet", this.ready = !0, (0, c.Ko)(this, n, void 0), (0, c.Ko)(this, i, void 0), this.onAccountsChanged = t => {
                            0 === t.length ? this.emit("disconnect") : this.emit("change", {
                                account: (0, l.K)(t[0])
                            })
                        }, this.onChainChanged = t => {
                            let e = (0, u.J)(t),
                                r = this.isChainUnsupported(e);
                            this.emit("change", {
                                chain: {
                                    id: e,
                                    unsupported: r
                                }
                            })
                        }, this.onDisconnect = () => {
                            this.emit("disconnect")
                        }
                    }
                    async connect({
                        chainId: t
                    } = {}) {
                        try {
                            let e = await this.getProvider();
                            e.on("accountsChanged", this.onAccountsChanged), e.on("chainChanged", this.onChainChanged), e.on("disconnect", this.onDisconnect), this.emit("message", {
                                type: "connecting"
                            });
                            let r = await e.enable(),
                                n = (0, l.K)(r[0]),
                                i = await this.getChainId(),
                                o = this.isChainUnsupported(i);
                            return t && i !== t && (i = (await this.switchChain(t)).id, o = this.isChainUnsupported(i)), {
                                account: n,
                                chain: {
                                    id: i,
                                    unsupported: o
                                }
                            }
                        } catch (t) {
                            if (/(user closed modal|accounts received is empty)/i.test(t.message)) throw new h.ab(t);
                            throw t
                        }
                    }
                    async disconnect() {
                        if (!(0, c.ac)(this, i)) return;
                        let t = await this.getProvider();
                        t.removeListener("accountsChanged", this.onAccountsChanged), t.removeListener("chainChanged", this.onChainChanged), t.removeListener("disconnect", this.onDisconnect), t.disconnect(), t.close()
                    }
                    async getAccount() {
                        let t = await this.getProvider(),
                            e = await t.request({
                                method: "eth_accounts"
                            });
                        return (0, l.K)(e[0])
                    }
                    async getChainId() {
                        let t = await this.getProvider();
                        return (0, u.J)(t.chainId)
                    }
                    async getProvider() {
                        if (!(0, c.ac)(this, i)) {
                            let t = (await Promise.all([r.e(6450), r.e(264), r.e(6942)]).then(r.t.bind(r, 50264, 19))).default;
                            "function" != typeof t && "function" == typeof t.default && (t = t.default), (0, c.qx)(this, n, new t(this.options));
                            let e = c.ac(this, n).walletExtension ? .getChainId(),
                                o = this.chains.find(t => this.options.chainId ? t.id === this.options.chainId : t.id === e) || this.chains[0],
                                s = this.options.chainId || o ? .id,
                                a = this.options.jsonRpcUrl || o ? .rpcUrls.default.http[0];
                            (0, c.qx)(this, i, (0, c.ac)(this, n).makeWeb3Provider(a, s))
                        }
                        return (0, c.ac)(this, i)
                    }
                    async getWalletClient({
                        chainId: t
                    } = {}) {
                        let [e, r] = await Promise.all([this.getProvider(), this.getAccount()]), n = this.chains.find(e => e.id === t);
                        if (!e) throw Error("provider is required.");
                        return (0, f.K)({
                            account: r,
                            chain: n,
                            transport: (0, d.P)(e)
                        })
                    }
                    async isAuthorized() {
                        try {
                            return !!await this.getAccount()
                        } catch {
                            return !1
                        }
                    }
                    async switchChain(t) {
                        let e = await this.getProvider(),
                            r = (0, p.eC)(t);
                        try {
                            return await e.request({
                                method: "wallet_switchEthereumChain",
                                params: [{
                                    chainId: r
                                }]
                            }), this.chains.find(e => e.id === t) ? ? {
                                id: t,
                                name: `Chain ${r}`,
                                network: `${r}`,
                                nativeCurrency: {
                                    name: "Ether",
                                    decimals: 18,
                                    symbol: "ETH"
                                },
                                rpcUrls: {
                                    default: {
                                        http: [""]
                                    },
                                    public: {
                                        http: [""]
                                    }
                                }
                            }
                        } catch (i) {
                            let n = this.chains.find(e => e.id === t);
                            if (!n) throw new a.B({
                                chainId: t,
                                connectorId: this.id
                            });
                            if (4902 === i.code) try {
                                return await e.request({
                                    method: "wallet_addEthereumChain",
                                    params: [{
                                        chainId: r,
                                        chainName: n.name,
                                        nativeCurrency: n.nativeCurrency,
                                        rpcUrls: [n.rpcUrls.public ? .http[0] ? ? ""],
                                        blockExplorerUrls: this.getBlockExplorerUrls(n)
                                    }]
                                }), n
                            } catch (t) {
                                throw new h.ab(t)
                            }
                            throw new h.x3(i)
                        }
                    }
                    async watchAsset({
                        address: t,
                        decimals: e = 18,
                        image: r,
                        symbol: n
                    }) {
                        return (await this.getProvider()).request({
                            method: "wallet_watchAsset",
                            params: {
                                type: "ERC20",
                                options: {
                                    address: t,
                                    decimals: e,
                                    image: r,
                                    symbol: n
                                }
                            }
                        })
                    }
                };
            n = new WeakMap, i = new WeakMap;
            var m = t => {
                let {
                    appName: e,
                    chains: n,
                    ...i
                } = t;
                return {
                    id: "coinbase",
                    name: "Coinbase Wallet",
                    shortName: "Coinbase",
                    iconUrl: async () => (await r.e(2574).then(r.bind(r, 32574))).default,
                    iconAccent: "#2c5ff6",
                    iconBackground: "#2c5ff6",
                    installed: (0, o.B)("isCoinbaseWallet") || void 0,
                    downloadUrls: {
                        android: "https://play.google.com/store/apps/details?id=org.toshi",
                        ios: "https://apps.apple.com/us/app/coinbase-wallet-store-crypto/id1278383455",
                        mobile: "https://coinbase.com/wallet/downloads",
                        qrCode: "https://coinbase-wallet.onelink.me/q5Sx/fdb9b250",
                        chrome: "https://chrome.google.com/webstore/detail/coinbase-wallet-extension/hnfanknocfeofbddgcijnmhnfnkdnaad",
                        browserExtension: "https://coinbase.com/wallet"
                    },
                    createConnector: () => {
                        let t = (0, s.gn)(),
                            r = new y({
                                chains: n,
                                options: {
                                    appName: e,
                                    headlessMode: !0,
                                    ...i
                                }
                            }),
                            o = async () => (await r.getProvider()).qrUrl;
                        return {
                            connector: r,
                            ...t ? {} : {
                                qrCode: {
                                    getUri: o,
                                    instructions: {
                                        learnMoreUrl: "https://coinbase.com/wallet/articles/getting-started-mobile",
                                        steps: [{
                                            description: "wallet_connectors.coinbase.qr_code.step1.description",
                                            step: "install",
                                            title: "wallet_connectors.coinbase.qr_code.step1.title"
                                        }, {
                                            description: "wallet_connectors.coinbase.qr_code.step2.description",
                                            step: "create",
                                            title: "wallet_connectors.coinbase.qr_code.step2.title"
                                        }, {
                                            description: "wallet_connectors.coinbase.qr_code.step3.description",
                                            step: "scan",
                                            title: "wallet_connectors.coinbase.qr_code.step3.title"
                                        }]
                                    }
                                },
                                extension: {
                                    instructions: {
                                        learnMoreUrl: "https://coinbase.com/wallet/articles/getting-started-extension",
                                        steps: [{
                                            description: "wallet_connectors.coinbase.extension.step1.description",
                                            step: "install",
                                            title: "wallet_connectors.coinbase.extension.step1.title"
                                        }, {
                                            description: "wallet_connectors.coinbase.extension.step2.description",
                                            step: "create",
                                            title: "wallet_connectors.coinbase.extension.step2.title"
                                        }, {
                                            description: "wallet_connectors.coinbase.extension.step3.description",
                                            step: "refresh",
                                            title: "wallet_connectors.coinbase.extension.step3.title"
                                        }]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        53276: function(t, e, r) {
            "use strict";
            r.d(e, {
                P: function() {
                    return d
                }
            });
            var n, i = r(49341),
                o = r(96450),
                s = r(76160),
                a = r(77233),
                u = r(20760),
                c = r(77014),
                l = r(31669),
                h = class extends s._ {
                    constructor({
                        chains: t,
                        options: e
                    } = {}) {
                        let r = {
                            name: "MetaMask",
                            shimDisconnect: !0,
                            getProvider() {
                                function t(t) {
                                    if (t ? .isMetaMask && (!t.isBraveWallet || t._events || t._state) && !t.isApexWallet && !t.isAvalanche && !t.isBitKeep && !t.isBlockWallet && !t.isCoin98 && !t.isFordefi && !t.isMathWallet && !t.isOkxWallet && !t.isOKExWallet && !t.isOneInchIOSWallet && !t.isOneInchAndroidWallet && !t.isOpera && !t.isPortal && !t.isRabby && !t.isDefiant && !t.isTokenPocket && !t.isTokenary && !t.isZeal && !t.isZerion) return t
                                }
                                if ("undefined" == typeof window) return;
                                let e = window.ethereum;
                                return e ? .providers ? e.providers.find(t) : t(e)
                            },
                            ...e
                        };
                        super({
                            chains: t,
                            options: r
                        }), this.id = "metaMask", this.shimDisconnectKey = `${this.id}.shimDisconnect`, (0, u.Ko)(this, n, void 0), (0, u.qx)(this, n, r.UNSTABLE_shimOnConnectSelectAccount)
                    }
                    async connect({
                        chainId: t
                    } = {}) {
                        try {
                            let e = await this.getProvider();
                            if (!e) throw new a.N;
                            e.on && (e.on("accountsChanged", this.onAccountsChanged), e.on("chainChanged", this.onChainChanged), e.on("disconnect", this.onDisconnect)), this.emit("message", {
                                type: "connecting"
                            });
                            let r = null;
                            if ((0, u.ac)(this, n) && this.options ? .shimDisconnect && !this.storage ? .getItem(this.shimDisconnectKey) && (r = await this.getAccount().catch(() => null))) try {
                                await e.request({
                                    method: "wallet_requestPermissions",
                                    params: [{
                                        eth_accounts: {}
                                    }]
                                }), r = await this.getAccount()
                            } catch (t) {
                                if (this.isUserRejectedRequestError(t)) throw new c.ab(t);
                                if (t.code === new c.pT(t).code) throw t
                            }
                            if (!r) {
                                let t = await e.request({
                                    method: "eth_requestAccounts"
                                });
                                r = (0, l.K)(t[0])
                            }
                            let i = await this.getChainId(),
                                o = this.isChainUnsupported(i);
                            return t && i !== t && (i = (await this.switchChain(t)).id, o = this.isChainUnsupported(i)), this.options ? .shimDisconnect && this.storage ? .setItem(this.shimDisconnectKey, !0), {
                                account: r,
                                chain: {
                                    id: i,
                                    unsupported: o
                                },
                                provider: e
                            }
                        } catch (t) {
                            if (this.isUserRejectedRequestError(t)) throw new c.ab(t);
                            if (-32002 === t.code) throw new c.pT(t);
                            throw t
                        }
                    }
                };

            function f(t) {
                return !!(null == t ? void 0 : t.isMetaMask) && (!t.isBraveWallet || !!t._events || !!t._state) && !t.isApexWallet && !t.isAvalanche && !t.isBackpack && !t.isBifrost && !t.isBitKeep && !t.isBitski && !t.isBlockWallet && !t.isCoinbaseWallet && !t.isDawn && !t.isEnkrypt && !t.isExodus && !t.isFrame && !t.isFrontier && !t.isGamestop && !t.isHyperPay && !t.isImToken && !t.isKuCoinWallet && !t.isMathWallet && !t.isOkxWallet && !t.isOKExWallet && !t.isOneInchIOSWallet && !t.isOneInchAndroidWallet && !t.isOpera && !t.isPhantom && !t.isPortal && !t.isRabby && !t.isRainbow && !t.isStatus && !t.isTalisman && !t.isTally && !t.isTokenPocket && !t.isTokenary && !t.isTrust && !t.isTrustWallet && !t.isXDEFI && !t.isZeal && !t.isZerion
            }
            n = new WeakMap;
            var d = t => {
                var e, n;
                let {
                    chains: s,
                    projectId: a,
                    walletConnectOptions: u,
                    walletConnectVersion: c = "2",
                    ...l
                } = t, d = "undefined" != typeof window && (null == (e = window.ethereum) ? void 0 : e.providers), p = "undefined" != typeof window && void 0 !== window.ethereum && ((null == (n = window.ethereum.providers) ? void 0 : n.some(f)) || window.ethereum.isMetaMask), y = !p;
                return {
                    id: "metaMask",
                    name: "MetaMask",
                    iconUrl: async () => (await r.e(6856).then(r.bind(r, 36856))).default,
                    iconAccent: "#f6851a",
                    iconBackground: "#fff",
                    installed: y ? void 0 : p,
                    downloadUrls: {
                        android: "https://play.google.com/store/apps/details?id=io.metamask",
                        ios: "https://apps.apple.com/us/app/metamask/id1438144202",
                        mobile: "https://metamask.io/download",
                        qrCode: "https://metamask.io/download",
                        chrome: "https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn",
                        edge: "https://microsoftedge.microsoft.com/addons/detail/metamask/ejbalbakoplchlghecdalmeeeajnimhm",
                        firefox: "https://addons.mozilla.org/firefox/addon/ether-metamask",
                        opera: "https://addons.opera.com/extensions/details/metamask-10",
                        browserExtension: "https://metamask.io/download"
                    },
                    createConnector: () => {
                        let t = y ? (0, o.d)({
                                projectId: a,
                                chains: s,
                                version: c,
                                options: u
                            }) : new h({
                                chains: s,
                                options: {
                                    getProvider: () => Array.isArray(d) && d.find(f) || ("undefined" != typeof window ? window.ethereum : void 0),
                                    ...l
                                }
                            }),
                            e = async () => {
                                let e = await (0, o.J)(t, c);
                                return (0, i.Dt)() ? e : (0, i.gn)() ? "metamask://wc?uri=".concat(encodeURIComponent(e)) : "https://metamask.app.link/wc?uri=".concat(encodeURIComponent(e))
                            };
                        return {
                            connector: t,
                            mobile: {
                                getUri: y ? e : void 0
                            },
                            qrCode: y ? {
                                getUri: e,
                                instructions: {
                                    learnMoreUrl: "https://metamask.io/faqs/",
                                    steps: [{
                                        description: "wallet_connectors.metamask.qr_code.step1.description",
                                        step: "install",
                                        title: "wallet_connectors.metamask.qr_code.step1.title"
                                    }, {
                                        description: "wallet_connectors.metamask.qr_code.step2.description",
                                        step: "create",
                                        title: "wallet_connectors.metamask.qr_code.step2.title"
                                    }, {
                                        description: "wallet_connectors.metamask.qr_code.step3.description",
                                        step: "refresh",
                                        title: "wallet_connectors.metamask.qr_code.step3.title"
                                    }]
                                }
                            } : void 0,
                            extension: {
                                instructions: {
                                    learnMoreUrl: "https://metamask.io/faqs/",
                                    steps: [{
                                        description: "wallet_connectors.metamask.extension.step1.description",
                                        step: "install",
                                        title: "wallet_connectors.metamask.extension.step1.title"
                                    }, {
                                        description: "wallet_connectors.metamask.extension.step2.description",
                                        step: "create",
                                        title: "wallet_connectors.metamask.extension.step2.title"
                                    }, {
                                        description: "wallet_connectors.metamask.extension.step3.description",
                                        step: "refresh",
                                        title: "wallet_connectors.metamask.extension.step3.title"
                                    }]
                                }
                            }
                        }
                    }
                }
            }
        },
        49341: function(t, e, r) {
            "use strict";

            function n() {
                return "undefined" != typeof navigator && /android/i.test(navigator.userAgent)
            }

            function i() {
                return "undefined" != typeof navigator && /iPhone|iPod/.test(navigator.userAgent)
            }

            function o() {
                return "undefined" != typeof navigator && (/iPad/.test(navigator.userAgent) || "MacIntel" === navigator.platform && navigator.maxTouchPoints > 1)
            }

            function s() {
                return i() || o()
            }

            function a() {
                return n() || s()
            }
            r.d(e, {
                Dt: function() {
                    return n
                },
                gn: function() {
                    return s
                },
                tq: function() {
                    return a
                }
            })
        },
        72941: function(t, e, r) {
            "use strict";
            r.d(e, {
                g: function() {
                    return s
                },
                h: function() {
                    return a
                }
            });
            var n = r(2265);
            let i = {
                setVisible(t) {
                    console.error(o("call", "setVisible"))
                },
                visible: !1
            };

            function o(t, e) {
                return `You have tried to  ${t} "${e}" on a WalletModalContext without providing one. Make sure to render a WalletModalProvider as an ancestor of the component that uses WalletModalContext`
            }
            Object.defineProperty(i, "visible", {
                get: () => (console.error(o("read", "visible")), !1)
            });
            let s = (0, n.createContext)(i);

            function a() {
                return (0, n.useContext)(s)
            }
        },
        13816: function(t, e, r) {
            "use strict";
            r.d(e, {
                R: function() {
                    return o
                },
                h: function() {
                    return i
                }
            });
            var n = r(2265);
            let i = (0, n.createContext)({});

            function o() {
                return (0, n.useContext)(i)
            }
        },
        15408: function(t, e, r) {
            "use strict";
            r.d(e, {
                O: function() {
                    return u
                },
                z: function() {
                    return a
                }
            });
            var n = r(2265);
            let i = [],
                o = {
                    autoConnect: !1,
                    connecting: !1,
                    connected: !1,
                    disconnecting: !1,
                    select() {
                        s("call", "select")
                    },
                    connect: () => Promise.reject(s("call", "connect")),
                    disconnect: () => Promise.reject(s("call", "disconnect")),
                    sendTransaction: () => Promise.reject(s("call", "sendTransaction")),
                    signTransaction: () => Promise.reject(s("call", "signTransaction")),
                    signAllTransactions: () => Promise.reject(s("call", "signAllTransactions")),
                    signMessage: () => Promise.reject(s("call", "signMessage")),
                    signIn: () => Promise.reject(s("call", "signIn"))
                };

            function s(t, e) {
                let r = Error(`You have tried to ${t} "${e}" on a WalletContext without providing one. Make sure to render a WalletProvider as an ancestor of the component that uses WalletContext.`);
                return console.error(r), r
            }
            Object.defineProperty(o, "wallets", {
                get: () => (s("read", "wallets"), i)
            }), Object.defineProperty(o, "wallet", {
                get: () => (s("read", "wallet"), null)
            }), Object.defineProperty(o, "publicKey", {
                get: () => (s("read", "publicKey"), null)
            });
            let a = (0, n.createContext)(o);

            function u() {
                return (0, n.useContext)(a)
            }
        },
        204: function(t, e, r) {
            "use strict";
            r.d(e, {
                K: function() {
                    return u
                },
                M: function() {
                    return a
                }
            });
            var n = r(59175),
                i = r(30329); /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
            let o = BigInt(0),
                s = BigInt(1);

            function a(t, e) {
                let r = (t, e) => {
                        let r = e.negate();
                        return t ? r : e
                    },
                    n = t => ({
                        windows: Math.ceil(e / t) + 1,
                        windowSize: 2 ** (t - 1)
                    });
                return {
                    constTimeNegate: r,
                    unsafeLadder(e, r) {
                        let n = t.ZERO,
                            i = e;
                        for (; r > o;) r & s && (n = n.add(i)), i = i.double(), r >>= s;
                        return n
                    },
                    precomputeWindow(t, e) {
                        let {
                            windows: r,
                            windowSize: i
                        } = n(e), o = [], s = t, a = s;
                        for (let t = 0; t < r; t++) {
                            a = s, o.push(a);
                            for (let t = 1; t < i; t++) a = a.add(s), o.push(a);
                            s = a.double()
                        }
                        return o
                    },
                    wNAF(e, i, o) {
                        let {
                            windows: a,
                            windowSize: u
                        } = n(e), c = t.ZERO, l = t.BASE, h = BigInt(2 ** e - 1), f = 2 ** e, d = BigInt(e);
                        for (let t = 0; t < a; t++) {
                            let e = t * u,
                                n = Number(o & h);
                            o >>= d, n > u && (n -= f, o += s);
                            let a = e,
                                p = e + Math.abs(n) - 1,
                                y = t % 2 != 0,
                                m = n < 0;
                            0 === n ? l = l.add(r(y, i[a])) : c = c.add(r(m, i[p]))
                        }
                        return {
                            p: c,
                            f: l
                        }
                    },
                    wNAFCached(t, e, r, n) {
                        let i = t._WINDOW_SIZE || 1,
                            o = e.get(t);
                        return o || (o = this.precomputeWindow(t, i), 1 !== i && e.set(t, n(o))), this.wNAF(i, o, r)
                    }
                }
            }

            function u(t) {
                return (0, n.OP)(t.Fp), (0, i.FF)(t, {
                    n: "bigint",
                    h: "bigint",
                    Gx: "field",
                    Gy: "field"
                }, {
                    nBitLength: "isSafeInteger",
                    nByteLength: "isSafeInteger"
                }), Object.freeze({ ...(0, n.kK)(t.n, t.nBitLength),
                    ...t,
                    p: t.Fp.ORDER
                })
            }
        },
        59175: function(t, e, r) {
            "use strict";
            r.d(e, {
                DV: function() {
                    return O
                },
                OP: function() {
                    return w
                },
                PS: function() {
                    return _
                },
                Tu: function() {
                    return b
                },
                U_: function() {
                    return p
                },
                Us: function() {
                    return A
                },
                gN: function() {
                    return S
                },
                kK: function() {
                    return x
                },
                oA: function() {
                    return d
                },
                wQ: function() {
                    return h
                }
            });
            var n = r(30329); /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
            let i = BigInt(0),
                o = BigInt(1),
                s = BigInt(2),
                a = BigInt(3),
                u = BigInt(4),
                c = BigInt(5),
                l = BigInt(8);

            function h(t, e) {
                let r = t % e;
                return r >= i ? r : e + r
            }

            function f(t, e, r) {
                if (r <= i || e < i) throw Error("Expected power/modulo > 0");
                if (r === o) return i;
                let n = o;
                for (; e > i;) e & o && (n = n * t % r), t = t * t % r, e >>= o;
                return n
            }

            function d(t, e, r) {
                let n = t;
                for (; e-- > i;) n *= n, n %= r;
                return n
            }

            function p(t, e) {
                if (t === i || e <= i) throw Error(`invert: expected positive integers, got n=${t} mod=${e}`);
                let r = h(t, e),
                    n = e,
                    s = i,
                    a = o,
                    u = o,
                    c = i;
                for (; r !== i;) {
                    let t = n / r,
                        e = n % r,
                        i = s - u * t,
                        o = a - c * t;
                    n = r, r = e, s = u, a = c, u = i, c = o
                }
                if (n !== o) throw Error("invert: does not exist");
                return h(s, e)
            }

            function y(t) {
                let e, r, n;
                let a = (t - o) / s;
                for (e = t - o, r = 0; e % s === i; e /= s, r++);
                for (n = s; n < t && f(n, a, t) !== t - o; n++);
                if (1 === r) {
                    let e = (t + o) / u;
                    return function(t, r) {
                        let n = t.pow(r, e);
                        if (!t.eql(t.sqr(n), r)) throw Error("Cannot find square root");
                        return n
                    }
                }
                let c = (e + o) / s;
                return function(t, i) {
                    if (t.pow(i, a) === t.neg(t.ONE)) throw Error("Cannot find square root");
                    let s = r,
                        u = t.pow(t.mul(t.ONE, n), e),
                        l = t.pow(i, c),
                        h = t.pow(i, e);
                    for (; !t.eql(h, t.ONE);) {
                        if (t.eql(h, t.ZERO)) return t.ZERO;
                        let e = 1;
                        for (let r = t.sqr(h); e < s && !t.eql(r, t.ONE); e++) r = t.sqr(r);
                        let r = t.pow(u, o << BigInt(s - e - 1));
                        u = t.sqr(r), l = t.mul(l, r), h = t.mul(h, u), s = e
                    }
                    return l
                }
            }

            function m(t) {
                if (t % u === a) {
                    let e = (t + o) / u;
                    return function(t, r) {
                        let n = t.pow(r, e);
                        if (!t.eql(t.sqr(n), r)) throw Error("Cannot find square root");
                        return n
                    }
                }
                if (t % l === c) {
                    let e = (t - c) / l;
                    return function(t, r) {
                        let n = t.mul(r, s),
                            i = t.pow(n, e),
                            o = t.mul(r, i),
                            a = t.mul(t.mul(o, s), i),
                            u = t.mul(o, t.sub(a, t.ONE));
                        if (!t.eql(t.sqr(u), r)) throw Error("Cannot find square root");
                        return u
                    }
                }
                return y(t)
            }
            BigInt(9), BigInt(16);
            let b = (t, e) => (h(t, e) & o) === o,
                g = ["create", "isValid", "is0", "neg", "inv", "sqrt", "sqr", "eql", "add", "sub", "mul", "pow", "div", "addN", "subN", "mulN", "sqrN"];

            function w(t) {
                let e = {
                        ORDER: "bigint",
                        MASK: "bigint",
                        BYTES: "isSafeInteger",
                        BITS: "isSafeInteger"
                    },
                    r = g.reduce((t, e) => (t[e] = "function", t), e);
                return (0, n.FF)(t, r)
            }

            function v(t, e, r) {
                if (r < i) throw Error("Expected power > 0");
                if (r === i) return t.ONE;
                if (r === o) return e;
                let n = t.ONE,
                    s = e;
                for (; r > i;) r & o && (n = t.mul(n, s)), s = t.sqr(s), r >>= o;
                return n
            }

            function E(t, e) {
                let r = Array(e.length),
                    n = e.reduce((e, n, i) => t.is0(n) ? e : (r[i] = e, t.mul(e, n)), t.ONE),
                    i = t.inv(n);
                return e.reduceRight((e, n, i) => t.is0(n) ? e : (r[i] = t.mul(e, r[i]), t.mul(e, n)), i), r
            }

            function x(t, e) {
                let r = void 0 !== e ? e : t.toString(2).length,
                    n = Math.ceil(r / 8);
                return {
                    nBitLength: r,
                    nByteLength: n
                }
            }

            function S(t, e, r = !1, s = {}) {
                if (t <= i) throw Error(`Expected Field ORDER > 0, got ${t}`);
                let {
                    nBitLength: a,
                    nByteLength: u
                } = x(t, e);
                if (u > 2048) throw Error("Field lengths over 2048 bytes are not supported");
                let c = m(t),
                    l = Object.freeze({
                        ORDER: t,
                        BITS: a,
                        BYTES: u,
                        MASK: (0, n.dQ)(a),
                        ZERO: i,
                        ONE: o,
                        create: e => h(e, t),
                        isValid: e => {
                            if ("bigint" != typeof e) throw Error(`Invalid field element: expected bigint, got ${typeof e}`);
                            return i <= e && e < t
                        },
                        is0: t => t === i,
                        isOdd: t => (t & o) === o,
                        neg: e => h(-e, t),
                        eql: (t, e) => t === e,
                        sqr: e => h(e * e, t),
                        add: (e, r) => h(e + r, t),
                        sub: (e, r) => h(e - r, t),
                        mul: (e, r) => h(e * r, t),
                        pow: (t, e) => v(l, t, e),
                        div: (e, r) => h(e * p(r, t), t),
                        sqrN: t => t * t,
                        addN: (t, e) => t + e,
                        subN: (t, e) => t - e,
                        mulN: (t, e) => t * e,
                        inv: e => p(e, t),
                        sqrt: s.sqrt || (t => c(l, t)),
                        invertBatch: t => E(l, t),
                        cmov: (t, e, r) => r ? e : t,
                        toBytes: t => r ? (0, n.S5)(t, u) : (0, n.tL)(t, u),
                        fromBytes: t => {
                            if (t.length !== u) throw Error(`Fp.fromBytes: expected ${u}, got ${t.length}`);
                            return r ? (0, n.ty)(t) : (0, n.bytesToNumberBE)(t)
                        }
                    });
                return Object.freeze(l)
            }

            function O(t, e) {
                if (!t.isOdd) throw Error("Field doesn't have isOdd");
                let r = t.sqrt(e);
                return t.isOdd(r) ? t.neg(r) : r
            }

            function C(t) {
                if ("bigint" != typeof t) throw Error("field order must be bigint");
                return Math.ceil(t.toString(2).length / 8)
            }

            function _(t) {
                let e = C(t);
                return e + Math.ceil(e / 2)
            }

            function A(t, e, r = !1) {
                let i = t.length,
                    s = C(e),
                    a = _(e);
                if (i < 16 || i < a || i > 1024) throw Error(`expected ${a}-1024 bytes of input, got ${i}`);
                let u = h(r ? (0, n.bytesToNumberBE)(t) : (0, n.ty)(t), e - o) + o;
                return r ? (0, n.S5)(u, s) : (0, n.tL)(u, s)
            }
        },
        30329: function(t, e, r) {
            "use strict";
            r.d(e, {
                FF: function() {
                    return O
                },
                S5: function() {
                    return m
                },
                _t: function() {
                    return o
                },
                bytesToNumberBE: function() {
                    return d
                },
                ci: function() {
                    return u
                },
                dQ: function() {
                    return w
                },
                eV: function() {
                    return g
                },
                gk: function() {
                    return s
                },
                hexToBytes: function() {
                    return f
                },
                n$: function() {
                    return x
                },
                ql: function() {
                    return b
                },
                tL: function() {
                    return y
                },
                ty: function() {
                    return p
                }
            }), BigInt(0);
            let n = BigInt(1),
                i = BigInt(2);

            function o(t) {
                return t instanceof Uint8Array || null != t && "object" == typeof t && "Uint8Array" === t.constructor.name
            }

            function s(t) {
                if (!o(t)) throw Error("Uint8Array expected")
            }
            let a = Array.from({
                length: 256
            }, (t, e) => e.toString(16).padStart(2, "0"));

            function u(t) {
                s(t);
                let e = "";
                for (let r = 0; r < t.length; r++) e += a[t[r]];
                return e
            }

            function c(t) {
                if ("string" != typeof t) throw Error("hex string expected, got " + typeof t);
                return BigInt("" === t ? "0" : `0x${t}`)
            }
            let l = {
                _0: 48,
                _9: 57,
                _A: 65,
                _F: 70,
                _a: 97,
                _f: 102
            };

            function h(t) {
                return t >= l._0 && t <= l._9 ? t - l._0 : t >= l._A && t <= l._F ? t - (l._A - 10) : t >= l._a && t <= l._f ? t - (l._a - 10) : void 0
            }

            function f(t) {
                if ("string" != typeof t) throw Error("hex string expected, got " + typeof t);
                let e = t.length,
                    r = e / 2;
                if (e % 2) throw Error("padded hex string expected, got unpadded hex of length " + e);
                let n = new Uint8Array(r);
                for (let e = 0, i = 0; e < r; e++, i += 2) {
                    let r = h(t.charCodeAt(i)),
                        o = h(t.charCodeAt(i + 1));
                    if (void 0 === r || void 0 === o) throw Error('hex string expected, got non-hex character "' + (t[i] + t[i + 1]) + '" at index ' + i);
                    n[e] = 16 * r + o
                }
                return n
            }

            function d(t) {
                return c(u(t))
            }

            function p(t) {
                return s(t), c(u(Uint8Array.from(t).reverse()))
            }

            function y(t, e) {
                return f(t.toString(16).padStart(2 * e, "0"))
            }

            function m(t, e) {
                return y(t, e).reverse()
            }

            function b(t, e, r) {
                let n;
                if ("string" == typeof e) try {
                        n = f(e)
                    } catch (r) {
                        throw Error(`${t} must be valid hex string, got "${e}". Cause: ${r}`)
                    } else if (o(e)) n = Uint8Array.from(e);
                    else throw Error(`${t} must be hex string or Uint8Array`);
                let i = n.length;
                if ("number" == typeof r && i !== r) throw Error(`${t} expected ${r} bytes, got ${i}`);
                return n
            }

            function g(...t) {
                let e = 0;
                for (let r = 0; r < t.length; r++) {
                    let n = t[r];
                    s(n), e += n.length
                }
                let r = new Uint8Array(e);
                for (let e = 0, n = 0; e < t.length; e++) {
                    let i = t[e];
                    r.set(i, n), n += i.length
                }
                return r
            }
            let w = t => (i << BigInt(t - 1)) - n,
                v = t => new Uint8Array(t),
                E = t => Uint8Array.from(t);

            function x(t, e, r) {
                if ("number" != typeof t || t < 2) throw Error("hashLen must be a number");
                if ("number" != typeof e || e < 2) throw Error("qByteLen must be a number");
                if ("function" != typeof r) throw Error("hmacFn must be a function");
                let n = v(t),
                    i = v(t),
                    o = 0,
                    s = () => {
                        n.fill(1), i.fill(0), o = 0
                    },
                    a = (...t) => r(i, n, ...t),
                    u = (t = v()) => {
                        i = a(E([0]), t), n = a(), 0 !== t.length && (i = a(E([1]), t), n = a())
                    },
                    c = () => {
                        if (o++ >= 1e3) throw Error("drbg: tried 1000 values");
                        let t = 0,
                            r = [];
                        for (; t < e;) {
                            let e = (n = a()).slice();
                            r.push(e), t += n.length
                        }
                        return g(...r)
                    };
                return (t, e) => {
                    let r;
                    for (s(), u(t); !(r = e(c()));) u();
                    return s(), r
                }
            }
            let S = {
                bigint: t => "bigint" == typeof t,
                function: t => "function" == typeof t,
                boolean: t => "boolean" == typeof t,
                string: t => "string" == typeof t,
                stringOrUint8Array: t => "string" == typeof t || o(t),
                isSafeInteger: t => Number.isSafeInteger(t),
                array: t => Array.isArray(t),
                field: (t, e) => e.Fp.isValid(t),
                hash: t => "function" == typeof t && Number.isSafeInteger(t.outputLen)
            };

            function O(t, e, r = {}) {
                let n = (e, r, n) => {
                    let i = S[r];
                    if ("function" != typeof i) throw Error(`Invalid validator "${r}", expected function`);
                    let o = t[e];
                    if ((!n || void 0 !== o) && !i(o, t)) throw Error(`Invalid param ${String(e)}=${o} (${typeof o}), expected ${r}`)
                };
                for (let [t, r] of Object.entries(e)) n(t, r, !1);
                for (let [t, e] of Object.entries(r)) n(t, e, !0);
                return t
            }
        },
        81228: function(t, e, r) {
            "use strict";
            r.d(e, {
                UN: function() {
                    return U
                }
            });
            var n = r(13620),
                i = r(62671),
                o = r(19394);
            let [s, a] = i.ZP.split(["0x428a2f98d728ae22", "0x7137449123ef65cd", "0xb5c0fbcfec4d3b2f", "0xe9b5dba58189dbbc", "0x3956c25bf348b538", "0x59f111f1b605d019", "0x923f82a4af194f9b", "0xab1c5ed5da6d8118", "0xd807aa98a3030242", "0x12835b0145706fbe", "0x243185be4ee4b28c", "0x550c7dc3d5ffb4e2", "0x72be5d74f27b896f", "0x80deb1fe3b1696b1", "0x9bdc06a725c71235", "0xc19bf174cf692694", "0xe49b69c19ef14ad2", "0xefbe4786384f25e3", "0x0fc19dc68b8cd5b5", "0x240ca1cc77ac9c65", "0x2de92c6f592b0275", "0x4a7484aa6ea6e483", "0x5cb0a9dcbd41fbd4", "0x76f988da831153b5", "0x983e5152ee66dfab", "0xa831c66d2db43210", "0xb00327c898fb213f", "0xbf597fc7beef0ee4", "0xc6e00bf33da88fc2", "0xd5a79147930aa725", "0x06ca6351e003826f", "0x142929670a0e6e70", "0x27b70a8546d22ffc", "0x2e1b21385c26c926", "0x4d2c6dfc5ac42aed", "0x53380d139d95b3df", "0x650a73548baf63de", "0x766a0abb3c77b2a8", "0x81c2c92e47edaee6", "0x92722c851482353b", "0xa2bfe8a14cf10364", "0xa81a664bbc423001", "0xc24b8b70d0f89791", "0xc76c51a30654be30", "0xd192e819d6ef5218", "0xd69906245565a910", "0xf40e35855771202a", "0x106aa07032bbd1b8", "0x19a4c116b8d2d0c8", "0x1e376c085141ab53", "0x2748774cdf8eeb99", "0x34b0bcb5e19b48a8", "0x391c0cb3c5c95a63", "0x4ed8aa4ae3418acb", "0x5b9cca4f7763e373", "0x682e6ff3d6b2b8a3", "0x748f82ee5defb2fc", "0x78a5636f43172f60", "0x84c87814a1f0ab72", "0x8cc702081a6439ec", "0x90befffa23631e28", "0xa4506cebde82bde9", "0xbef9a3f7b2c67915", "0xc67178f2e372532b", "0xca273eceea26619c", "0xd186b8c721c0c207", "0xeada7dd6cde0eb1e", "0xf57d4f7fee6ed178", "0x06f067aa72176fba", "0x0a637dc5a2c898a6", "0x113f9804bef90dae", "0x1b710b35131c471b", "0x28db77f523047d84", "0x32caab7b40c72493", "0x3c9ebe0a15c9bebc", "0x431d67c49c100d4c", "0x4cc5d4becb3e42b6", "0x597f299cfc657e2a", "0x5fcb6fab3ad6faec", "0x6c44198c4a475817"].map(t => BigInt(t))), u = new Uint32Array(80), c = new Uint32Array(80);
            class l extends n.VR {
                constructor() {
                    super(128, 64, 16, !1), this.Ah = 1779033703, this.Al = -205731576, this.Bh = -1150833019, this.Bl = -2067093701, this.Ch = 1013904242, this.Cl = -23791573, this.Dh = -1521486534, this.Dl = 1595750129, this.Eh = 1359893119, this.El = -1377402159, this.Fh = -1694144372, this.Fl = 725511199, this.Gh = 528734635, this.Gl = -79577749, this.Hh = 1541459225, this.Hl = 327033209
                }
                get() {
                    let {
                        Ah: t,
                        Al: e,
                        Bh: r,
                        Bl: n,
                        Ch: i,
                        Cl: o,
                        Dh: s,
                        Dl: a,
                        Eh: u,
                        El: c,
                        Fh: l,
                        Fl: h,
                        Gh: f,
                        Gl: d,
                        Hh: p,
                        Hl: y
                    } = this;
                    return [t, e, r, n, i, o, s, a, u, c, l, h, f, d, p, y]
                }
                set(t, e, r, n, i, o, s, a, u, c, l, h, f, d, p, y) {
                    this.Ah = 0 | t, this.Al = 0 | e, this.Bh = 0 | r, this.Bl = 0 | n, this.Ch = 0 | i, this.Cl = 0 | o, this.Dh = 0 | s, this.Dl = 0 | a, this.Eh = 0 | u, this.El = 0 | c, this.Fh = 0 | l, this.Fl = 0 | h, this.Gh = 0 | f, this.Gl = 0 | d, this.Hh = 0 | p, this.Hl = 0 | y
                }
                process(t, e) {
                    for (let r = 0; r < 16; r++, e += 4) u[r] = t.getUint32(e), c[r] = t.getUint32(e += 4);
                    for (let t = 16; t < 80; t++) {
                        let e = 0 | u[t - 15],
                            r = 0 | c[t - 15],
                            n = i.ZP.rotrSH(e, r, 1) ^ i.ZP.rotrSH(e, r, 8) ^ i.ZP.shrSH(e, r, 7),
                            o = i.ZP.rotrSL(e, r, 1) ^ i.ZP.rotrSL(e, r, 8) ^ i.ZP.shrSL(e, r, 7),
                            s = 0 | u[t - 2],
                            a = 0 | c[t - 2],
                            l = i.ZP.rotrSH(s, a, 19) ^ i.ZP.rotrBH(s, a, 61) ^ i.ZP.shrSH(s, a, 6),
                            h = i.ZP.rotrSL(s, a, 19) ^ i.ZP.rotrBL(s, a, 61) ^ i.ZP.shrSL(s, a, 6),
                            f = i.ZP.add4L(o, h, c[t - 7], c[t - 16]),
                            d = i.ZP.add4H(f, n, l, u[t - 7], u[t - 16]);
                        u[t] = 0 | d, c[t] = 0 | f
                    }
                    let {
                        Ah: r,
                        Al: n,
                        Bh: o,
                        Bl: l,
                        Ch: h,
                        Cl: f,
                        Dh: d,
                        Dl: p,
                        Eh: y,
                        El: m,
                        Fh: b,
                        Fl: g,
                        Gh: w,
                        Gl: v,
                        Hh: E,
                        Hl: x
                    } = this;
                    for (let t = 0; t < 80; t++) {
                        let e = i.ZP.rotrSH(y, m, 14) ^ i.ZP.rotrSH(y, m, 18) ^ i.ZP.rotrBH(y, m, 41),
                            S = i.ZP.rotrSL(y, m, 14) ^ i.ZP.rotrSL(y, m, 18) ^ i.ZP.rotrBL(y, m, 41),
                            O = y & b ^ ~y & w,
                            C = m & g ^ ~m & v,
                            _ = i.ZP.add5L(x, S, C, a[t], c[t]),
                            A = i.ZP.add5H(_, E, e, O, s[t], u[t]),
                            P = 0 | _,
                            k = i.ZP.rotrSH(r, n, 28) ^ i.ZP.rotrBH(r, n, 34) ^ i.ZP.rotrBH(r, n, 39),
                            D = i.ZP.rotrSL(r, n, 28) ^ i.ZP.rotrBL(r, n, 34) ^ i.ZP.rotrBL(r, n, 39),
                            I = r & o ^ r & h ^ o & h,
                            M = n & l ^ n & f ^ l & f;
                        E = 0 | w, x = 0 | v, w = 0 | b, v = 0 | g, b = 0 | y, g = 0 | m, ({
                            h: y,
                            l: m
                        } = i.ZP.add(0 | d, 0 | p, 0 | A, 0 | P)), d = 0 | h, p = 0 | f, h = 0 | o, f = 0 | l, o = 0 | r, l = 0 | n;
                        let B = i.ZP.add3L(P, D, M);
                        r = i.ZP.add3H(B, A, k, I), n = 0 | B
                    }({
                        h: r,
                        l: n
                    } = i.ZP.add(0 | this.Ah, 0 | this.Al, 0 | r, 0 | n)), ({
                        h: o,
                        l: l
                    } = i.ZP.add(0 | this.Bh, 0 | this.Bl, 0 | o, 0 | l)), ({
                        h: h,
                        l: f
                    } = i.ZP.add(0 | this.Ch, 0 | this.Cl, 0 | h, 0 | f)), ({
                        h: d,
                        l: p
                    } = i.ZP.add(0 | this.Dh, 0 | this.Dl, 0 | d, 0 | p)), ({
                        h: y,
                        l: m
                    } = i.ZP.add(0 | this.Eh, 0 | this.El, 0 | y, 0 | m)), ({
                        h: b,
                        l: g
                    } = i.ZP.add(0 | this.Fh, 0 | this.Fl, 0 | b, 0 | g)), ({
                        h: w,
                        l: v
                    } = i.ZP.add(0 | this.Gh, 0 | this.Gl, 0 | w, 0 | v)), ({
                        h: E,
                        l: x
                    } = i.ZP.add(0 | this.Hh, 0 | this.Hl, 0 | E, 0 | x)), this.set(r, n, o, l, h, f, d, p, y, m, b, g, w, v, E, x)
                }
                roundClean() {
                    u.fill(0), c.fill(0)
                }
                destroy() {
                    this.buffer.fill(0), this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
                }
            }
            let h = (0, o.hE)(() => new l);
            var f = r(59175),
                d = r(30329),
                p = r(204); /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
            let y = BigInt(0),
                m = BigInt(1),
                b = BigInt(2),
                g = BigInt(8),
                w = {
                    zip215: !0
                };

            function v(t) {
                let e = (0, p.K)(t);
                return d.FF(t, {
                    hash: "function",
                    a: "bigint",
                    d: "bigint",
                    randomBytes: "function"
                }, {
                    adjustScalarBytes: "function",
                    domain: "function",
                    uvRatio: "function",
                    mapToCurve: "function"
                }), Object.freeze({ ...e
                })
            }

            function E(t) {
                let e = v(t),
                    {
                        Fp: r,
                        n: n,
                        prehash: i,
                        hash: o,
                        randomBytes: s,
                        nByteLength: a,
                        h: u
                    } = e,
                    c = b << BigInt(8 * a) - m,
                    l = r.create,
                    h = e.uvRatio || ((t, e) => {
                        try {
                            return {
                                isValid: !0,
                                value: r.sqrt(t * r.inv(e))
                            }
                        } catch (t) {
                            return {
                                isValid: !1,
                                value: y
                            }
                        }
                    }),
                    E = e.adjustScalarBytes || (t => t),
                    x = e.domain || ((t, e, r) => {
                        if (e.length || r) throw Error("Contexts/pre-hash are not supported");
                        return t
                    }),
                    S = t => "bigint" == typeof t && y < t,
                    O = (t, e) => S(t) && S(e) && t < e,
                    C = t => t === y || O(t, c);

                function _(t, e) {
                    if (O(t, e)) return t;
                    throw Error(`Expected valid scalar < ${e}, got ${typeof t} ${t}`)
                }

                function A(t) {
                    return t === y ? t : _(t, n)
                }
                let P = new Map;

                function k(t) {
                    if (!(t instanceof D)) throw Error("ExtendedPoint expected")
                }
                class D {
                    constructor(t, e, r, n) {
                        if (this.ex = t, this.ey = e, this.ez = r, this.et = n, !C(t)) throw Error("x required");
                        if (!C(e)) throw Error("y required");
                        if (!C(r)) throw Error("z required");
                        if (!C(n)) throw Error("t required")
                    }
                    get x() {
                        return this.toAffine().x
                    }
                    get y() {
                        return this.toAffine().y
                    }
                    static fromAffine(t) {
                        if (t instanceof D) throw Error("extended point not allowed");
                        let {
                            x: e,
                            y: r
                        } = t || {};
                        if (!C(e) || !C(r)) throw Error("invalid affine point");
                        return new D(e, r, m, l(e * r))
                    }
                    static normalizeZ(t) {
                        let e = r.invertBatch(t.map(t => t.ez));
                        return t.map((t, r) => t.toAffine(e[r])).map(D.fromAffine)
                    }
                    _setWindowSize(t) {
                        this._WINDOW_SIZE = t, P.delete(this)
                    }
                    assertValidity() {
                        let {
                            a: t,
                            d: r
                        } = e;
                        if (this.is0()) throw Error("bad point: ZERO");
                        let {
                            ex: n,
                            ey: i,
                            ez: o,
                            et: s
                        } = this, a = l(n * n), u = l(i * i), c = l(o * o), h = l(c * c), f = l(a * t);
                        if (l(c * l(f + u)) !== l(h + l(r * l(a * u)))) throw Error("bad point: equation left != right (1)");
                        if (l(n * i) !== l(o * s)) throw Error("bad point: equation left != right (2)")
                    }
                    equals(t) {
                        k(t);
                        let {
                            ex: e,
                            ey: r,
                            ez: n
                        } = this, {
                            ex: i,
                            ey: o,
                            ez: s
                        } = t, a = l(e * s), u = l(i * n), c = l(r * s), h = l(o * n);
                        return a === u && c === h
                    }
                    is0() {
                        return this.equals(D.ZERO)
                    }
                    negate() {
                        return new D(l(-this.ex), this.ey, this.ez, l(-this.et))
                    }
                    double() {
                        let {
                            a: t
                        } = e, {
                            ex: r,
                            ey: n,
                            ez: i
                        } = this, o = l(r * r), s = l(n * n), a = l(b * l(i * i)), u = l(t * o), c = r + n, h = l(l(c * c) - o - s), f = u + s, d = f - a, p = u - s, y = l(h * d), m = l(f * p), g = l(h * p);
                        return new D(y, m, l(d * f), g)
                    }
                    add(t) {
                        k(t);
                        let {
                            a: r,
                            d: n
                        } = e, {
                            ex: i,
                            ey: o,
                            ez: s,
                            et: a
                        } = this, {
                            ex: u,
                            ey: c,
                            ez: h,
                            et: f
                        } = t;
                        if (r === BigInt(-1)) {
                            let t = l((o - i) * (c + u)),
                                e = l((o + i) * (c - u)),
                                r = l(e - t);
                            if (r === y) return this.double();
                            let n = l(s * b * f),
                                d = l(a * b * h),
                                p = d + n,
                                m = e + t,
                                g = d - n,
                                w = l(p * r),
                                v = l(m * g),
                                E = l(p * g);
                            return new D(w, v, l(r * m), E)
                        }
                        let d = l(i * u),
                            p = l(o * c),
                            m = l(a * n * f),
                            g = l(s * h),
                            w = l((i + o) * (u + c) - d - p),
                            v = g - m,
                            E = g + m,
                            x = l(p - r * d),
                            S = l(w * v),
                            O = l(E * x),
                            C = l(w * x);
                        return new D(S, O, l(v * E), C)
                    }
                    subtract(t) {
                        return this.add(t.negate())
                    }
                    wNAF(t) {
                        return B.wNAFCached(this, P, t, D.normalizeZ)
                    }
                    multiply(t) {
                        let {
                            p: e,
                            f: r
                        } = this.wNAF(_(t, n));
                        return D.normalizeZ([e, r])[0]
                    }
                    multiplyUnsafe(t) {
                        let e = A(t);
                        return e === y ? M : this.equals(M) || e === m ? this : this.equals(I) ? this.wNAF(e).p : B.unsafeLadder(this, e)
                    }
                    isSmallOrder() {
                        return this.multiplyUnsafe(u).is0()
                    }
                    isTorsionFree() {
                        return B.unsafeLadder(this, n).is0()
                    }
                    toAffine(t) {
                        let {
                            ex: e,
                            ey: n,
                            ez: i
                        } = this, o = this.is0();
                        null == t && (t = o ? g : r.inv(i));
                        let s = l(e * t),
                            a = l(n * t),
                            u = l(i * t);
                        if (o) return {
                            x: y,
                            y: m
                        };
                        if (u !== m) throw Error("invZ was invalid");
                        return {
                            x: s,
                            y: a
                        }
                    }
                    clearCofactor() {
                        let {
                            h: t
                        } = e;
                        return t === m ? this : this.multiplyUnsafe(t)
                    }
                    static fromHex(t, n = !1) {
                        let {
                            d: i,
                            a: o
                        } = e, s = r.BYTES, a = (t = (0, d.ql)("pointHex", t, s)).slice(), u = t[s - 1];
                        a[s - 1] = -129 & u;
                        let f = d.ty(a);
                        f === y || (n ? _(f, c) : _(f, r.ORDER));
                        let p = l(f * f),
                            {
                                isValid: b,
                                value: g
                            } = h(l(p - m), l(i * p - o));
                        if (!b) throw Error("Point.fromHex: invalid y coordinate");
                        let w = (g & m) === m,
                            v = (128 & u) != 0;
                        if (!n && g === y && v) throw Error("Point.fromHex: x=0 and x_0=1");
                        return v !== w && (g = l(-g)), D.fromAffine({
                            x: g,
                            y: f
                        })
                    }
                    static fromPrivateKey(t) {
                        return j(t).point
                    }
                    toRawBytes() {
                        let {
                            x: t,
                            y: e
                        } = this.toAffine(), n = d.S5(e, r.BYTES);
                        return n[n.length - 1] |= t & m ? 128 : 0, n
                    }
                    toHex() {
                        return d.ci(this.toRawBytes())
                    }
                }
                D.BASE = new D(e.Gx, e.Gy, m, l(e.Gx * e.Gy)), D.ZERO = new D(y, m, m, y);
                let {
                    BASE: I,
                    ZERO: M
                } = D, B = (0, p.M)(D, 8 * a);

                function R(t) {
                    return (0, f.wQ)(t, n)
                }

                function T(t) {
                    return R(d.ty(t))
                }

                function j(t) {
                    let e = a;
                    t = (0, d.ql)("private key", t, e);
                    let r = (0, d.ql)("hashed private key", o(t), 2 * e),
                        n = E(r.slice(0, e)),
                        i = r.slice(e, 2 * e),
                        s = T(n),
                        u = I.multiply(s),
                        c = u.toRawBytes();
                    return {
                        head: n,
                        prefix: i,
                        scalar: s,
                        point: u,
                        pointBytes: c
                    }
                }

                function U(t) {
                    return j(t).pointBytes
                }

                function N(t = new Uint8Array, ...e) {
                    return T(o(x(d.eV(...e), (0, d.ql)("context", t), !!i)))
                }

                function F(t, e, n = {}) {
                    t = (0, d.ql)("message", t), i && (t = i(t));
                    let {
                        prefix: o,
                        scalar: s,
                        pointBytes: u
                    } = j(e), c = N(n.context, o, t), l = I.multiply(c).toRawBytes(), h = R(c + N(n.context, l, u, t) * s);
                    A(h);
                    let f = d.eV(l, d.S5(h, r.BYTES));
                    return (0, d.ql)("result", f, 2 * a)
                }
                let L = w;

                function q(t, e, n, o = L) {
                    let s, a, u;
                    let {
                        context: c,
                        zip215: l
                    } = o, h = r.BYTES;
                    t = (0, d.ql)("signature", t, 2 * h), e = (0, d.ql)("message", e), i && (e = i(e));
                    let f = d.ty(t.slice(h, 2 * h));
                    try {
                        s = D.fromHex(n, l), a = D.fromHex(t.slice(0, h), l), u = I.multiplyUnsafe(f)
                    } catch (t) {
                        return !1
                    }
                    if (!l && s.isSmallOrder()) return !1;
                    let p = N(c, a.toRawBytes(), s.toRawBytes(), e);
                    return a.add(s.multiplyUnsafe(p)).subtract(u).clearCofactor().equals(D.ZERO)
                }
                I._setWindowSize(8);
                let $ = {
                    getExtendedPublicKey: j,
                    randomPrivateKey: () => s(r.BYTES),
                    precompute: (t = 8, e = D.BASE) => (e._setWindowSize(t), e.multiply(BigInt(3)), e)
                };
                return {
                    CURVE: e,
                    getPublicKey: U,
                    sign: F,
                    verify: q,
                    ExtendedPoint: D,
                    utils: $
                }
            } /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
            let x = BigInt("57896044618658097711785492504343953926634992332820282019728792003956564819949"),
                S = BigInt("19681161376707505956807079304988542015446066515923890162744021073123829784752"),
                O = BigInt(0),
                C = BigInt(1),
                _ = BigInt(2),
                A = BigInt(5),
                P = BigInt(10),
                k = BigInt(20),
                D = BigInt(40),
                I = BigInt(80);

            function M(t) {
                let e = x,
                    r = t * t % e * t % e,
                    n = (0, f.oA)(r, _, e) * r % e,
                    i = (0, f.oA)(n, C, e) * t % e,
                    o = (0, f.oA)(i, A, e) * i % e,
                    s = (0, f.oA)(o, P, e) * o % e,
                    a = (0, f.oA)(s, k, e) * s % e,
                    u = (0, f.oA)(a, D, e) * a % e,
                    c = (0, f.oA)(u, I, e) * u % e,
                    l = (0, f.oA)(c, I, e) * u % e,
                    h = (0, f.oA)(l, P, e) * o % e;
                return {
                    pow_p_5_8: (0, f.oA)(h, _, e) * t % e,
                    b2: r
                }
            }

            function B(t) {
                return t[0] &= 248, t[31] &= 127, t[31] |= 64, t
            }

            function R(t, e) {
                let r = x,
                    n = (0, f.wQ)(e * e * e, r),
                    i = M(t * (0, f.wQ)(n * n * e, r)).pow_p_5_8,
                    o = (0, f.wQ)(t * n * i, r),
                    s = (0, f.wQ)(e * o * o, r),
                    a = o,
                    u = (0, f.wQ)(o * S, r),
                    c = s === t,
                    l = s === (0, f.wQ)(-t, r),
                    h = s === (0, f.wQ)(-t * S, r);
                return c && (o = a), (l || h) && (o = u), (0, f.Tu)(o, r) && (o = (0, f.wQ)(-o, r)), {
                    isValid: c || l,
                    value: o
                }
            }
            let T = (0, f.gN)(x, void 0, !0),
                j = {
                    a: BigInt(-1),
                    d: BigInt("37095705934669439343138083508754565189542113879843219016388785533085940283555"),
                    Fp: T,
                    n: BigInt("7237005577332262213973186563042994240857116359379907606001950938285454250989"),
                    h: BigInt(8),
                    Gx: BigInt("15112221349535400772501151409588531511454012693041857206046113283949847762202"),
                    Gy: BigInt("46316835694926478169428394003475163141307993866256225615783033603165251855960"),
                    hash: h,
                    randomBytes: o.O6,
                    adjustScalarBytes: B,
                    uvRatio: R
                },
                U = E(j);
            ({ ...j
            });
            let N = (T.ORDER + BigInt(3)) / BigInt(8);

            function F(t) {
                if (!(t instanceof Q)) throw Error("RistrettoPoint expected")
            }
            T.pow(_, N), T.sqrt(T.neg(T.ONE)), T.ORDER, BigInt(5), BigInt(8), BigInt(486662), (0, f.DV)(T, T.neg(BigInt(486664)));
            let L = null,
                q = BigInt("25063068953384623474111414158702152701244531502492656460079210482610430750235"),
                $ = BigInt("54469307008909316920995813868745141605393597292927456921205312896311721017578"),
                W = BigInt("1159843021668779879193775521855586647937357759715417654439879720876111806838"),
                G = BigInt("40440834346308536858101042469323190826248399146238708352240133220865137265952"),
                z = t => R(C, t),
                H = BigInt("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"),
                K = t => U.CURVE.Fp.create(bytesToNumberLE(t) & H);

            function V(t) {
                let {
                    d: e
                } = U.CURVE, r = U.CURVE.Fp.ORDER, n = U.CURVE.Fp.create, i = n(L * t * t), o = n((i + C) * W), s = BigInt(-1), a = n((s - e * i) * n(i + e)), {
                    isValid: u,
                    value: c
                } = R(o, a), l = n(c * t);
                isNegativeLE(l, r) || (l = n(-l)), u || (c = l), u || (s = i);
                let h = n(s * (i - C) * G - a),
                    f = c * c,
                    d = n((c + c) * a),
                    p = n(h * q),
                    y = n(C - f),
                    m = n(C + f);
                return new U.ExtendedPoint(n(d * m), n(y * p), n(p * m), n(d * y))
            }
            class Q {
                constructor(t) {
                    this.ep = t
                }
                static fromAffine(t) {
                    return new Q(U.ExtendedPoint.fromAffine(t))
                }
                static hashToCurve(t) {
                    let e = V(K((t = ensureBytes("ristrettoHash", t, 64)).slice(0, 32))),
                        r = V(K(t.slice(32, 64)));
                    return new Q(e.add(r))
                }
                static fromHex(t) {
                    t = ensureBytes("ristrettoHex", t, 32);
                    let {
                        a: e,
                        d: r
                    } = U.CURVE, n = U.CURVE.Fp.ORDER, i = U.CURVE.Fp.create, o = "RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint", s = K(t);
                    if (!equalBytes(numberToBytesLE(s, 32), t) || isNegativeLE(s, n)) throw Error(o);
                    let a = i(s * s),
                        u = i(C + e * a),
                        c = i(C - e * a),
                        l = i(u * u),
                        h = i(c * c),
                        f = i(e * r * l - h),
                        {
                            isValid: d,
                            value: p
                        } = z(i(f * h)),
                        y = i(p * c),
                        m = i(p * y * f),
                        b = i((s + s) * y);
                    isNegativeLE(b, n) && (b = i(-b));
                    let g = i(u * m),
                        w = i(b * g);
                    if (!d || isNegativeLE(w, n) || g === O) throw Error(o);
                    return new Q(new U.ExtendedPoint(b, g, C, w))
                }
                toRawBytes() {
                    let t, {
                            ex: e,
                            ey: r,
                            ez: n,
                            et: i
                        } = this.ep,
                        o = U.CURVE.Fp.ORDER,
                        s = U.CURVE.Fp.create,
                        a = s(s(n + r) * s(n - r)),
                        u = s(e * r),
                        c = s(u * u),
                        {
                            value: l
                        } = z(s(a * c)),
                        h = s(l * a),
                        f = s(l * u),
                        d = s(h * f * i);
                    if (isNegativeLE(i * d, o)) {
                        let n = s(r * L),
                            i = s(e * L);
                        e = n, r = i, t = s(h * $)
                    } else t = f;
                    isNegativeLE(e * d, o) && (r = s(-r));
                    let p = s((n - r) * t);
                    return isNegativeLE(p, o) && (p = s(-p)), numberToBytesLE(p, 32)
                }
                toHex() {
                    return bytesToHex(this.toRawBytes())
                }
                toString() {
                    return this.toHex()
                }
                equals(t) {
                    F(t);
                    let {
                        ex: e,
                        ey: r
                    } = this.ep, {
                        ex: n,
                        ey: i
                    } = t.ep, o = U.CURVE.Fp.create, s = o(e * i) === o(r * n), a = o(r * i) === o(e * n);
                    return s || a
                }
                add(t) {
                    return F(t), new Q(this.ep.add(t.ep))
                }
                subtract(t) {
                    return F(t), new Q(this.ep.subtract(t.ep))
                }
                multiply(t) {
                    return new Q(this.ep.multiply(t))
                }
                multiplyUnsafe(t) {
                    return new Q(this.ep.multiplyUnsafe(t))
                }
                double() {
                    return new Q(this.ep.double())
                }
                negate() {
                    return new Q(this.ep.negate())
                }
            }
        },
        6636: function(t, e, r) {
            "use strict";
            r.d(e, {
                kA: function() {
                    return D
                }
            });
            var n = r(58061),
                i = r(59175),
                o = r(48680),
                s = r(19394);
            class a extends s.kb {
                constructor(t, e) {
                    super(), this.finished = !1, this.destroyed = !1, (0, o.vp)(t);
                    let r = (0, s.O0)(e);
                    if (this.iHash = t.create(), "function" != typeof this.iHash.update) throw Error("Expected instance of class which extends utils.Hash");
                    this.blockLen = this.iHash.blockLen, this.outputLen = this.iHash.outputLen;
                    let n = this.blockLen,
                        i = new Uint8Array(n);
                    i.set(r.length > n ? t.create().update(r).digest() : r);
                    for (let t = 0; t < i.length; t++) i[t] ^= 54;
                    this.iHash.update(i), this.oHash = t.create();
                    for (let t = 0; t < i.length; t++) i[t] ^= 106;
                    this.oHash.update(i), i.fill(0)
                }
                update(t) {
                    return (0, o.Gg)(this), this.iHash.update(t), this
                }
                digestInto(t) {
                    (0, o.Gg)(this), (0, o.aI)(t, this.outputLen), this.finished = !0, this.iHash.digestInto(t), this.oHash.update(t), this.oHash.digestInto(t), this.destroy()
                }
                digest() {
                    let t = new Uint8Array(this.oHash.outputLen);
                    return this.digestInto(t), t
                }
                _cloneInto(t) {
                    t || (t = Object.create(Object.getPrototypeOf(this), {}));
                    let {
                        oHash: e,
                        iHash: r,
                        finished: n,
                        destroyed: i,
                        blockLen: o,
                        outputLen: s
                    } = this;
                    return t.finished = n, t.destroyed = i, t.blockLen = o, t.outputLen = s, t.oHash = e._cloneInto(t.oHash), t.iHash = r._cloneInto(t.iHash), t
                }
                destroy() {
                    this.destroyed = !0, this.oHash.destroy(), this.iHash.destroy()
                }
            }
            let u = (t, e, r) => new a(t, e).update(r).digest();
            u.create = (t, e) => new a(t, e);
            var c = r(30329),
                l = r(204); /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
            function h(t) {
                let e = (0, l.K)(t);
                c.FF(e, {
                    a: "field",
                    b: "field"
                }, {
                    allowedPrivateKeyLengths: "array",
                    wrapPrivateKey: "boolean",
                    isTorsionFree: "function",
                    clearCofactor: "function",
                    allowInfinityPoint: "boolean",
                    fromBytes: "function",
                    toBytes: "function"
                });
                let {
                    endo: r,
                    Fp: n,
                    a: i
                } = e;
                if (r) {
                    if (!n.eql(i, n.ZERO)) throw Error("Endomorphism can only be defined for Koblitz curves that have a=0");
                    if ("object" != typeof r || "bigint" != typeof r.beta || "function" != typeof r.splitScalar) throw Error("Expected endomorphism with beta: bigint and splitScalar: function")
                }
                return Object.freeze({ ...e
                })
            }
            let {
                bytesToNumberBE: f,
                hexToBytes: d
            } = c, p = {
                Err: class extends Error {
                    constructor(t = "") {
                        super(t)
                    }
                },
                _parseInt(t) {
                    let {
                        Err: e
                    } = p;
                    if (t.length < 2 || 2 !== t[0]) throw new e("Invalid signature integer tag");
                    let r = t[1],
                        n = t.subarray(2, r + 2);
                    if (!r || n.length !== r) throw new e("Invalid signature integer: wrong length");
                    if (128 & n[0]) throw new e("Invalid signature integer: negative");
                    if (0 === n[0] && !(128 & n[1])) throw new e("Invalid signature integer: unnecessary leading zero");
                    return {
                        d: f(n),
                        l: t.subarray(r + 2)
                    }
                },
                toSig(t) {
                    let {
                        Err: e
                    } = p, r = "string" == typeof t ? d(t) : t;
                    c.gk(r);
                    let n = r.length;
                    if (n < 2 || 48 != r[0]) throw new e("Invalid signature tag");
                    if (r[1] !== n - 2) throw new e("Invalid signature: incorrect length");
                    let {
                        d: i,
                        l: o
                    } = p._parseInt(r.subarray(2)), {
                        d: s,
                        l: a
                    } = p._parseInt(o);
                    if (a.length) throw new e("Invalid signature: left bytes after parsing");
                    return {
                        r: i,
                        s
                    }
                },
                hexFromSig(t) {
                    let e = t => 8 & Number.parseInt(t[0], 16) ? "00" + t : t,
                        r = t => {
                            let e = t.toString(16);
                            return 1 & e.length ? `0${e}` : e
                        },
                        n = e(r(t.s)),
                        i = e(r(t.r)),
                        o = n.length / 2,
                        s = i.length / 2,
                        a = r(o),
                        u = r(s);
                    return `30${r(s+o+4)}02${u}${i}02${a}${n}`
                }
            }, y = BigInt(0), m = BigInt(1), b = (BigInt(2), BigInt(3));

            function g(t) {
                let e = h(t),
                    {
                        Fp: r
                    } = e,
                    n = e.toBytes || ((t, e, n) => {
                        let i = e.toAffine();
                        return c.eV(Uint8Array.from([4]), r.toBytes(i.x), r.toBytes(i.y))
                    }),
                    o = e.fromBytes || (t => {
                        let e = t.subarray(1);
                        return {
                            x: r.fromBytes(e.subarray(0, r.BYTES)),
                            y: r.fromBytes(e.subarray(r.BYTES, 2 * r.BYTES))
                        }
                    });

                function s(t) {
                    let {
                        a: n,
                        b: i
                    } = e, o = r.sqr(t), s = r.mul(o, t);
                    return r.add(r.add(s, r.mul(t, n)), i)
                }
                if (!r.eql(r.sqr(e.Gy), s(e.Gx))) throw Error("bad generator point: equation left != right");

                function a(t) {
                    return "bigint" == typeof t && y < t && t < e.n
                }

                function u(t) {
                    if (!a(t)) throw Error("Expected valid bigint: 0 < bigint < curve.n")
                }

                function f(t) {
                    let r;
                    let {
                        allowedPrivateKeyLengths: n,
                        nByteLength: o,
                        wrapPrivateKey: s,
                        n: a
                    } = e;
                    if (n && "bigint" != typeof t) {
                        if (c._t(t) && (t = c.ci(t)), "string" != typeof t || !n.includes(t.length)) throw Error("Invalid key");
                        t = t.padStart(2 * o, "0")
                    }
                    try {
                        r = "bigint" == typeof t ? t : c.bytesToNumberBE((0, c.ql)("private key", t, o))
                    } catch (e) {
                        throw Error(`private key must be ${o} bytes, hex or bigint, not ${typeof t}`)
                    }
                    return s && (r = i.wQ(r, a)), u(r), r
                }
                let d = new Map;

                function p(t) {
                    if (!(t instanceof g)) throw Error("ProjectivePoint expected")
                }
                class g {
                    constructor(t, e, n) {
                        if (this.px = t, this.py = e, this.pz = n, null == t || !r.isValid(t)) throw Error("x required");
                        if (null == e || !r.isValid(e)) throw Error("y required");
                        if (null == n || !r.isValid(n)) throw Error("z required")
                    }
                    static fromAffine(t) {
                        let {
                            x: e,
                            y: n
                        } = t || {};
                        if (!t || !r.isValid(e) || !r.isValid(n)) throw Error("invalid affine point");
                        if (t instanceof g) throw Error("projective point not allowed");
                        let i = t => r.eql(t, r.ZERO);
                        return i(e) && i(n) ? g.ZERO : new g(e, n, r.ONE)
                    }
                    get x() {
                        return this.toAffine().x
                    }
                    get y() {
                        return this.toAffine().y
                    }
                    static normalizeZ(t) {
                        let e = r.invertBatch(t.map(t => t.pz));
                        return t.map((t, r) => t.toAffine(e[r])).map(g.fromAffine)
                    }
                    static fromHex(t) {
                        let e = g.fromAffine(o((0, c.ql)("pointHex", t)));
                        return e.assertValidity(), e
                    }
                    static fromPrivateKey(t) {
                        return g.BASE.multiply(f(t))
                    }
                    _setWindowSize(t) {
                        this._WINDOW_SIZE = t, d.delete(this)
                    }
                    assertValidity() {
                        if (this.is0()) {
                            if (e.allowInfinityPoint && !r.is0(this.py)) return;
                            throw Error("bad point: ZERO")
                        }
                        let {
                            x: t,
                            y: n
                        } = this.toAffine();
                        if (!r.isValid(t) || !r.isValid(n)) throw Error("bad point: x or y not FE");
                        let i = r.sqr(n),
                            o = s(t);
                        if (!r.eql(i, o)) throw Error("bad point: equation left != right");
                        if (!this.isTorsionFree()) throw Error("bad point: not in prime-order subgroup")
                    }
                    hasEvenY() {
                        let {
                            y: t
                        } = this.toAffine();
                        if (r.isOdd) return !r.isOdd(t);
                        throw Error("Field doesn't support isOdd")
                    }
                    equals(t) {
                        p(t);
                        let {
                            px: e,
                            py: n,
                            pz: i
                        } = this, {
                            px: o,
                            py: s,
                            pz: a
                        } = t, u = r.eql(r.mul(e, a), r.mul(o, i)), c = r.eql(r.mul(n, a), r.mul(s, i));
                        return u && c
                    }
                    negate() {
                        return new g(this.px, r.neg(this.py), this.pz)
                    }
                    double() {
                        let {
                            a: t,
                            b: n
                        } = e, i = r.mul(n, b), {
                            px: o,
                            py: s,
                            pz: a
                        } = this, u = r.ZERO, c = r.ZERO, l = r.ZERO, h = r.mul(o, o), f = r.mul(s, s), d = r.mul(a, a), p = r.mul(o, s);
                        return p = r.add(p, p), l = r.mul(o, a), l = r.add(l, l), u = r.mul(t, l), c = r.mul(i, d), c = r.add(u, c), u = r.sub(f, c), c = r.add(f, c), c = r.mul(u, c), u = r.mul(p, u), l = r.mul(i, l), d = r.mul(t, d), p = r.sub(h, d), p = r.mul(t, p), p = r.add(p, l), l = r.add(h, h), h = r.add(l, h), h = r.add(h, d), h = r.mul(h, p), c = r.add(c, h), d = r.mul(s, a), d = r.add(d, d), h = r.mul(d, p), u = r.sub(u, h), l = r.mul(d, f), l = r.add(l, l), new g(u, c, l = r.add(l, l))
                    }
                    add(t) {
                        p(t);
                        let {
                            px: n,
                            py: i,
                            pz: o
                        } = this, {
                            px: s,
                            py: a,
                            pz: u
                        } = t, c = r.ZERO, l = r.ZERO, h = r.ZERO, f = e.a, d = r.mul(e.b, b), y = r.mul(n, s), m = r.mul(i, a), w = r.mul(o, u), v = r.add(n, i), E = r.add(s, a);
                        v = r.mul(v, E), E = r.add(y, m), v = r.sub(v, E), E = r.add(n, o);
                        let x = r.add(s, u);
                        return E = r.mul(E, x), x = r.add(y, w), E = r.sub(E, x), x = r.add(i, o), c = r.add(a, u), x = r.mul(x, c), c = r.add(m, w), x = r.sub(x, c), h = r.mul(f, E), c = r.mul(d, w), h = r.add(c, h), c = r.sub(m, h), h = r.add(m, h), l = r.mul(c, h), m = r.add(y, y), m = r.add(m, y), w = r.mul(f, w), E = r.mul(d, E), m = r.add(m, w), w = r.sub(y, w), w = r.mul(f, w), E = r.add(E, w), y = r.mul(m, E), l = r.add(l, y), y = r.mul(x, E), c = r.mul(v, c), c = r.sub(c, y), y = r.mul(v, m), h = r.mul(x, h), new g(c, l, h = r.add(h, y))
                    }
                    subtract(t) {
                        return this.add(t.negate())
                    }
                    is0() {
                        return this.equals(g.ZERO)
                    }
                    wNAF(t) {
                        return v.wNAFCached(this, d, t, t => {
                            let e = r.invertBatch(t.map(t => t.pz));
                            return t.map((t, r) => t.toAffine(e[r])).map(g.fromAffine)
                        })
                    }
                    multiplyUnsafe(t) {
                        let n = g.ZERO;
                        if (t === y) return n;
                        if (u(t), t === m) return this;
                        let {
                            endo: i
                        } = e;
                        if (!i) return v.unsafeLadder(this, t);
                        let {
                            k1neg: o,
                            k1: s,
                            k2neg: a,
                            k2: c
                        } = i.splitScalar(t), l = n, h = n, f = this;
                        for (; s > y || c > y;) s & m && (l = l.add(f)), c & m && (h = h.add(f)), f = f.double(), s >>= m, c >>= m;
                        return o && (l = l.negate()), a && (h = h.negate()), h = new g(r.mul(h.px, i.beta), h.py, h.pz), l.add(h)
                    }
                    multiply(t) {
                        let n, i;
                        u(t);
                        let o = t,
                            {
                                endo: s
                            } = e;
                        if (s) {
                            let {
                                k1neg: t,
                                k1: e,
                                k2neg: a,
                                k2: u
                            } = s.splitScalar(o), {
                                p: c,
                                f: l
                            } = this.wNAF(e), {
                                p: h,
                                f: f
                            } = this.wNAF(u);
                            c = v.constTimeNegate(t, c), h = v.constTimeNegate(a, h), h = new g(r.mul(h.px, s.beta), h.py, h.pz), n = c.add(h), i = l.add(f)
                        } else {
                            let {
                                p: t,
                                f: e
                            } = this.wNAF(o);
                            n = t, i = e
                        }
                        return g.normalizeZ([n, i])[0]
                    }
                    multiplyAndAddUnsafe(t, e, r) {
                        let n = g.BASE,
                            i = (t, e) => e !== y && e !== m && t.equals(n) ? t.multiply(e) : t.multiplyUnsafe(e),
                            o = i(this, e).add(i(t, r));
                        return o.is0() ? void 0 : o
                    }
                    toAffine(t) {
                        let {
                            px: e,
                            py: n,
                            pz: i
                        } = this, o = this.is0();
                        null == t && (t = o ? r.ONE : r.inv(i));
                        let s = r.mul(e, t),
                            a = r.mul(n, t),
                            u = r.mul(i, t);
                        if (o) return {
                            x: r.ZERO,
                            y: r.ZERO
                        };
                        if (!r.eql(u, r.ONE)) throw Error("invZ was invalid");
                        return {
                            x: s,
                            y: a
                        }
                    }
                    isTorsionFree() {
                        let {
                            h: t,
                            isTorsionFree: r
                        } = e;
                        if (t === m) return !0;
                        if (r) return r(g, this);
                        throw Error("isTorsionFree() has not been declared for the elliptic curve")
                    }
                    clearCofactor() {
                        let {
                            h: t,
                            clearCofactor: r
                        } = e;
                        return t === m ? this : r ? r(g, this) : this.multiplyUnsafe(e.h)
                    }
                    toRawBytes(t = !0) {
                        return this.assertValidity(), n(g, this, t)
                    }
                    toHex(t = !0) {
                        return c.ci(this.toRawBytes(t))
                    }
                }
                g.BASE = new g(e.Gx, e.Gy, r.ONE), g.ZERO = new g(r.ZERO, r.ONE, r.ZERO);
                let w = e.nBitLength,
                    v = (0, l.M)(g, e.endo ? Math.ceil(w / 2) : w);
                return {
                    CURVE: e,
                    ProjectivePoint: g,
                    normPrivateKeyToScalar: f,
                    weierstrassEquation: s,
                    isWithinCurveOrder: a
                }
            }

            function w(t) {
                let e = (0, l.K)(t);
                return c.FF(e, {
                    hash: "hash",
                    hmac: "function",
                    randomBytes: "function"
                }, {
                    bits2int: "function",
                    bits2int_modN: "function",
                    lowS: "boolean"
                }), Object.freeze({
                    lowS: !0,
                    ...e
                })
            }

            function v(t) {
                let e = w(t),
                    {
                        Fp: r,
                        n: n
                    } = e,
                    o = r.BYTES + 1,
                    s = 2 * r.BYTES + 1;

                function a(t) {
                    return y < t && t < r.ORDER
                }

                function u(t) {
                    return i.wQ(t, n)
                }

                function l(t) {
                    return i.U_(t, n)
                }
                let {
                    ProjectivePoint: h,
                    normPrivateKeyToScalar: f,
                    weierstrassEquation: d,
                    isWithinCurveOrder: b
                } = g({ ...e,
                    toBytes(t, e, n) {
                        let i = e.toAffine(),
                            o = r.toBytes(i.x),
                            s = c.eV;
                        return n ? s(Uint8Array.from([e.hasEvenY() ? 2 : 3]), o) : s(Uint8Array.from([4]), o, r.toBytes(i.y))
                    },
                    fromBytes(t) {
                        let e = t.length,
                            n = t[0],
                            i = t.subarray(1);
                        if (e === o && (2 === n || 3 === n)) {
                            let t;
                            let e = c.bytesToNumberBE(i);
                            if (!a(e)) throw Error("Point is not on curve");
                            let o = d(e);
                            try {
                                t = r.sqrt(o)
                            } catch (t) {
                                throw Error("Point is not on curve" + (t instanceof Error ? ": " + t.message : ""))
                            }
                            return (1 & n) == 1 != ((t & m) === m) && (t = r.neg(t)), {
                                x: e,
                                y: t
                            }
                        }
                        if (e === s && 4 === n) return {
                            x: r.fromBytes(i.subarray(0, r.BYTES)),
                            y: r.fromBytes(i.subarray(r.BYTES, 2 * r.BYTES))
                        };
                        throw Error(`Point of length ${e} was invalid. Expected ${o} compressed bytes or ${s} uncompressed bytes`)
                    }
                }), v = t => c.ci(c.tL(t, e.nByteLength));

                function E(t) {
                    return t > n >> m
                }

                function x(t) {
                    return E(t) ? u(-t) : t
                }
                let S = (t, e, r) => c.bytesToNumberBE(t.slice(e, r));
                class O {
                    constructor(t, e, r) {
                        this.r = t, this.s = e, this.recovery = r, this.assertValidity()
                    }
                    static fromCompact(t) {
                        let r = e.nByteLength;
                        return new O(S(t = (0, c.ql)("compactSignature", t, 2 * r), 0, r), S(t, r, 2 * r))
                    }
                    static fromDER(t) {
                        let {
                            r: e,
                            s: r
                        } = p.toSig((0, c.ql)("DER", t));
                        return new O(e, r)
                    }
                    assertValidity() {
                        if (!b(this.r)) throw Error("r must be 0 < r < CURVE.n");
                        if (!b(this.s)) throw Error("s must be 0 < s < CURVE.n")
                    }
                    addRecoveryBit(t) {
                        return new O(this.r, this.s, t)
                    }
                    recoverPublicKey(t) {
                        let {
                            r: n,
                            s: i,
                            recovery: o
                        } = this, s = D((0, c.ql)("msgHash", t));
                        if (null == o || ![0, 1, 2, 3].includes(o)) throw Error("recovery id invalid");
                        let a = 2 === o || 3 === o ? n + e.n : n;
                        if (a >= r.ORDER) throw Error("recovery id 2 or 3 invalid");
                        let f = (1 & o) == 0 ? "02" : "03",
                            d = h.fromHex(f + v(a)),
                            p = l(a),
                            y = u(-s * p),
                            m = u(i * p),
                            b = h.BASE.multiplyAndAddUnsafe(d, y, m);
                        if (!b) throw Error("point at infinify");
                        return b.assertValidity(), b
                    }
                    hasHighS() {
                        return E(this.s)
                    }
                    normalizeS() {
                        return this.hasHighS() ? new O(this.r, u(-this.s), this.recovery) : this
                    }
                    toDERRawBytes() {
                        return c.hexToBytes(this.toDERHex())
                    }
                    toDERHex() {
                        return p.hexFromSig({
                            r: this.r,
                            s: this.s
                        })
                    }
                    toCompactRawBytes() {
                        return c.hexToBytes(this.toCompactHex())
                    }
                    toCompactHex() {
                        return v(this.r) + v(this.s)
                    }
                }
                let C = {
                    isValidPrivateKey(t) {
                        try {
                            return f(t), !0
                        } catch (t) {
                            return !1
                        }
                    },
                    normPrivateKeyToScalar: f,
                    randomPrivateKey: () => {
                        let t = i.PS(e.n);
                        return i.Us(e.randomBytes(t), e.n)
                    },
                    precompute: (t = 8, e = h.BASE) => (e._setWindowSize(t), e.multiply(BigInt(3)), e)
                };

                function _(t, e = !0) {
                    return h.fromPrivateKey(t).toRawBytes(e)
                }

                function A(t) {
                    let e = c._t(t),
                        r = "string" == typeof t,
                        n = (e || r) && t.length;
                    return e ? n === o || n === s : r ? n === 2 * o || n === 2 * s : t instanceof h
                }

                function P(t, e, r = !0) {
                    if (A(t)) throw Error("first arg must be private key");
                    if (!A(e)) throw Error("second arg must be public key");
                    return h.fromHex(e).multiply(f(t)).toRawBytes(r)
                }
                let k = e.bits2int || function(t) {
                        let r = c.bytesToNumberBE(t),
                            n = 8 * t.length - e.nBitLength;
                        return n > 0 ? r >> BigInt(n) : r
                    },
                    D = e.bits2int_modN || function(t) {
                        return u(k(t))
                    },
                    I = c.dQ(e.nBitLength);

                function M(t) {
                    if ("bigint" != typeof t) throw Error("bigint expected");
                    if (!(y <= t && t < I)) throw Error(`bigint expected < 2^${e.nBitLength}`);
                    return c.tL(t, e.nByteLength)
                }

                function B(t, n, i = R) {
                    if (["recovered", "canonical"].some(t => t in i)) throw Error("sign() legacy options not supported");
                    let {
                        hash: o,
                        randomBytes: s
                    } = e, {
                        lowS: a,
                        prehash: d,
                        extraEntropy: p
                    } = i;
                    null == a && (a = !0), t = (0, c.ql)("msgHash", t), d && (t = (0, c.ql)("prehashed msgHash", o(t)));
                    let g = D(t),
                        w = f(n),
                        v = [M(w), M(g)];
                    if (null != p && !1 !== p) {
                        let t = !0 === p ? s(r.BYTES) : p;
                        v.push((0, c.ql)("extraEntropy", t))
                    }
                    let S = c.eV(...v),
                        C = g;
                    return {
                        seed: S,
                        k2sig: function(t) {
                            let e = k(t);
                            if (!b(e)) return;
                            let r = l(e),
                                n = h.BASE.multiply(e).toAffine(),
                                i = u(n.x);
                            if (i === y) return;
                            let o = u(r * u(C + i * w));
                            if (o === y) return;
                            let s = (n.x === i ? 0 : 2) | Number(n.y & m),
                                c = o;
                            return a && E(o) && (c = x(o), s ^= 1), new O(i, c, s)
                        }
                    }
                }
                let R = {
                        lowS: e.lowS,
                        prehash: !1
                    },
                    T = {
                        lowS: e.lowS,
                        prehash: !1
                    };

                function j(t, r, n = R) {
                    let {
                        seed: i,
                        k2sig: o
                    } = B(t, r, n), s = e;
                    return c.n$(s.hash.outputLen, s.nByteLength, s.hmac)(i, o)
                }

                function U(t, r, n, i = T) {
                    let o, s;
                    let a = t;
                    if (r = (0, c.ql)("msgHash", r), n = (0, c.ql)("publicKey", n), "strict" in i) throw Error("options.strict was renamed to lowS");
                    let {
                        lowS: f,
                        prehash: d
                    } = i;
                    try {
                        if ("string" == typeof a || c._t(a)) try {
                            s = O.fromDER(a)
                        } catch (t) {
                            if (!(t instanceof p.Err)) throw t;
                            s = O.fromCompact(a)
                        } else if ("object" == typeof a && "bigint" == typeof a.r && "bigint" == typeof a.s) {
                            let {
                                r: t,
                                s: e
                            } = a;
                            s = new O(t, e)
                        } else throw Error("PARSE");
                        o = h.fromHex(n)
                    } catch (t) {
                        if ("PARSE" === t.message) throw Error("signature must be Signature instance, Uint8Array or hex string");
                        return !1
                    }
                    if (f && s.hasHighS()) return !1;
                    d && (r = e.hash(r));
                    let {
                        r: y,
                        s: m
                    } = s, b = D(r), g = l(m), w = u(b * g), v = u(y * g), E = h.BASE.multiplyAndAddUnsafe(o, w, v) ? .toAffine();
                    return !!E && u(E.x) === y
                }
                return h.BASE._setWindowSize(8), {
                    CURVE: e,
                    getPublicKey: _,
                    getSharedSecret: P,
                    sign: j,
                    verify: U,
                    ProjectivePoint: h,
                    Signature: O,
                    utils: C
                }
            } /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
            function E(t) {
                return {
                    hash: t,
                    hmac: (e, ...r) => u(t, e, (0, s.eV)(...r)),
                    randomBytes: s.O6
                }
            }

            function x(t, e) {
                let r = e => v({ ...t,
                    ...E(e)
                });
                return Object.freeze({ ...r(e),
                    create: r
                })
            }
            BigInt(4); /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
            let S = BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"),
                O = BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),
                C = BigInt(1),
                _ = BigInt(2),
                A = (t, e) => (t + e / _) / e;

            function P(t) {
                let e = S,
                    r = BigInt(3),
                    n = BigInt(6),
                    o = BigInt(11),
                    s = BigInt(22),
                    a = BigInt(23),
                    u = BigInt(44),
                    c = BigInt(88),
                    l = t * t * t % e,
                    h = l * l * t % e,
                    f = (0, i.oA)(h, r, e) * h % e,
                    d = (0, i.oA)(f, r, e) * h % e,
                    p = (0, i.oA)(d, _, e) * l % e,
                    y = (0, i.oA)(p, o, e) * p % e,
                    m = (0, i.oA)(y, s, e) * y % e,
                    b = (0, i.oA)(m, u, e) * m % e,
                    g = (0, i.oA)(b, c, e) * b % e,
                    w = (0, i.oA)(g, u, e) * m % e,
                    v = (0, i.oA)(w, r, e) * h % e,
                    E = (0, i.oA)(v, a, e) * y % e,
                    x = (0, i.oA)(E, n, e) * l % e,
                    O = (0, i.oA)(x, _, e);
                if (!k.eql(k.sqr(O), t)) throw Error("Cannot find square root");
                return O
            }
            let k = (0, i.gN)(S, void 0, void 0, {
                    sqrt: P
                }),
                D = x({
                    a: BigInt(0),
                    b: BigInt(7),
                    Fp: k,
                    n: O,
                    Gx: BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),
                    Gy: BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),
                    h: BigInt(1),
                    lowS: !0,
                    endo: {
                        beta: BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),
                        splitScalar: t => {
                            let e = O,
                                r = BigInt("0x3086d221a7d46bcde86c90e49284eb15"),
                                n = -C * BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),
                                o = BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),
                                s = r,
                                a = BigInt("0x100000000000000000000000000000000"),
                                u = A(s * t, e),
                                c = A(-n * t, e),
                                l = (0, i.wQ)(t - u * r - c * o, e),
                                h = (0, i.wQ)(-u * n - c * s, e),
                                f = l > a,
                                d = h > a;
                            if (f && (l = e - l), d && (h = e - h), l > a || h > a) throw Error("splitScalar: Endomorphism failed, k=" + t);
                            return {
                                k1neg: f,
                                k1: l,
                                k2neg: d,
                                k2: h
                            }
                        }
                    }
                }, n.J),
                I = BigInt(0),
                M = t => "bigint" == typeof t && I < t && t < S,
                B = {};

            function R(t, ...e) {
                let r = B[t];
                if (void 0 === r) {
                    let e = sha256(Uint8Array.from(t, t => t.charCodeAt(0)));
                    r = concatBytes(e, e), B[t] = r
                }
                return sha256(concatBytes(r, ...e))
            }
            let T = t => mod(t, S),
                j = t => mod(t, O),
                U = D.ProjectivePoint
        },
        48680: function(t, e, r) {
            "use strict";

            function n(t) {
                if (!Number.isSafeInteger(t) || t < 0) throw Error(`positive integer expected, not ${t}`)
            }

            function i(t) {
                return t instanceof Uint8Array || null != t && "object" == typeof t && "Uint8Array" === t.constructor.name
            }

            function o(t, ...e) {
                if (!i(t)) throw Error("Uint8Array expected");
                if (e.length > 0 && !e.includes(t.length)) throw Error(`Uint8Array expected of length ${e}, not of length=${t.length}`)
            }

            function s(t) {
                if ("function" != typeof t || "function" != typeof t.create) throw Error("Hash should be wrapped by utils.wrapConstructor");
                n(t.outputLen), n(t.blockLen)
            }

            function a(t, e = !0) {
                if (t.destroyed) throw Error("Hash instance has been destroyed");
                if (e && t.finished) throw Error("Hash#digest() has already been called")
            }

            function u(t, e) {
                o(t);
                let r = e.outputLen;
                if (t.length < r) throw Error(`digestInto() expects output buffer of length at least ${r}`)
            }
            r.d(e, {
                Gg: function() {
                    return a
                },
                J8: function() {
                    return u
                },
                Rx: function() {
                    return n
                },
                aI: function() {
                    return o
                },
                vp: function() {
                    return s
                }
            })
        },
        13620: function(t, e, r) {
            "use strict";
            r.d(e, {
                VR: function() {
                    return u
                },
                bc: function() {
                    return s
                },
                l3: function() {
                    return a
                }
            });
            var n = r(48680),
                i = r(19394);

            function o(t, e, r, n) {
                if ("function" == typeof t.setBigUint64) return t.setBigUint64(e, r, n);
                let i = BigInt(32),
                    o = BigInt(4294967295),
                    s = Number(r >> i & o),
                    a = Number(r & o),
                    u = n ? 4 : 0,
                    c = n ? 0 : 4;
                t.setUint32(e + u, s, n), t.setUint32(e + c, a, n)
            }
            let s = (t, e, r) => t & e ^ ~t & r,
                a = (t, e, r) => t & e ^ t & r ^ e & r;
            class u extends i.kb {
                constructor(t, e, r, n) {
                    super(), this.blockLen = t, this.outputLen = e, this.padOffset = r, this.isLE = n, this.finished = !1, this.length = 0, this.pos = 0, this.destroyed = !1, this.buffer = new Uint8Array(t), this.view = (0, i.GL)(this.buffer)
                }
                update(t) {
                    (0, n.Gg)(this);
                    let {
                        view: e,
                        buffer: r,
                        blockLen: o
                    } = this, s = (t = (0, i.O0)(t)).length;
                    for (let n = 0; n < s;) {
                        let a = Math.min(o - this.pos, s - n);
                        if (a === o) {
                            let e = (0, i.GL)(t);
                            for (; o <= s - n; n += o) this.process(e, n);
                            continue
                        }
                        r.set(t.subarray(n, n + a), this.pos), this.pos += a, n += a, this.pos === o && (this.process(e, 0), this.pos = 0)
                    }
                    return this.length += t.length, this.roundClean(), this
                }
                digestInto(t) {
                    (0, n.Gg)(this), (0, n.J8)(t, this), this.finished = !0;
                    let {
                        buffer: e,
                        view: r,
                        blockLen: s,
                        isLE: a
                    } = this, {
                        pos: u
                    } = this;
                    e[u++] = 128, this.buffer.subarray(u).fill(0), this.padOffset > s - u && (this.process(r, 0), u = 0);
                    for (let t = u; t < s; t++) e[t] = 0;
                    o(r, s - 8, BigInt(8 * this.length), a), this.process(r, 0);
                    let c = (0, i.GL)(t),
                        l = this.outputLen;
                    if (l % 4) throw Error("_sha2: outputLen should be aligned to 32bit");
                    let h = l / 4,
                        f = this.get();
                    if (h > f.length) throw Error("_sha2: outputLen bigger than state");
                    for (let t = 0; t < h; t++) c.setUint32(4 * t, f[t], a)
                }
                digest() {
                    let {
                        buffer: t,
                        outputLen: e
                    } = this;
                    this.digestInto(t);
                    let r = t.slice(0, e);
                    return this.destroy(), r
                }
                _cloneInto(t) {
                    t || (t = new this.constructor), t.set(...this.get());
                    let {
                        blockLen: e,
                        buffer: r,
                        length: n,
                        finished: i,
                        destroyed: o,
                        pos: s
                    } = this;
                    return t.length = n, t.pos = s, t.finished = i, t.destroyed = o, n % e && t.buffer.set(r), t
                }
            }
        },
        62671: function(t, e, r) {
            "use strict";
            r.d(e, {
                EP: function() {
                    return a
                },
                SD: function() {
                    return c
                },
                Vl: function() {
                    return s
                },
                gm: function() {
                    return u
                },
                mk: function() {
                    return l
                }
            });
            let n = BigInt(4294967296 - 1),
                i = BigInt(32);

            function o(t, e = !1) {
                return e ? {
                    h: Number(t & n),
                    l: Number(t >> i & n)
                } : {
                    h: 0 | Number(t >> i & n),
                    l: 0 | Number(t & n)
                }
            }

            function s(t, e = !1) {
                let r = new Uint32Array(t.length),
                    n = new Uint32Array(t.length);
                for (let i = 0; i < t.length; i++) {
                    let {
                        h: s,
                        l: a
                    } = o(t[i], e);
                    [r[i], n[i]] = [s, a]
                }
                return [r, n]
            }
            let a = (t, e, r) => t << r | e >>> 32 - r,
                u = (t, e, r) => e << r | t >>> 32 - r,
                c = (t, e, r) => e << r - 32 | t >>> 64 - r,
                l = (t, e, r) => t << r - 32 | e >>> 64 - r,
                h = {
                    fromBig: o,
                    split: s,
                    toBig: (t, e) => BigInt(t >>> 0) << i | BigInt(e >>> 0),
                    shrSH: (t, e, r) => t >>> r,
                    shrSL: (t, e, r) => t << 32 - r | e >>> r,
                    rotrSH: (t, e, r) => t >>> r | e << 32 - r,
                    rotrSL: (t, e, r) => t << 32 - r | e >>> r,
                    rotrBH: (t, e, r) => t << 64 - r | e >>> r - 32,
                    rotrBL: (t, e, r) => t >>> r - 32 | e << 64 - r,
                    rotr32H: (t, e) => e,
                    rotr32L: (t, e) => t,
                    rotlSH: a,
                    rotlSL: u,
                    rotlBH: c,
                    rotlBL: l,
                    add: function(t, e, r, n) {
                        let i = (e >>> 0) + (n >>> 0);
                        return {
                            h: t + r + (i / 4294967296 | 0) | 0,
                            l: 0 | i
                        }
                    },
                    add3L: (t, e, r) => (t >>> 0) + (e >>> 0) + (r >>> 0),
                    add3H: (t, e, r, n) => e + r + n + (t / 4294967296 | 0) | 0,
                    add4L: (t, e, r, n) => (t >>> 0) + (e >>> 0) + (r >>> 0) + (n >>> 0),
                    add4H: (t, e, r, n, i) => e + r + n + i + (t / 4294967296 | 0) | 0,
                    add5H: (t, e, r, n, i, o) => e + r + n + i + o + (t / 4294967296 | 0) | 0,
                    add5L: (t, e, r, n, i) => (t >>> 0) + (e >>> 0) + (r >>> 0) + (n >>> 0) + (i >>> 0)
                };
            e.ZP = h
        },
        58061: function(t, e, r) {
            "use strict";
            r.d(e, {
                J: function() {
                    return c
                }
            });
            var n = r(13620),
                i = r(19394);
            let o = new Uint32Array([1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298]),
                s = new Uint32Array([1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225]),
                a = new Uint32Array(64);
            class u extends n.VR {
                constructor() {
                    super(64, 32, 8, !1), this.A = 0 | s[0], this.B = 0 | s[1], this.C = 0 | s[2], this.D = 0 | s[3], this.E = 0 | s[4], this.F = 0 | s[5], this.G = 0 | s[6], this.H = 0 | s[7]
                }
                get() {
                    let {
                        A: t,
                        B: e,
                        C: r,
                        D: n,
                        E: i,
                        F: o,
                        G: s,
                        H: a
                    } = this;
                    return [t, e, r, n, i, o, s, a]
                }
                set(t, e, r, n, i, o, s, a) {
                    this.A = 0 | t, this.B = 0 | e, this.C = 0 | r, this.D = 0 | n, this.E = 0 | i, this.F = 0 | o, this.G = 0 | s, this.H = 0 | a
                }
                process(t, e) {
                    for (let r = 0; r < 16; r++, e += 4) a[r] = t.getUint32(e, !1);
                    for (let t = 16; t < 64; t++) {
                        let e = a[t - 15],
                            r = a[t - 2],
                            n = (0, i.np)(e, 7) ^ (0, i.np)(e, 18) ^ e >>> 3,
                            o = (0, i.np)(r, 17) ^ (0, i.np)(r, 19) ^ r >>> 10;
                        a[t] = o + a[t - 7] + n + a[t - 16] | 0
                    }
                    let {
                        A: r,
                        B: s,
                        C: u,
                        D: c,
                        E: l,
                        F: h,
                        G: f,
                        H: d
                    } = this;
                    for (let t = 0; t < 64; t++) {
                        let e = d + ((0, i.np)(l, 6) ^ (0, i.np)(l, 11) ^ (0, i.np)(l, 25)) + (0, n.bc)(l, h, f) + o[t] + a[t] | 0,
                            p = ((0, i.np)(r, 2) ^ (0, i.np)(r, 13) ^ (0, i.np)(r, 22)) + (0, n.l3)(r, s, u) | 0;
                        d = f, f = h, h = l, l = c + e | 0, c = u, u = s, s = r, r = e + p | 0
                    }
                    r = r + this.A | 0, s = s + this.B | 0, u = u + this.C | 0, c = c + this.D | 0, l = l + this.E | 0, h = h + this.F | 0, f = f + this.G | 0, d = d + this.H | 0, this.set(r, s, u, c, l, h, f, d)
                }
                roundClean() {
                    a.fill(0)
                }
                destroy() {
                    this.set(0, 0, 0, 0, 0, 0, 0, 0), this.buffer.fill(0)
                }
            }
            let c = (0, i.hE)(() => new u)
        },
        68154: function(t, e, r) {
            "use strict";
            let n, i, o;
            r.d(e, {
                fr: function() {
                    return O
                }
            });
            var s = r(48680),
                a = r(62671),
                u = r(19394);
            let c = [],
                l = [],
                h = [],
                f = BigInt(0),
                d = BigInt(1),
                p = BigInt(2),
                y = BigInt(7),
                m = BigInt(256),
                b = BigInt(113);
            for (let t = 0, e = d, r = 1, n = 0; t < 24; t++) {
                [r, n] = [n, (2 * r + 3 * n) % 5], c.push(2 * (5 * n + r)), l.push((t + 1) * (t + 2) / 2 % 64);
                let i = f;
                for (let t = 0; t < 7; t++)(e = (e << d ^ (e >> y) * b) % m) & p && (i ^= d << (d << BigInt(t)) - d);
                h.push(i)
            }
            let [g, w] = (0, a.Vl)(h, !0), v = (t, e, r) => r > 32 ? (0, a.SD)(t, e, r) : (0, a.EP)(t, e, r), E = (t, e, r) => r > 32 ? (0, a.mk)(t, e, r) : (0, a.gm)(t, e, r);

            function x(t, e = 24) {
                let r = new Uint32Array(10);
                for (let n = 24 - e; n < 24; n++) {
                    for (let e = 0; e < 10; e++) r[e] = t[e] ^ t[e + 10] ^ t[e + 20] ^ t[e + 30] ^ t[e + 40];
                    for (let e = 0; e < 10; e += 2) {
                        let n = (e + 8) % 10,
                            i = (e + 2) % 10,
                            o = r[i],
                            s = r[i + 1],
                            a = v(o, s, 1) ^ r[n],
                            u = E(o, s, 1) ^ r[n + 1];
                        for (let r = 0; r < 50; r += 10) t[e + r] ^= a, t[e + r + 1] ^= u
                    }
                    let e = t[2],
                        i = t[3];
                    for (let r = 0; r < 24; r++) {
                        let n = l[r],
                            o = v(e, i, n),
                            s = E(e, i, n),
                            a = c[r];
                        e = t[a], i = t[a + 1], t[a] = o, t[a + 1] = s
                    }
                    for (let e = 0; e < 50; e += 10) {
                        for (let n = 0; n < 10; n++) r[n] = t[e + n];
                        for (let n = 0; n < 10; n++) t[e + n] ^= ~r[(n + 2) % 10] & r[(n + 4) % 10]
                    }
                    t[0] ^= g[n], t[1] ^= w[n]
                }
                r.fill(0)
            }
            class S extends u.kb {
                constructor(t, e, r, n = !1, i = 24) {
                    if (super(), this.blockLen = t, this.suffix = e, this.outputLen = r, this.enableXOF = n, this.rounds = i, this.pos = 0, this.posOut = 0, this.finished = !1, this.destroyed = !1, (0, s.Rx)(r), 0 >= this.blockLen || this.blockLen >= 200) throw Error("Sha3 supports only keccak-f1600 function");
                    this.state = new Uint8Array(200), this.state32 = (0, u.Jq)(this.state)
                }
                keccak() {
                    u.iA || (0, u.l1)(this.state32), x(this.state32, this.rounds), u.iA || (0, u.l1)(this.state32), this.posOut = 0, this.pos = 0
                }
                update(t) {
                    (0, s.Gg)(this);
                    let {
                        blockLen: e,
                        state: r
                    } = this, n = (t = (0, u.O0)(t)).length;
                    for (let i = 0; i < n;) {
                        let o = Math.min(e - this.pos, n - i);
                        for (let e = 0; e < o; e++) r[this.pos++] ^= t[i++];
                        this.pos === e && this.keccak()
                    }
                    return this
                }
                finish() {
                    if (this.finished) return;
                    this.finished = !0;
                    let {
                        state: t,
                        suffix: e,
                        pos: r,
                        blockLen: n
                    } = this;
                    t[r] ^= e, (128 & e) != 0 && r === n - 1 && this.keccak(), t[n - 1] ^= 128, this.keccak()
                }
                writeInto(t) {
                    (0, s.Gg)(this, !1), (0, s.aI)(t), this.finish();
                    let e = this.state,
                        {
                            blockLen: r
                        } = this;
                    for (let n = 0, i = t.length; n < i;) {
                        this.posOut >= r && this.keccak();
                        let o = Math.min(r - this.posOut, i - n);
                        t.set(e.subarray(this.posOut, this.posOut + o), n), this.posOut += o, n += o
                    }
                    return t
                }
                xofInto(t) {
                    if (!this.enableXOF) throw Error("XOF is not possible for this instance");
                    return this.writeInto(t)
                }
                xof(t) {
                    return (0, s.Rx)(t), this.xofInto(new Uint8Array(t))
                }
                digestInto(t) {
                    if ((0, s.J8)(t, this), this.finished) throw Error("digest() was already called");
                    return this.writeInto(t), this.destroy(), t
                }
                digest() {
                    return this.digestInto(new Uint8Array(this.outputLen))
                }
                destroy() {
                    this.destroyed = !0, this.state.fill(0)
                }
                _cloneInto(t) {
                    let {
                        blockLen: e,
                        suffix: r,
                        outputLen: n,
                        rounds: i,
                        enableXOF: o
                    } = this;
                    return t || (t = new S(e, r, n, o, i)), t.state32.set(this.state32), t.pos = this.pos, t.posOut = this.posOut, t.finished = this.finished, t.rounds = i, t.suffix = r, t.outputLen = n, t.enableXOF = o, t.destroyed = this.destroyed, t
                }
            }
            let O = (n = 1, i = 136, o = 32, (0, u.hE)(() => new S(i, n, o)))
        },
        19394: function(t, e, r) {
            "use strict";
            r.d(e, {
                kb: function() {
                    return p
                },
                l1: function() {
                    return l
                },
                eV: function() {
                    return d
                },
                GL: function() {
                    return s
                },
                iA: function() {
                    return u
                },
                O6: function() {
                    return m
                },
                np: function() {
                    return a
                },
                O0: function() {
                    return f
                },
                Jq: function() {
                    return o
                },
                iY: function() {
                    return h
                },
                hE: function() {
                    return y
                }
            });
            let n = "object" == typeof globalThis && "crypto" in globalThis ? globalThis.crypto : void 0;
            var i = r(48680);
            let o = t => new Uint32Array(t.buffer, t.byteOffset, Math.floor(t.byteLength / 4)),
                s = t => new DataView(t.buffer, t.byteOffset, t.byteLength),
                a = (t, e) => t << 32 - e | t >>> e,
                u = 68 === new Uint8Array(new Uint32Array([287454020]).buffer)[0],
                c = t => t << 24 & 4278190080 | t << 8 & 16711680 | t >>> 8 & 65280 | t >>> 24 & 255;

            function l(t) {
                for (let e = 0; e < t.length; e++) t[e] = c(t[e])
            }

            function h(t) {
                if ("string" != typeof t) throw Error(`utf8ToBytes expected string, got ${typeof t}`);
                return new Uint8Array(new TextEncoder().encode(t))
            }

            function f(t) {
                return "string" == typeof t && (t = h(t)), (0, i.aI)(t), t
            }

            function d(...t) {
                let e = 0;
                for (let r = 0; r < t.length; r++) {
                    let n = t[r];
                    (0, i.aI)(n), e += n.length
                }
                let r = new Uint8Array(e);
                for (let e = 0, n = 0; e < t.length; e++) {
                    let i = t[e];
                    r.set(i, n), n += i.length
                }
                return r
            }
            class p {
                clone() {
                    return this._cloneInto()
                }
            }

            function y(t) {
                let e = e => t().update(f(e)).digest(),
                    r = t();
                return e.outputLen = r.outputLen, e.blockLen = r.blockLen, e.create = () => t(), e
            }

            function m(t = 32) {
                if (n && "function" == typeof n.getRandomValues) return n.getRandomValues(new Uint8Array(t));
                throw Error("crypto.getRandomValues must be defined")
            }
        },
        74246: function(t, e, r) {
            "use strict";
            r.d(e, {
                AG: function() {
                    return O
                },
                G0: function() {
                    return I
                },
                IM: function() {
                    return A
                },
                IX: function() {
                    return w
                },
                O7: function() {
                    return v
                },
                Rx: function() {
                    return C
                },
                Ue: function() {
                    return d
                },
                Yj: function() {
                    return g
                },
                Z_: function() {
                    return P
                },
                _4: function() {
                    return M
                },
                bc: function() {
                    return k
                },
                dt: function() {
                    return D
                },
                eE: function() {
                    return E
                },
                hu: function() {
                    return f
                },
                i0: function() {
                    return x
                },
                jt: function() {
                    return _
                },
                oQ: function() {
                    return B
                }
            });
            class n extends TypeError {
                constructor(t, e) {
                    let r;
                    let {
                        message: n,
                        ...i
                    } = t, {
                        path: o
                    } = t;
                    super(0 === o.length ? n : "At path: " + o.join(".") + " -- " + n), Object.assign(this, i), this.name = this.constructor.name, this.failures = () => {
                        var n;
                        return null != (n = r) ? n : r = [t, ...e()]
                    }
                }
            }

            function i(t) {
                return o(t) && "function" == typeof t[Symbol.iterator]
            }

            function o(t) {
                return "object" == typeof t && null != t
            }

            function s(t) {
                return "string" == typeof t ? JSON.stringify(t) : "" + t
            }

            function a(t) {
                let {
                    done: e,
                    value: r
                } = t.next();
                return e ? void 0 : r
            }

            function u(t, e, r, n) {
                if (!0 === t) return;
                !1 === t ? t = {} : "string" == typeof t && (t = {
                    message: t
                });
                let {
                    path: i,
                    branch: o
                } = e, {
                    type: a
                } = r, {
                    refinement: u,
                    message: c = "Expected a value of type `" + a + "`" + (u ? " with refinement `" + u + "`" : "") + ", but received: `" + s(n) + "`"
                } = t;
                return {
                    value: n,
                    type: a,
                    refinement: u,
                    key: i[i.length - 1],
                    path: i,
                    branch: o,
                    ...t,
                    message: c
                }
            }

            function* c(t, e, r, n) {
                for (let o of (i(t) || (t = [t]), t)) {
                    let t = u(o, e, r, n);
                    t && (yield t)
                }
            }

            function* l(t, e, r = {}) {
                let {
                    path: n = [],
                    branch: i = [t],
                    coerce: s = !1,
                    mask: a = !1
                } = r, u = {
                    path: n,
                    branch: i
                };
                if (s && (t = e.coercer(t, u), a && "type" !== e.type && o(e.schema) && o(t) && !Array.isArray(t)))
                    for (let r in t) void 0 === e.schema[r] && delete t[r];
                let c = !0;
                for (let r of e.validator(t, u)) c = !1, yield [r, void 0];
                for (let [r, h, f] of e.entries(t, u))
                    for (let e of l(h, f, {
                            path: void 0 === r ? n : [...n, r],
                            branch: void 0 === r ? i : [...i, h],
                            coerce: s,
                            mask: a
                        })) e[0] ? (c = !1, yield [e[0], void 0]) : s && (h = e[1], void 0 === r ? t = h : t instanceof Map ? t.set(r, h) : t instanceof Set ? t.add(h) : o(t) && (t[r] = h));
                if (c)
                    for (let r of e.refiner(t, u)) c = !1, yield [r, void 0];
                c && (yield [void 0, t])
            }
            class h {
                constructor(t) {
                    let {
                        type: e,
                        schema: r,
                        validator: n,
                        refiner: i,
                        coercer: o = t => t,
                        entries: s = function*() {}
                    } = t;
                    this.type = e, this.schema = r, this.entries = s, this.coercer = o, n ? this.validator = (t, e) => c(n(t, e), e, this, t) : this.validator = () => [], i ? this.refiner = (t, e) => c(i(t, e), e, this, t) : this.refiner = () => []
                }
                assert(t) {
                    return f(t, this)
                }
                create(t) {
                    return d(t, this)
                }
                is(t) {
                    return y(t, this)
                }
                mask(t) {
                    return p(t, this)
                }
                validate(t, e = {}) {
                    return m(t, this, e)
                }
            }

            function f(t, e) {
                let r = m(t, e);
                if (r[0]) throw r[0]
            }

            function d(t, e) {
                let r = m(t, e, {
                    coerce: !0
                });
                if (!r[0]) return r[1];
                throw r[0]
            }

            function p(t, e) {
                let r = m(t, e, {
                    coerce: !0,
                    mask: !0
                });
                if (!r[0]) return r[1];
                throw r[0]
            }

            function y(t, e) {
                return !m(t, e)[0]
            }

            function m(t, e, r = {}) {
                let i = l(t, e, r),
                    o = a(i);
                return o[0] ? [new n(o[0], function*() {
                    for (let t of i) t[0] && (yield t[0])
                }), void 0] : [void 0, o[1]]
            }

            function b(t, e) {
                return new h({
                    type: t,
                    schema: null,
                    validator: e
                })
            }

            function g() {
                return b("any", () => !0)
            }

            function w(t) {
                return new h({
                    type: "array",
                    schema: t,
                    * entries(e) {
                        if (t && Array.isArray(e))
                            for (let [r, n] of e.entries()) yield [r, n, t]
                    },
                    coercer: t => Array.isArray(t) ? t.slice() : t,
                    validator: t => Array.isArray(t) || "Expected an array value, but received: " + s(t)
                })
            }

            function v() {
                return b("boolean", t => "boolean" == typeof t)
            }

            function E(t) {
                return b("instance", e => e instanceof t || "Expected a `" + t.name + "` instance, but received: " + s(e))
            }

            function x(t) {
                let e = s(t),
                    r = typeof t;
                return new h({
                    type: "literal",
                    schema: "string" === r || "number" === r || "boolean" === r ? t : null,
                    validator: r => r === t || "Expected the literal `" + e + "`, but received: " + s(r)
                })
            }

            function S() {
                return b("never", () => !1)
            }

            function O(t) {
                return new h({ ...t,
                    validator: (e, r) => null === e || t.validator(e, r),
                    refiner: (e, r) => null === e || t.refiner(e, r)
                })
            }

            function C() {
                return b("number", t => "number" == typeof t && !isNaN(t) || "Expected a number, but received: " + s(t))
            }

            function _(t) {
                return new h({ ...t,
                    validator: (e, r) => void 0 === e || t.validator(e, r),
                    refiner: (e, r) => void 0 === e || t.refiner(e, r)
                })
            }

            function A(t, e) {
                return new h({
                    type: "record",
                    schema: null,
                    * entries(r) {
                        if (o(r))
                            for (let n in r) {
                                let i = r[n];
                                yield [n, n, t], yield [n, i, e]
                            }
                    },
                    validator: t => o(t) || "Expected an object, but received: " + s(t)
                })
            }

            function P() {
                return b("string", t => "string" == typeof t || "Expected a string, but received: " + s(t))
            }

            function k(t) {
                let e = S();
                return new h({
                    type: "tuple",
                    schema: null,
                    * entries(r) {
                        if (Array.isArray(r)) {
                            let n = Math.max(t.length, r.length);
                            for (let i = 0; i < n; i++) yield [i, r[i], t[i] || e]
                        }
                    },
                    validator: t => Array.isArray(t) || "Expected an array, but received: " + s(t)
                })
            }

            function D(t) {
                let e = Object.keys(t);
                return new h({
                    type: "type",
                    schema: t,
                    * entries(r) {
                        if (o(r))
                            for (let n of e) yield [n, r[n], t[n]]
                    },
                    validator: t => o(t) || "Expected an object, but received: " + s(t)
                })
            }

            function I(t) {
                let e = t.map(t => t.type).join(" | ");
                return new h({
                    type: "union",
                    schema: null,
                    validator(r, n) {
                        let i = [];
                        for (let e of t) {
                            let [...t] = l(r, e, n), [o] = t;
                            if (!o[0]) return [];
                            for (let [e] of t) e && i.push(e)
                        }
                        return ["Expected the value to satisfy a union of `" + e + "`, but received: " + s(r), ...i]
                    }
                })
            }

            function M() {
                return b("unknown", () => !0)
            }

            function B(t, e, r) {
                return new h({ ...t,
                    coercer: (n, i) => y(n, e) ? t.coercer(r(n, i), i) : t.coercer(n, i)
                })
            }
        },
        29827: function(t, e, r) {
            "use strict";
            r.d(e, {
                NL: function() {
                    return s
                },
                aH: function() {
                    return a
                }
            });
            var n = r(2265),
                i = r(57437),
                o = n.createContext(void 0),
                s = t => {
                    let e = n.useContext(o);
                    if (t) return t;
                    if (!e) throw Error("No QueryClient set, use QueryClientProvider to set one");
                    return e
                },
                a = t => {
                    let {
                        client: e,
                        children: r
                    } = t;
                    return n.useEffect(() => (e.mount(), () => {
                        e.unmount()
                    }), [e]), (0, i.jsx)(o.Provider, {
                        value: e,
                        children: r
                    })
                }
        },
        8198: function(t, e, r) {
            "use strict";
            r.d(e, {
                a: function() {
                    return D
                }
            });
            var n = r(7826),
                i = r(63529),
                o = r(17697),
                s = r(90221),
                a = r(38418),
                u = class extends s.l {
                    constructor(t, e) {
                        super(), this.options = e, this.#t = t, this.#e = null, this.bindMethods(), this.setOptions(e)
                    }#
                    t;#
                    r = void 0;#
                    n = void 0;#
                    i = void 0;#
                    o;#
                    s;#
                    e;#
                    a;#
                    u;#
                    c;#
                    l;#
                    h;#
                    f;#
                    d = new Set;
                    bindMethods() {
                        this.refetch = this.refetch.bind(this)
                    }
                    onSubscribe() {
                        1 === this.listeners.size && (this.#r.addObserver(this), l(this.#r, this.options) ? this.#p() : this.updateResult(), this.#y())
                    }
                    onUnsubscribe() {
                        this.hasListeners() || this.destroy()
                    }
                    shouldFetchOnReconnect() {
                        return h(this.#r, this.options, this.options.refetchOnReconnect)
                    }
                    shouldFetchOnWindowFocus() {
                        return h(this.#r, this.options, this.options.refetchOnWindowFocus)
                    }
                    destroy() {
                        this.listeners = new Set, this.#m(), this.#b(), this.#r.removeObserver(this)
                    }
                    setOptions(t, e) {
                        let r = this.options,
                            i = this.#r;
                        if (this.options = this.#t.defaultQueryOptions(t), void 0 !== this.options.enabled && "boolean" != typeof this.options.enabled) throw Error("Expected enabled to be a boolean");
                        this.#g(), this.#r.setOptions(this.options), r._defaulted && !(0, n.VS)(this.options, r) && this.#t.getQueryCache().notify({
                            type: "observerOptionsUpdated",
                            query: this.#r,
                            observer: this
                        });
                        let o = this.hasListeners();
                        o && f(this.#r, i, this.options, r) && this.#p(), this.updateResult(e), o && (this.#r !== i || this.options.enabled !== r.enabled || this.options.staleTime !== r.staleTime) && this.#w();
                        let s = this.#v();
                        o && (this.#r !== i || this.options.enabled !== r.enabled || s !== this.#f) && this.#E(s)
                    }
                    getOptimisticResult(t) {
                        let e = this.#t.getQueryCache().build(this.#t, t),
                            r = this.createResult(e, t);
                        return p(this, r) && (this.#i = r, this.#s = this.options, this.#o = this.#r.state), r
                    }
                    getCurrentResult() {
                        return this.#i
                    }
                    trackResult(t, e) {
                        let r = {};
                        return Object.keys(t).forEach(n => {
                            Object.defineProperty(r, n, {
                                configurable: !1,
                                enumerable: !0,
                                get: () => (this.trackProp(n), e ? .(n), t[n])
                            })
                        }), r
                    }
                    trackProp(t) {
                        this.#d.add(t)
                    }
                    getCurrentQuery() {
                        return this.#r
                    }
                    refetch({ ...t
                    } = {}) {
                        return this.fetch({ ...t
                        })
                    }
                    fetchOptimistic(t) {
                        let e = this.#t.defaultQueryOptions(t),
                            r = this.#t.getQueryCache().build(this.#t, e);
                        return r.isFetchingOptimistic = !0, r.fetch().then(() => this.createResult(r, e))
                    }
                    fetch(t) {
                        return this.#p({ ...t,
                            cancelRefetch: t.cancelRefetch ? ? !0
                        }).then(() => (this.updateResult(), this.#i))
                    }#
                    p(t) {
                        this.#g();
                        let e = this.#r.fetch(this.options, t);
                        return t ? .throwOnError || (e = e.catch(n.ZT)), e
                    }#
                    w() {
                        if (this.#m(), n.sk || this.#i.isStale || !(0, n.PN)(this.options.staleTime)) return;
                        let t = (0, n.Kp)(this.#i.dataUpdatedAt, this.options.staleTime) + 1;
                        this.#l = setTimeout(() => {
                            this.#i.isStale || this.updateResult()
                        }, t)
                    }#
                    v() {
                        return ("function" == typeof this.options.refetchInterval ? this.options.refetchInterval(this.#r) : this.options.refetchInterval) ? ? !1
                    }#
                    E(t) {
                        this.#b(), this.#f = t, !n.sk && !1 !== this.options.enabled && (0, n.PN)(this.#f) && 0 !== this.#f && (this.#h = setInterval(() => {
                            (this.options.refetchIntervalInBackground || o.j.isFocused()) && this.#p()
                        }, this.#f))
                    }#
                    y() {
                        this.#w(), this.#E(this.#v())
                    }#
                    m() {
                        this.#l && (clearTimeout(this.#l), this.#l = void 0)
                    }#
                    b() {
                        this.#h && (clearInterval(this.#h), this.#h = void 0)
                    }
                    createResult(t, e) {
                        let r;
                        let i = this.#r,
                            o = this.options,
                            s = this.#i,
                            u = this.#o,
                            c = this.#s,
                            h = t !== i ? t.state : this.#n,
                            {
                                state: p
                            } = t,
                            y = { ...p
                            },
                            m = !1;
                        if (e._optimisticResults) {
                            let r = this.hasListeners(),
                                n = !r && l(t, e),
                                s = r && f(t, i, e, o);
                            (n || s) && (y = { ...y,
                                ...(0, a.z)(p.data, t.options)
                            }), "isRestoring" === e._optimisticResults && (y.fetchStatus = "idle")
                        }
                        let {
                            error: b,
                            errorUpdatedAt: g,
                            status: w
                        } = y;
                        if (e.select && void 0 !== y.data) {
                            if (s && y.data === u ? .data && e.select === this.#a) r = this.#u;
                            else try {
                                this.#a = e.select, r = e.select(y.data), r = (0, n.oE)(s ? .data, r, e), this.#u = r, this.#e = null
                            } catch (t) {
                                this.#e = t
                            }
                        } else r = y.data;
                        if (void 0 !== e.placeholderData && void 0 === r && "pending" === w) {
                            let t;
                            if (s ? .isPlaceholderData && e.placeholderData === c ? .placeholderData) t = s.data;
                            else if (t = "function" == typeof e.placeholderData ? e.placeholderData(this.#c ? .state.data, this.#c) : e.placeholderData, e.select && void 0 !== t) try {
                                t = e.select(t), this.#e = null
                            } catch (t) {
                                this.#e = t
                            }
                            void 0 !== t && (w = "success", r = (0, n.oE)(s ? .data, t, e), m = !0)
                        }
                        this.#e && (b = this.#e, r = this.#u, g = Date.now(), w = "error");
                        let v = "fetching" === y.fetchStatus,
                            E = "pending" === w,
                            x = "error" === w,
                            S = E && v,
                            O = void 0 !== r;
                        return {
                            status: w,
                            fetchStatus: y.fetchStatus,
                            isPending: E,
                            isSuccess: "success" === w,
                            isError: x,
                            isInitialLoading: S,
                            isLoading: S,
                            data: r,
                            dataUpdatedAt: y.dataUpdatedAt,
                            error: b,
                            errorUpdatedAt: g,
                            failureCount: y.fetchFailureCount,
                            failureReason: y.fetchFailureReason,
                            errorUpdateCount: y.errorUpdateCount,
                            isFetched: y.dataUpdateCount > 0 || y.errorUpdateCount > 0,
                            isFetchedAfterMount: y.dataUpdateCount > h.dataUpdateCount || y.errorUpdateCount > h.errorUpdateCount,
                            isFetching: v,
                            isRefetching: v && !E,
                            isLoadingError: x && !O,
                            isPaused: "paused" === y.fetchStatus,
                            isPlaceholderData: m,
                            isRefetchError: x && O,
                            isStale: d(t, e),
                            refetch: this.refetch
                        }
                    }
                    updateResult(t) {
                        let e = this.#i,
                            r = this.createResult(this.#r, this.options);
                        if (this.#o = this.#r.state, this.#s = this.options, void 0 !== this.#o.data && (this.#c = this.#r), (0, n.VS)(r, e)) return;
                        this.#i = r;
                        let i = {},
                            o = () => {
                                if (!e) return !0;
                                let {
                                    notifyOnChangeProps: t
                                } = this.options, r = "function" == typeof t ? t() : t;
                                if ("all" === r || !r && !this.#d.size) return !0;
                                let n = new Set(r ? ? this.#d);
                                return this.options.throwOnError && n.add("error"), Object.keys(this.#i).some(t => {
                                    let r = t;
                                    return this.#i[r] !== e[r] && n.has(r)
                                })
                            };
                        t ? .listeners !== !1 && o() && (i.listeners = !0), this.#x({ ...i,
                            ...t
                        })
                    }#
                    g() {
                        let t = this.#t.getQueryCache().build(this.#t, this.options);
                        if (t === this.#r) return;
                        let e = this.#r;
                        this.#r = t, this.#n = t.state, this.hasListeners() && (e ? .removeObserver(this), t.addObserver(this))
                    }
                    onQueryUpdate() {
                        this.updateResult(), this.hasListeners() && this.#y()
                    }#
                    x(t) {
                        i.V.batch(() => {
                            t.listeners && this.listeners.forEach(t => {
                                t(this.#i)
                            }), this.#t.getQueryCache().notify({
                                query: this.#r,
                                type: "observerResultsUpdated"
                            })
                        })
                    }
                };

            function c(t, e) {
                return !1 !== e.enabled && void 0 === t.state.data && !("error" === t.state.status && !1 === e.retryOnMount)
            }

            function l(t, e) {
                return c(t, e) || void 0 !== t.state.data && h(t, e, e.refetchOnMount)
            }

            function h(t, e, r) {
                if (!1 !== e.enabled) {
                    let n = "function" == typeof r ? r(t) : r;
                    return "always" === n || !1 !== n && d(t, e)
                }
                return !1
            }

            function f(t, e, r, n) {
                return (t !== e || !1 === n.enabled) && (!r.suspense || "error" !== t.state.status) && d(t, r)
            }

            function d(t, e) {
                return !1 !== e.enabled && t.isStaleByTime(e.staleTime)
            }

            function p(t, e) {
                return !(0, n.VS)(t.getCurrentResult(), e)
            }
            var y = r(2265);

            function m() {
                let t = !1;
                return {
                    clearReset: () => {
                        t = !1
                    },
                    reset: () => {
                        t = !0
                    },
                    isReset: () => t
                }
            }
            r(57437);
            var b = y.createContext(m()),
                g = () => y.useContext(b),
                w = r(29827),
                v = y.createContext(!1),
                E = () => y.useContext(v);

            function x(t, e) {
                return "function" == typeof t ? t(...e) : !!t
            }
            v.Provider;
            var S = (t, e) => {
                    (t.suspense || t.throwOnError) && !e.isReset() && (t.retryOnMount = !1)
                },
                O = t => {
                    y.useEffect(() => {
                        t.clearReset()
                    }, [t])
                },
                C = t => {
                    let {
                        result: e,
                        errorResetBoundary: r,
                        throwOnError: n,
                        query: i
                    } = t;
                    return e.isError && !r.isReset() && !e.isFetching && i && x(n, [e.error, i])
                },
                _ = t => {
                    t.suspense && "number" != typeof t.staleTime && (t.staleTime = 1e3)
                },
                A = (t, e) => t ? .suspense && e.isPending,
                P = (t, e, r) => e.fetchOptimistic(t).catch(() => {
                    r.clearReset()
                });

            function k(t, e, r) {
                let n = (0, w.NL)(r),
                    o = E(),
                    s = g(),
                    a = n.defaultQueryOptions(t);
                a._optimisticResults = o ? "isRestoring" : "optimistic", _(a), S(a, s), O(s);
                let [u] = y.useState(() => new e(n, a)), c = u.getOptimisticResult(a);
                if (y.useSyncExternalStore(y.useCallback(t => {
                        let e = o ? () => void 0 : u.subscribe(i.V.batchCalls(t));
                        return u.updateResult(), e
                    }, [u, o]), () => u.getCurrentResult(), () => u.getCurrentResult()), y.useEffect(() => {
                        u.setOptions(a, {
                            listeners: !1
                        })
                    }, [a, u]), A(a, c)) throw P(a, u, s);
                if (C({
                        result: c,
                        errorResetBoundary: s,
                        throwOnError: a.throwOnError,
                        query: n.getQueryCache().get(a.queryHash)
                    })) throw c.error;
                return a.notifyOnChangeProps ? c : u.trackResult(c)
            }

            function D(t, e) {
                return k(t, u, e)
            }
        },
        17697: function(t, e, r) {
            "use strict";
            r.d(e, {
                j: function() {
                    return o
                }
            });
            var n = r(90221),
                i = r(7826),
                o = new class extends n.l {#
                    S;#
                    O;#
                    C;
                    constructor() {
                        super(), this.#C = t => {
                            if (!i.sk && window.addEventListener) {
                                let e = () => t();
                                return window.addEventListener("visibilitychange", e, !1), () => {
                                    window.removeEventListener("visibilitychange", e)
                                }
                            }
                        }
                    }
                    onSubscribe() {
                        this.#O || this.setEventListener(this.#C)
                    }
                    onUnsubscribe() {
                        this.hasListeners() || (this.#O ? .(), this.#O = void 0)
                    }
                    setEventListener(t) {
                        this.#C = t, this.#O ? .(), this.#O = t(t => {
                            "boolean" == typeof t ? this.setFocused(t) : this.onFocus()
                        })
                    }
                    setFocused(t) {
                        this.#S !== t && (this.#S = t, this.onFocus())
                    }
                    onFocus() {
                        let t = this.isFocused();
                        this.listeners.forEach(e => {
                            e(t)
                        })
                    }
                    isFocused() {
                        return "boolean" == typeof this.#S ? this.#S : globalThis.document ? .visibilityState !== "hidden"
                    }
                }
        },
        63529: function(t, e, r) {
            "use strict";
            r.d(e, {
                V: function() {
                    return n
                }
            });
            var n = function() {
                let t = [],
                    e = 0,
                    r = t => {
                        t()
                    },
                    n = t => {
                        t()
                    },
                    i = t => setTimeout(t, 0),
                    o = n => {
                        e ? t.push(n) : i(() => {
                            r(n)
                        })
                    },
                    s = () => {
                        let e = t;
                        t = [], e.length && i(() => {
                            n(() => {
                                e.forEach(t => {
                                    r(t)
                                })
                            })
                        })
                    };
                return {
                    batch: t => {
                        let r;
                        e++;
                        try {
                            r = t()
                        } finally {
                            --e || s()
                        }
                        return r
                    },
                    batchCalls: t => (...e) => {
                        o(() => {
                            t(...e)
                        })
                    },
                    schedule: o,
                    setNotifyFunction: t => {
                        r = t
                    },
                    setBatchNotifyFunction: t => {
                        n = t
                    },
                    setScheduler: t => {
                        i = t
                    }
                }
            }()
        },
        42323: function(t, e, r) {
            "use strict";
            r.d(e, {
                N: function() {
                    return o
                }
            });
            var n = r(90221),
                i = r(7826),
                o = new class extends n.l {#
                    _ = !0;#
                    O;#
                    C;
                    constructor() {
                        super(), this.#C = t => {
                            if (!i.sk && window.addEventListener) {
                                let e = () => t(!0),
                                    r = () => t(!1);
                                return window.addEventListener("online", e, !1), window.addEventListener("offline", r, !1), () => {
                                    window.removeEventListener("online", e), window.removeEventListener("offline", r)
                                }
                            }
                        }
                    }
                    onSubscribe() {
                        this.#O || this.setEventListener(this.#C)
                    }
                    onUnsubscribe() {
                        this.hasListeners() || (this.#O ? .(), this.#O = void 0)
                    }
                    setEventListener(t) {
                        this.#C = t, this.#O ? .(), this.#O = t(this.setOnline.bind(this))
                    }
                    setOnline(t) {
                        this.#_ !== t && (this.#_ = t, this.listeners.forEach(e => {
                            e(t)
                        }))
                    }
                    isOnline() {
                        return this.#_
                    }
                }
        },
        38418: function(t, e, r) {
            "use strict";
            r.d(e, {
                A: function() {
                    return a
                },
                z: function() {
                    return u
                }
            });
            var n = r(7826),
                i = r(63529),
                o = r(49125),
                s = r(10641),
                a = class extends s.F {#
                    A;#
                    P;#
                    k;#
                    D;#
                    I;#
                    M;
                    constructor(t) {
                        super(), this.#M = !1, this.#I = t.defaultOptions, this.setOptions(t.options), this.observers = [], this.#k = t.cache, this.queryKey = t.queryKey, this.queryHash = t.queryHash, this.#A = t.state || c(this.options), this.state = this.#A, this.scheduleGc()
                    }
                    get meta() {
                        return this.options.meta
                    }
                    setOptions(t) {
                        this.options = { ...this.#I,
                            ...t
                        }, this.updateGcTime(this.options.gcTime)
                    }
                    optionalRemove() {
                        this.observers.length || "idle" !== this.state.fetchStatus || this.#k.remove(this)
                    }
                    setData(t, e) {
                        let r = (0, n.oE)(this.state.data, t, this.options);
                        return this.#B({
                            data: r,
                            type: "success",
                            dataUpdatedAt: e ? .updatedAt,
                            manual: e ? .manual
                        }), r
                    }
                    setState(t, e) {
                        this.#B({
                            type: "setState",
                            state: t,
                            setStateOptions: e
                        })
                    }
                    cancel(t) {
                        let e = this.#D ? .promise;
                        return this.#D ? .cancel(t), e ? e.then(n.ZT).catch(n.ZT) : Promise.resolve()
                    }
                    destroy() {
                        super.destroy(), this.cancel({
                            silent: !0
                        })
                    }
                    reset() {
                        this.destroy(), this.setState(this.#A)
                    }
                    isActive() {
                        return this.observers.some(t => !1 !== t.options.enabled)
                    }
                    isDisabled() {
                        return this.getObserversCount() > 0 && !this.isActive()
                    }
                    isStale() {
                        return !!this.state.isInvalidated || (this.getObserversCount() > 0 ? this.observers.some(t => t.getCurrentResult().isStale) : void 0 === this.state.data)
                    }
                    isStaleByTime(t = 0) {
                        return this.state.isInvalidated || void 0 === this.state.data || !(0, n.Kp)(this.state.dataUpdatedAt, t)
                    }
                    onFocus() {
                        let t = this.observers.find(t => t.shouldFetchOnWindowFocus());
                        t ? .refetch({
                            cancelRefetch: !1
                        }), this.#D ? .continue()
                    }
                    onOnline() {
                        let t = this.observers.find(t => t.shouldFetchOnReconnect());
                        t ? .refetch({
                            cancelRefetch: !1
                        }), this.#D ? .continue()
                    }
                    addObserver(t) {
                        this.observers.includes(t) || (this.observers.push(t), this.clearGcTimeout(), this.#k.notify({
                            type: "observerAdded",
                            query: this,
                            observer: t
                        }))
                    }
                    removeObserver(t) {
                        this.observers.includes(t) && (this.observers = this.observers.filter(e => e !== t), this.observers.length || (this.#D && (this.#M ? this.#D.cancel({
                            revert: !0
                        }) : this.#D.cancelRetry()), this.scheduleGc()), this.#k.notify({
                            type: "observerRemoved",
                            query: this,
                            observer: t
                        }))
                    }
                    getObserversCount() {
                        return this.observers.length
                    }
                    invalidate() {
                        this.state.isInvalidated || this.#B({
                            type: "invalidate"
                        })
                    }
                    fetch(t, e) {
                        if ("idle" !== this.state.fetchStatus) {
                            if (void 0 !== this.state.data && e ? .cancelRefetch) this.cancel({
                                silent: !0
                            });
                            else if (this.#D) return this.#D.continueRetry(), this.#D.promise
                        }
                        if (t && this.setOptions(t), !this.options.queryFn) {
                            let t = this.observers.find(t => t.options.queryFn);
                            t && this.setOptions(t.options)
                        }
                        let r = new AbortController,
                            i = {
                                queryKey: this.queryKey,
                                meta: this.meta
                            },
                            s = t => {
                                Object.defineProperty(t, "signal", {
                                    enumerable: !0,
                                    get: () => (this.#M = !0, r.signal)
                                })
                            };
                        s(i);
                        let a = () => this.options.queryFn && this.options.queryFn !== n.CN ? (this.#M = !1, this.options.persister) ? this.options.persister(this.options.queryFn, i, this) : this.options.queryFn(i) : Promise.reject(Error(`Missing queryFn: '${this.options.queryHash}'`)),
                            u = {
                                fetchOptions: e,
                                options: this.options,
                                queryKey: this.queryKey,
                                state: this.state,
                                fetchFn: a
                            };
                        s(u), this.options.behavior ? .onFetch(u, this), this.#P = this.state, ("idle" === this.state.fetchStatus || this.state.fetchMeta !== u.fetchOptions ? .meta) && this.#B({
                            type: "fetch",
                            meta: u.fetchOptions ? .meta
                        });
                        let c = t => {
                            (0, o.DV)(t) && t.silent || this.#B({
                                type: "error",
                                error: t
                            }), (0, o.DV)(t) || (this.#k.config.onError ? .(t, this), this.#k.config.onSettled ? .(this.state.data, t, this)), this.isFetchingOptimistic || this.scheduleGc(), this.isFetchingOptimistic = !1
                        };
                        return this.#D = (0, o.Mz)({
                            fn: u.fetchFn,
                            abort: r.abort.bind(r),
                            onSuccess: t => {
                                if (void 0 === t) {
                                    c(Error(`${this.queryHash} data is undefined`));
                                    return
                                }
                                this.setData(t), this.#k.config.onSuccess ? .(t, this), this.#k.config.onSettled ? .(t, this.state.error, this), this.isFetchingOptimistic || this.scheduleGc(), this.isFetchingOptimistic = !1
                            },
                            onError: c,
                            onFail: (t, e) => {
                                this.#B({
                                    type: "failed",
                                    failureCount: t,
                                    error: e
                                })
                            },
                            onPause: () => {
                                this.#B({
                                    type: "pause"
                                })
                            },
                            onContinue: () => {
                                this.#B({
                                    type: "continue"
                                })
                            },
                            retry: u.options.retry,
                            retryDelay: u.options.retryDelay,
                            networkMode: u.options.networkMode,
                            canRun: () => !0
                        }), this.#D.start()
                    }#
                    B(t) {
                        let e = e => {
                            switch (t.type) {
                                case "failed":
                                    return { ...e,
                                        fetchFailureCount: t.failureCount,
                                        fetchFailureReason: t.error
                                    };
                                case "pause":
                                    return { ...e,
                                        fetchStatus: "paused"
                                    };
                                case "continue":
                                    return { ...e,
                                        fetchStatus: "fetching"
                                    };
                                case "fetch":
                                    return { ...e,
                                        ...u(e.data, this.options),
                                        fetchMeta: t.meta ? ? null
                                    };
                                case "success":
                                    return { ...e,
                                        data: t.data,
                                        dataUpdateCount: e.dataUpdateCount + 1,
                                        dataUpdatedAt: t.dataUpdatedAt ? ? Date.now(),
                                        error: null,
                                        isInvalidated: !1,
                                        status: "success",
                                        ...!t.manual && {
                                            fetchStatus: "idle",
                                            fetchFailureCount: 0,
                                            fetchFailureReason: null
                                        }
                                    };
                                case "error":
                                    let r = t.error;
                                    if ((0, o.DV)(r) && r.revert && this.#P) return { ...this.#P,
                                        fetchStatus: "idle"
                                    };
                                    return { ...e,
                                        error: r,
                                        errorUpdateCount: e.errorUpdateCount + 1,
                                        errorUpdatedAt: Date.now(),
                                        fetchFailureCount: e.fetchFailureCount + 1,
                                        fetchFailureReason: r,
                                        fetchStatus: "idle",
                                        status: "error"
                                    };
                                case "invalidate":
                                    return { ...e,
                                        isInvalidated: !0
                                    };
                                case "setState":
                                    return { ...e,
                                        ...t.state
                                    }
                            }
                        };
                        this.state = e(this.state), i.V.batch(() => {
                            this.observers.forEach(t => {
                                t.onQueryUpdate()
                            }), this.#k.notify({
                                query: this,
                                type: "updated",
                                action: t
                            })
                        })
                    }
                };

            function u(t, e) {
                return {
                    fetchFailureCount: 0,
                    fetchFailureReason: null,
                    fetchStatus: (0, o.Kw)(e.networkMode) ? "fetching" : "paused",
                    ...void 0 === t && {
                        error: null,
                        status: "pending"
                    }
                }
            }

            function c(t) {
                let e = "function" == typeof t.initialData ? t.initialData() : t.initialData,
                    r = void 0 !== e,
                    n = r ? "function" == typeof t.initialDataUpdatedAt ? t.initialDataUpdatedAt() : t.initialDataUpdatedAt : 0;
                return {
                    data: e,
                    dataUpdateCount: 0,
                    dataUpdatedAt: r ? n ? ? Date.now() : 0,
                    error: null,
                    errorUpdateCount: 0,
                    errorUpdatedAt: 0,
                    fetchFailureCount: 0,
                    fetchFailureReason: null,
                    fetchMeta: null,
                    isInvalidated: !1,
                    status: r ? "success" : "pending",
                    fetchStatus: "idle"
                }
            }
        },
        10641: function(t, e, r) {
            "use strict";
            r.d(e, {
                F: function() {
                    return i
                }
            });
            var n = r(7826),
                i = class {#
                    R;
                    destroy() {
                        this.clearGcTimeout()
                    }
                    scheduleGc() {
                        this.clearGcTimeout(), (0, n.PN)(this.gcTime) && (this.#R = setTimeout(() => {
                            this.optionalRemove()
                        }, this.gcTime))
                    }
                    updateGcTime(t) {
                        this.gcTime = Math.max(this.gcTime || 0, t ? ? (n.sk ? 1 / 0 : 3e5))
                    }
                    clearGcTimeout() {
                        this.#R && (clearTimeout(this.#R), this.#R = void 0)
                    }
                }
        },
        49125: function(t, e, r) {
            "use strict";
            r.d(e, {
                DV: function() {
                    return c
                },
                Kw: function() {
                    return a
                },
                Mz: function() {
                    return l
                }
            });
            var n = r(17697),
                i = r(42323),
                o = r(7826);

            function s(t) {
                return Math.min(1e3 * 2 ** t, 3e4)
            }

            function a(t) {
                return (t ? ? "online") !== "online" || i.N.isOnline()
            }
            var u = class {
                constructor(t) {
                    this.revert = t ? .revert, this.silent = t ? .silent
                }
            };

            function c(t) {
                return t instanceof u
            }

            function l(t) {
                let e, r, c, l = !1,
                    h = 0,
                    f = !1,
                    d = new Promise((t, e) => {
                        r = t, c = e
                    }),
                    p = () => n.j.isFocused() && ("always" === t.networkMode || i.N.isOnline()) && t.canRun(),
                    y = () => a(t.networkMode) && t.canRun(),
                    m = n => {
                        f || (f = !0, t.onSuccess ? .(n), e ? .(), r(n))
                    },
                    b = r => {
                        f || (f = !0, t.onError ? .(r), e ? .(), c(r))
                    },
                    g = () => new Promise(r => {
                        e = t => {
                            (f || p()) && r(t)
                        }, t.onPause ? .()
                    }).then(() => {
                        e = void 0, f || t.onContinue ? .()
                    }),
                    w = () => {
                        let e;
                        if (!f) {
                            try {
                                e = t.fn()
                            } catch (t) {
                                e = Promise.reject(t)
                            }
                            Promise.resolve(e).then(m).catch(e => {
                                if (f) return;
                                let r = t.retry ? ? (o.sk ? 0 : 3),
                                    n = t.retryDelay ? ? s,
                                    i = "function" == typeof n ? n(h, e) : n,
                                    a = !0 === r || "number" == typeof r && h < r || "function" == typeof r && r(h, e);
                                if (l || !a) {
                                    b(e);
                                    return
                                }
                                h++, t.onFail ? .(h, e), (0, o._v)(i).then(() => p() ? void 0 : g()).then(() => {
                                    l ? b(e) : w()
                                })
                            })
                        }
                    };
                return {
                    promise: d,
                    cancel: e => {
                        f || (b(new u(e)), t.abort ? .())
                    },
                    continue: () => (e ? .(), d),
                    cancelRetry: () => {
                        l = !0
                    },
                    continueRetry: () => {
                        l = !1
                    },
                    canStart: y,
                    start: () => (y() ? w() : g().then(w), d)
                }
            }
        },
        90221: function(t, e, r) {
            "use strict";
            r.d(e, {
                l: function() {
                    return n
                }
            });
            var n = class {
                constructor() {
                    this.listeners = new Set, this.subscribe = this.subscribe.bind(this)
                }
                subscribe(t) {
                    return this.listeners.add(t), this.onSubscribe(), () => {
                        this.listeners.delete(t), this.onUnsubscribe()
                    }
                }
                hasListeners() {
                    return this.listeners.size > 0
                }
                onSubscribe() {}
                onUnsubscribe() {}
            }
        },
        7826: function(t, e, r) {
            "use strict";
            r.d(e, {
                CN: function() {
                    return x
                },
                Ht: function() {
                    return E
                },
                Kp: function() {
                    return a
                },
                PN: function() {
                    return s
                },
                Rm: function() {
                    return l
                },
                SE: function() {
                    return o
                },
                VS: function() {
                    return p
                },
                VX: function() {
                    return v
                },
                X7: function() {
                    return c
                },
                Ym: function() {
                    return h
                },
                ZT: function() {
                    return i
                },
                _v: function() {
                    return g
                },
                _x: function() {
                    return u
                },
                oE: function() {
                    return w
                },
                sk: function() {
                    return n
                },
                to: function() {
                    return f
                }
            });
            var n = "undefined" == typeof window || "Deno" in globalThis;

            function i() {}

            function o(t, e) {
                return "function" == typeof t ? t(e) : t
            }

            function s(t) {
                return "number" == typeof t && t >= 0 && t !== 1 / 0
            }

            function a(t, e) {
                return Math.max(t + (e || 0) - Date.now(), 0)
            }

            function u(t, e) {
                let {
                    type: r = "all",
                    exact: n,
                    fetchStatus: i,
                    predicate: o,
                    queryKey: s,
                    stale: a
                } = t;
                if (s) {
                    if (n) {
                        if (e.queryHash !== l(s, e.options)) return !1
                    } else if (!f(e.queryKey, s)) return !1
                }
                if ("all" !== r) {
                    let t = e.isActive();
                    if ("active" === r && !t || "inactive" === r && t) return !1
                }
                return ("boolean" != typeof a || e.isStale() === a) && (!i || i === e.state.fetchStatus) && (!o || !!o(e))
            }

            function c(t, e) {
                let {
                    exact: r,
                    status: n,
                    predicate: i,
                    mutationKey: o
                } = t;
                if (o) {
                    if (!e.options.mutationKey) return !1;
                    if (r) {
                        if (h(e.options.mutationKey) !== h(o)) return !1
                    } else if (!f(e.options.mutationKey, o)) return !1
                }
                return (!n || e.state.status === n) && (!i || !!i(e))
            }

            function l(t, e) {
                return (e ? .queryKeyHashFn || h)(t)
            }

            function h(t) {
                return JSON.stringify(t, (t, e) => m(e) ? Object.keys(e).sort().reduce((t, r) => (t[r] = e[r], t), {}) : e)
            }

            function f(t, e) {
                return t === e || typeof t == typeof e && !!t && !!e && "object" == typeof t && "object" == typeof e && !Object.keys(e).some(r => !f(t[r], e[r]))
            }

            function d(t, e) {
                if (t === e) return t;
                let r = y(t) && y(e);
                if (r || m(t) && m(e)) {
                    let n = r ? t : Object.keys(t),
                        i = n.length,
                        o = r ? e : Object.keys(e),
                        s = o.length,
                        a = r ? [] : {},
                        u = 0;
                    for (let i = 0; i < s; i++) {
                        let s = r ? i : o[i];
                        (!r && n.includes(s) || r) && void 0 === t[s] && void 0 === e[s] ? (a[s] = void 0, u++) : (a[s] = d(t[s], e[s]), a[s] === t[s] && void 0 !== t[s] && u++)
                    }
                    return i === s && u === i ? t : a
                }
                return e
            }

            function p(t, e) {
                if (!e || Object.keys(t).length !== Object.keys(e).length) return !1;
                for (let r in t)
                    if (t[r] !== e[r]) return !1;
                return !0
            }

            function y(t) {
                return Array.isArray(t) && t.length === Object.keys(t).length
            }

            function m(t) {
                if (!b(t)) return !1;
                let e = t.constructor;
                if (void 0 === e) return !0;
                let r = e.prototype;
                return !!(b(r) && r.hasOwnProperty("isPrototypeOf")) && Object.getPrototypeOf(t) === Object.prototype
            }

            function b(t) {
                return "[object Object]" === Object.prototype.toString.call(t)
            }

            function g(t) {
                return new Promise(e => {
                    setTimeout(e, t)
                })
            }

            function w(t, e, r) {
                return "function" == typeof r.structuralSharing ? r.structuralSharing(t, e) : !1 !== r.structuralSharing ? d(t, e) : e
            }

            function v(t, e, r = 0) {
                let n = [...t, e];
                return r && n.length > r ? n.slice(1) : n
            }

            function E(t, e, r = 0) {
                let n = [e, ...t];
                return r && n.length > r ? n.slice(0, -1) : n
            }
            var x = Symbol()
        },
        21960: function(t, e, r) {
            "use strict";

            function n(t) {
                return "string" == typeof t ? Number.parseInt(t, "0x" === t.trim().substring(0, 2) ? 16 : 10) : "bigint" == typeof t ? Number(t) : t
            }
            r.d(e, {
                J: function() {
                    return n
                }
            })
        },
        76160: function(t, e, r) {
            "use strict";
            r.d(e, {
                _: function() {
                    return d
                }
            });
            var n, i = r(77233),
                o = r(21960),
                s = r(20760),
                a = r(31669),
                u = r(77014),
                c = r(75073),
                l = r(93715),
                h = r(59455);

            function f(t) {
                if (!t) return "Injected";
                let e = t => t.isApexWallet ? "Apex Wallet" : t.isAvalanche ? "Core Wallet" : t.isBackpack ? "Backpack" : t.isBifrost ? "Bifrost Wallet" : t.isBitKeep ? "BitKeep" : t.isBitski ? "Bitski" : t.isBlockWallet ? "BlockWallet" : t.isBraveWallet ? "Brave Wallet" : t.isCoin98 ? "Coin98 Wallet" : t.isCoinbaseWallet ? "Coinbase Wallet" : t.isDawn ? "Dawn Wallet" : t.isDefiant ? "Defiant" : t.isDesig ? "Desig Wallet" : t.isEnkrypt ? "Enkrypt" : t.isExodus ? "Exodus" : t.isFordefi ? "Fordefi" : t.isFrame ? "Frame" : t.isFrontier ? "Frontier Wallet" : t.isGamestop ? "GameStop Wallet" : t.isHaqqWallet ? "HAQQ Wallet" : t.isHyperPay ? "HyperPay Wallet" : t.isImToken ? "ImToken" : t.isHaloWallet ? "Halo Wallet" : t.isKuCoinWallet ? "KuCoin Wallet" : t.isMathWallet ? "MathWallet" : t.isNovaWallet ? "Nova Wallet" : t.isOkxWallet || t.isOKExWallet ? "OKX Wallet" : t.isOktoWallet ? "Okto Wallet" : t.isOneInchIOSWallet || t.isOneInchAndroidWallet ? "1inch Wallet" : t.isOneKey ? "OneKey Wallet" : t.isOpera ? "Opera" : t.isPhantom ? "Phantom" : t.isPortal ? "Ripio Portal" : t.isRabby ? "Rabby Wallet" : t.isRainbow ? "Rainbow" : t.isSafePal ? "SafePal Wallet" : t.isStatus ? "Status" : t.isSubWallet ? "SubWallet" : t.isTalisman ? "Talisman" : t.isTally ? "Taho" : t.isTokenPocket ? "TokenPocket" : t.isTokenary ? "Tokenary" : t.isTrust || t.isTrustWallet ? "Trust Wallet" : t.isTTWallet ? "TTWallet" : t.isXDEFI ? "XDEFI Wallet" : t.isZeal ? "Zeal" : t.isZerion ? "Zerion" : t.isMetaMask ? "MetaMask" : void 0;
                if (t.providers ? .length) {
                    let r = new Set,
                        n = 1;
                    for (let i of t.providers) {
                        let t = e(i);
                        t || (t = `Unknown Wallet #${n}`, n += 1), r.add(t)
                    }
                    let i = [...r];
                    return i.length ? i : i[0] ? ? "Injected"
                }
                return e(t) ? ? "Injected"
            }
            var d = class extends s.wR {
                constructor({
                    chains: t,
                    options: e
                } = {}) {
                    let r = {
                        shimDisconnect: !0,
                        getProvider() {
                            if ("undefined" == typeof window) return;
                            let t = window.ethereum;
                            return t ? .providers && t.providers.length > 0 ? t.providers[0] : t
                        },
                        ...e
                    };
                    super({
                        chains: t,
                        options: r
                    }), this.id = "injected", (0, s.Ko)(this, n, void 0), this.shimDisconnectKey = `${this.id}.shimDisconnect`, this.onAccountsChanged = t => {
                        0 === t.length ? this.emit("disconnect") : this.emit("change", {
                            account: (0, a.K)(t[0])
                        })
                    }, this.onChainChanged = t => {
                        let e = (0, o.J)(t),
                            r = this.isChainUnsupported(e);
                        this.emit("change", {
                            chain: {
                                id: e,
                                unsupported: r
                            }
                        })
                    }, this.onDisconnect = async t => {
                        !(1013 === t.code && await this.getProvider() && await this.getAccount()) && (this.emit("disconnect"), this.options.shimDisconnect && this.storage ? .removeItem(this.shimDisconnectKey))
                    };
                    let i = r.getProvider();
                    if ("string" == typeof r.name) this.name = r.name;
                    else if (i) {
                        let t = f(i);
                        r.name ? this.name = r.name(t) : "string" == typeof t ? this.name = t : this.name = t[0]
                    } else this.name = "Injected";
                    this.ready = !!i
                }
                async connect({
                    chainId: t
                } = {}) {
                    try {
                        let e = await this.getProvider();
                        if (!e) throw new i.N;
                        e.on && (e.on("accountsChanged", this.onAccountsChanged), e.on("chainChanged", this.onChainChanged), e.on("disconnect", this.onDisconnect)), this.emit("message", {
                            type: "connecting"
                        });
                        let r = await e.request({
                                method: "eth_requestAccounts"
                            }),
                            n = (0, a.K)(r[0]),
                            o = await this.getChainId(),
                            s = this.isChainUnsupported(o);
                        return t && o !== t && (o = (await this.switchChain(t)).id, s = this.isChainUnsupported(o)), this.options.shimDisconnect && this.storage ? .setItem(this.shimDisconnectKey, !0), {
                            account: n,
                            chain: {
                                id: o,
                                unsupported: s
                            }
                        }
                    } catch (t) {
                        if (this.isUserRejectedRequestError(t)) throw new u.ab(t);
                        if (-32002 === t.code) throw new u.pT(t);
                        throw t
                    }
                }
                async disconnect() {
                    let t = await this.getProvider();
                    t ? .removeListener && (t.removeListener("accountsChanged", this.onAccountsChanged), t.removeListener("chainChanged", this.onChainChanged), t.removeListener("disconnect", this.onDisconnect), this.options.shimDisconnect && this.storage ? .removeItem(this.shimDisconnectKey))
                }
                async getAccount() {
                    let t = await this.getProvider();
                    if (!t) throw new i.N;
                    let e = await t.request({
                        method: "eth_accounts"
                    });
                    return (0, a.K)(e[0])
                }
                async getChainId() {
                    let t = await this.getProvider();
                    if (!t) throw new i.N;
                    return t.request({
                        method: "eth_chainId"
                    }).then(o.J)
                }
                async getProvider() {
                    let t = this.options.getProvider();
                    return t && (0, s.qx)(this, n, t), (0, s.ac)(this, n)
                }
                async getWalletClient({
                    chainId: t
                } = {}) {
                    let [e, r] = await Promise.all([this.getProvider(), this.getAccount()]), n = this.chains.find(e => e.id === t);
                    if (!e) throw Error("provider is required.");
                    return (0, c.K)({
                        account: r,
                        chain: n,
                        transport: (0, l.P)(e)
                    })
                }
                async isAuthorized() {
                    try {
                        if (this.options.shimDisconnect && !this.storage ? .getItem(this.shimDisconnectKey)) return !1;
                        if (!await this.getProvider()) throw new i.N;
                        return !!await this.getAccount()
                    } catch {
                        return !1
                    }
                }
                async switchChain(t) {
                    let e = await this.getProvider();
                    if (!e) throw new i.N;
                    let r = (0, h.eC)(t);
                    try {
                        return await Promise.all([e.request({
                            method: "wallet_switchEthereumChain",
                            params: [{
                                chainId: r
                            }]
                        }), new Promise(e => this.on("change", ({
                            chain: r
                        }) => {
                            r ? .id === t && e()
                        }))]), this.chains.find(e => e.id === t) ? ? {
                            id: t,
                            name: `Chain ${r}`,
                            network: `${r}`,
                            nativeCurrency: {
                                name: "Ether",
                                decimals: 18,
                                symbol: "ETH"
                            },
                            rpcUrls: {
                                default: {
                                    http: [""]
                                },
                                public: {
                                    http: [""]
                                }
                            }
                        }
                    } catch (o) {
                        let n = this.chains.find(e => e.id === t);
                        if (!n) throw new i.B({
                            chainId: t,
                            connectorId: this.id
                        });
                        if (4902 === o.code || o ? .data ? .originalError ? .code === 4902) try {
                            if (await e.request({
                                    method: "wallet_addEthereumChain",
                                    params: [{
                                        chainId: r,
                                        chainName: n.name,
                                        nativeCurrency: n.nativeCurrency,
                                        rpcUrls: [n.rpcUrls.public ? .http[0] ? ? ""],
                                        blockExplorerUrls: this.getBlockExplorerUrls(n)
                                    }]
                                }), await this.getChainId() !== t) throw new u.ab(Error("User rejected switch after adding network."));
                            return n
                        } catch (t) {
                            throw new u.ab(t)
                        }
                        if (this.isUserRejectedRequestError(o)) throw new u.ab(o);
                        throw new u.x3(o)
                    }
                }
                async watchAsset({
                    address: t,
                    decimals: e = 18,
                    image: r,
                    symbol: n
                }) {
                    let o = await this.getProvider();
                    if (!o) throw new i.N;
                    return o.request({
                        method: "wallet_watchAsset",
                        params: {
                            type: "ERC20",
                            options: {
                                address: t,
                                decimals: e,
                                image: r,
                                symbol: n
                            }
                        }
                    })
                }
                isUserRejectedRequestError(t) {
                    return 4001 === t.code
                }
            };
            n = new WeakMap
        },
        77233: function(t, e, r) {
            "use strict";
            r.d(e, {
                B: function() {
                    return n
                },
                N: function() {
                    return i
                }
            });
            var n = class extends Error {
                    constructor({
                        chainId: t,
                        connectorId: e
                    }) {
                        super(`Chain "${t}" not configured for connector "${e}".`), this.name = "ChainNotConfiguredForConnectorError"
                    }
                },
                i = class extends Error {
                    constructor() {
                        super(...arguments), this.name = "ConnectorNotFoundError", this.message = "Connector not found"
                    }
                }
        },
        20760: function(t, e, r) {
            "use strict";
            r.d(e, {
                wR: function() {
                    return h
                },
                Ko: function() {
                    return u
                },
                ac: function() {
                    return a
                },
                U9: function() {
                    return l
                },
                qx: function() {
                    return c
                }
            });
            var n = r(77625),
                i = r(64314);
            let o = (0, r(90328).a)({
                id: 5,
                network: "goerli",
                name: "Goerli",
                nativeCurrency: {
                    name: "Goerli Ether",
                    symbol: "ETH",
                    decimals: 18
                },
                rpcUrls: {
                    alchemy: {
                        http: ["https://eth-goerli.g.alchemy.com/v2"],
                        webSocket: ["wss://eth-goerli.g.alchemy.com/v2"]
                    },
                    infura: {
                        http: ["https://goerli.infura.io/v3"],
                        webSocket: ["wss://goerli.infura.io/ws/v3"]
                    },
                    default: {
                        http: ["https://rpc.ankr.com/eth_goerli"]
                    },
                    public: {
                        http: ["https://rpc.ankr.com/eth_goerli"]
                    }
                },
                blockExplorers: {
                    etherscan: {
                        name: "Etherscan",
                        url: "https://goerli.etherscan.io"
                    },
                    default: {
                        name: "Etherscan",
                        url: "https://goerli.etherscan.io"
                    }
                },
                contracts: {
                    ensRegistry: {
                        address: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e"
                    },
                    ensUniversalResolver: {
                        address: "0x56522D00C410a43BFfDF00a9A569489297385790",
                        blockCreated: 8765204
                    },
                    multicall3: {
                        address: "0xca11bde05977b3631167028862be2a173976ca11",
                        blockCreated: 6507670
                    }
                },
                testnet: !0
            });
            var s = (t, e, r) => {
                    if (!e.has(t)) throw TypeError("Cannot " + r)
                },
                a = (t, e, r) => (s(t, e, "read from private field"), r ? r.call(t) : e.get(t)),
                u = (t, e, r) => {
                    if (e.has(t)) throw TypeError("Cannot add the same private member more than once");
                    e instanceof WeakSet ? e.add(t) : e.set(t, r)
                },
                c = (t, e, r, n) => (s(t, e, "write to private field"), n ? n.call(t, r) : e.set(t, r), r),
                l = (t, e, r) => (s(t, e, "access private method"), r),
                h = class extends n {
                    constructor({
                        chains: t = [i.R, o],
                        options: e
                    }) {
                        super(), this.chains = t, this.options = e
                    }
                    getBlockExplorerUrls(t) {
                        let {
                            default: e,
                            ...r
                        } = t.blockExplorers ? ? {};
                        if (e) return [e.url, ...Object.values(r).map(t => t.url)]
                    }
                    isChainUnsupported(t) {
                        return !this.chains.some(e => e.id === t)
                    }
                    setStorage(t) {
                        this.storage = t
                    }
                }
        },
        96095: function(t, e, r) {
            "use strict";
            r.d(e, {
                z: function() {
                    return R
                }
            });
            var n, i, o, s, a, u, c, l, h, f, d, p, y, m, b, g, w, v, E, x, S = r(20760),
                O = r(5665),
                C = r(31669),
                _ = r(77014),
                A = r(75073),
                P = r(93715),
                k = r(59455),
                D = "eip155",
                I = "store",
                M = "requestedChains",
                B = "wallet_addEthereumChain",
                R = class extends S.wR {
                    constructor(t) {
                        super({ ...t,
                            options: {
                                isNewChainsStale: !0,
                                ...t.options
                            }
                        }), (0, S.Ko)(this, o), (0, S.Ko)(this, a), (0, S.Ko)(this, c), (0, S.Ko)(this, h), (0, S.Ko)(this, d), (0, S.Ko)(this, y), (0, S.Ko)(this, b), (0, S.Ko)(this, w), (0, S.Ko)(this, E), this.id = "walletConnect", this.name = "WalletConnect", this.ready = !0, (0, S.Ko)(this, n, void 0), (0, S.Ko)(this, i, void 0), this.onAccountsChanged = t => {
                            0 === t.length ? this.emit("disconnect") : this.emit("change", {
                                account: (0, C.K)(t[0])
                            })
                        }, this.onChainChanged = t => {
                            let e = Number(t),
                                r = this.isChainUnsupported(e);
                            this.emit("change", {
                                chain: {
                                    id: e,
                                    unsupported: r
                                }
                            })
                        }, this.onDisconnect = () => {
                            (0, S.U9)(this, y, m).call(this, []), this.emit("disconnect")
                        }, this.onDisplayUri = t => {
                            this.emit("message", {
                                type: "display_uri",
                                data: t
                            })
                        }, this.onConnect = () => {
                            this.emit("connect", {})
                        }, (0, S.U9)(this, o, s).call(this)
                    }
                    async connect({
                        chainId: t,
                        pairingTopic: e
                    } = {}) {
                        try {
                            let r = t;
                            if (!r) {
                                let t = this.storage ? .getItem(I),
                                    e = t ? .state ? .data ? .chain ? .id;
                                r = e && !this.isChainUnsupported(e) ? e : this.chains[0] ? .id
                            }
                            if (!r) throw Error("No chains found on connector.");
                            let n = await this.getProvider();
                            (0, S.U9)(this, h, f).call(this);
                            let i = (0, S.U9)(this, c, l).call(this);
                            if (n.session && i && await n.disconnect(), !n.session || i) {
                                let t = this.chains.filter(t => t.id !== r).map(t => t.id);
                                this.emit("message", {
                                    type: "connecting"
                                }), await n.connect({
                                    pairingTopic: e,
                                    optionalChains: [r, ...t]
                                }), (0, S.U9)(this, y, m).call(this, this.chains.map(({
                                    id: t
                                }) => t))
                            }
                            let o = await n.enable(),
                                s = (0, C.K)(o[0]),
                                a = await this.getChainId(),
                                u = this.isChainUnsupported(a);
                            return {
                                account: s,
                                chain: {
                                    id: a,
                                    unsupported: u
                                }
                            }
                        } catch (t) {
                            if (/user rejected/i.test(t ? .message)) throw new _.ab(t);
                            throw t
                        }
                    }
                    async disconnect() {
                        let t = await this.getProvider();
                        try {
                            await t.disconnect()
                        } catch (t) {
                            if (!/No matching key/i.test(t.message)) throw t
                        } finally {
                            (0, S.U9)(this, d, p).call(this), (0, S.U9)(this, y, m).call(this, [])
                        }
                    }
                    async getAccount() {
                        let {
                            accounts: t
                        } = await this.getProvider();
                        return (0, C.K)(t[0])
                    }
                    async getChainId() {
                        let {
                            chainId: t
                        } = await this.getProvider();
                        return t
                    }
                    async getProvider({
                        chainId: t
                    } = {}) {
                        return (0, S.ac)(this, n) || await (0, S.U9)(this, o, s).call(this), t && await this.switchChain(t), (0, S.ac)(this, n)
                    }
                    async getWalletClient({
                        chainId: t
                    } = {}) {
                        let [e, r] = await Promise.all([this.getProvider({
                            chainId: t
                        }), this.getAccount()]), n = this.chains.find(e => e.id === t);
                        if (!e) throw Error("provider is required.");
                        return (0, A.K)({
                            account: r,
                            chain: n,
                            transport: (0, P.P)(e)
                        })
                    }
                    async isAuthorized() {
                        try {
                            let [t, e] = await Promise.all([this.getAccount(), this.getProvider()]), r = (0, S.U9)(this, c, l).call(this);
                            if (!t) return !1;
                            if (r && e.session) {
                                try {
                                    await e.disconnect()
                                } catch {}
                                return !1
                            }
                            return !0
                        } catch {
                            return !1
                        }
                    }
                    async switchChain(t) {
                        let e = this.chains.find(e => e.id === t);
                        if (!e) throw new _.x3(Error("chain not found on connector."));
                        try {
                            let r = await this.getProvider(),
                                n = (0, S.U9)(this, w, v).call(this),
                                i = (0, S.U9)(this, E, x).call(this);
                            if (!n.includes(t) && i.includes(B)) {
                                await r.request({
                                    method: B,
                                    params: [{
                                        chainId: (0, k.eC)(e.id),
                                        blockExplorerUrls: [e.blockExplorers ? .default ? .url],
                                        chainName: e.name,
                                        nativeCurrency: e.nativeCurrency,
                                        rpcUrls: [...e.rpcUrls.default.http]
                                    }]
                                });
                                let n = (0, S.U9)(this, b, g).call(this);
                                n.push(t), (0, S.U9)(this, y, m).call(this, n)
                            }
                            return await r.request({
                                method: "wallet_switchEthereumChain",
                                params: [{
                                    chainId: (0, k.eC)(t)
                                }]
                            }), e
                        } catch (e) {
                            let t = "string" == typeof e ? e : e ? .message;
                            if (/user rejected request/i.test(t)) throw new _.ab(e);
                            throw new _.x3(e)
                        }
                    }
                };
            n = new WeakMap, i = new WeakMap, o = new WeakSet, s = async function() {
                return (0, S.ac)(this, i) || "undefined" == typeof window || (0, S.qx)(this, i, (0, S.U9)(this, a, u).call(this)), (0, S.ac)(this, i)
            }, a = new WeakSet, u = async function() {
                let {
                    EthereumProvider: t
                } = await Promise.all([r.e(730), r.e(3854)]).then(r.bind(r, 13854)), e = this.chains.map(({
                    id: t
                }) => t);
                if (e.length) {
                    let {
                        projectId: r,
                        showQrModal: i = !0,
                        qrModalOptions: o,
                        metadata: s,
                        relayUrl: a
                    } = this.options;
                    (0, S.qx)(this, n, await t.init({
                        showQrModal: i,
                        qrModalOptions: o,
                        projectId: r,
                        optionalChains: e,
                        rpcMap: Object.fromEntries(this.chains.map(t => [t.id, t.rpcUrls.default.http[0]])),
                        metadata: s,
                        relayUrl: a
                    }))
                }
            }, c = new WeakSet, l = function() {
                if ((0, S.U9)(this, E, x).call(this).includes(B) || !this.options.isNewChainsStale) return !1;
                let t = (0, S.U9)(this, b, g).call(this),
                    e = this.chains.map(({
                        id: t
                    }) => t),
                    r = (0, S.U9)(this, w, v).call(this);
                return (!r.length || !!r.some(t => e.includes(t))) && !e.every(e => t.includes(e))
            }, h = new WeakSet, f = function() {
                (0, S.ac)(this, n) && ((0, S.U9)(this, d, p).call(this), (0, S.ac)(this, n).on("accountsChanged", this.onAccountsChanged), (0, S.ac)(this, n).on("chainChanged", this.onChainChanged), (0, S.ac)(this, n).on("disconnect", this.onDisconnect), (0, S.ac)(this, n).on("session_delete", this.onDisconnect), (0, S.ac)(this, n).on("display_uri", this.onDisplayUri), (0, S.ac)(this, n).on("connect", this.onConnect))
            }, d = new WeakSet, p = function() {
                (0, S.ac)(this, n) && ((0, S.ac)(this, n).removeListener("accountsChanged", this.onAccountsChanged), (0, S.ac)(this, n).removeListener("chainChanged", this.onChainChanged), (0, S.ac)(this, n).removeListener("disconnect", this.onDisconnect), (0, S.ac)(this, n).removeListener("session_delete", this.onDisconnect), (0, S.ac)(this, n).removeListener("display_uri", this.onDisplayUri), (0, S.ac)(this, n).removeListener("connect", this.onConnect))
            }, y = new WeakSet, m = function(t) {
                this.storage ? .setItem(M, t)
            }, b = new WeakSet, g = function() {
                return this.storage ? .getItem(M) ? ? []
            }, w = new WeakSet, v = function() {
                if (!(0, S.ac)(this, n)) return [];
                let t = S.ac(this, n).session ? .namespaces;
                if (!t) return [];
                let e = (0, O.fK)(t);
                return e[D] ? .chains ? .map(t => parseInt(t.split(":")[1] || "")) ? ? []
            }, E = new WeakSet, x = function() {
                if (!(0, S.ac)(this, n)) return [];
                let t = S.ac(this, n).session ? .namespaces;
                if (!t) return [];
                let e = (0, O.fK)(t);
                return e[D] ? .methods ? ? []
            }
        },
        1673: function(t, e, r) {
            "use strict";
            r.d(e, {
                QB: function() {
                    return re
                },
                $j: function() {
                    return rS
                },
                _g: function() {
                    return rE
                },
                o6: function() {
                    return rg
                },
                vZ: function() {
                    return ra
                },
                zP: function() {
                    return rO
                },
                EG: function() {
                    return rN
                },
                RQ: function() {
                    return rK
                },
                w6: function() {
                    return rz
                },
                Lk: function() {
                    return rH
                },
                D0: function() {
                    return rF
                },
                Hy: function() {
                    return rL
                },
                uV: function() {
                    return rA
                },
                gY: function() {
                    return rh
                },
                xz: function() {
                    return rP
                },
                jr: function() {
                    return rk
                },
                wp: function() {
                    return rb
                },
                a4: function() {
                    return rT
                },
                JH: function() {
                    return rj
                },
                l: function() {
                    return rq
                },
                If: function() {
                    return r$
                },
                Mn: function() {
                    return rV
                },
                uH: function() {
                    return rW
                },
                QC: function() {
                    return rG
                },
                pC: function() {
                    return rD
                },
                Tb: function() {
                    return rI
                },
                fq: function() {
                    return rM
                },
                n9: function() {
                    return rU
                }
            });
            var n, i, o, s, a, u = r(76160),
                c = (t, e, r) => {
                    if (!e.has(t)) throw TypeError("Cannot " + r)
                },
                l = (t, e, r) => (c(t, e, "read from private field"), r ? r.call(t) : e.get(t)),
                h = (t, e, r) => {
                    if (e.has(t)) throw TypeError("Cannot add the same private member more than once");
                    e instanceof WeakSet ? e.add(t) : e.set(t, r)
                },
                f = (t, e, r, n) => (c(t, e, "write to private field"), n ? n.call(t, r) : e.set(t, r), r),
                d = (t, e, r) => (c(t, e, "access private method"), r),
                p = r(49769),
                y = r(98158),
                m = r(65436),
                b = r(93182),
                g = r(93627),
                w = r(36826),
                v = r(59455),
                E = r(55246),
                x = r(75921),
                S = r(20010);

            function O(t, e) {
                if (!(t instanceof x.G)) return !1;
                let r = t.walk(t => t instanceof S.Lu);
                return r instanceof S.Lu && (!!(r.data ? .errorName === "ResolverNotFound" || r.data ? .errorName === "ResolverWildcardNotSupported" || r.reason ? .includes("Wildcard on non-extended resolvers is not supported")) || "reverse" === e && r.reason === E.$[50])
            }
            var C = r(89256),
                _ = r(44659),
                A = r(10208),
                P = r(93610);

            function k(t) {
                if (66 !== t.length || 0 !== t.indexOf("[") || 65 !== t.indexOf("]")) return null;
                let e = `0x${t.slice(1,65)}`;
                return (0, P.v)(e) ? e : null
            }

            function D(t) {
                let e = new Uint8Array(32).fill(0);
                if (!t) return (0, v.ci)(e);
                let r = t.split(".");
                for (let t = r.length - 1; t >= 0; t -= 1) {
                    let n = k(r[t]),
                        i = n ? (0, _.O0)(n) : (0, A.w)((0, _.qX)(r[t]), "bytes");
                    e = (0, A.w)((0, C.zo)([e, i]), "bytes")
                }
                return (0, v.ci)(e)
            }

            function I(t) {
                return `[${t.slice(2)}]`
            }

            function M(t) {
                let e = new Uint8Array(32).fill(0);
                return t ? k(t) || (0, A.w)((0, _.qX)(t)) : (0, v.ci)(e)
            }

            function B(t) {
                let e = t.replace(/^\.|\.$/gm, "");
                if (0 === e.length) return new Uint8Array(1);
                let r = new Uint8Array((0, _.qX)(e).byteLength + 2),
                    n = 0,
                    i = e.split(".");
                for (let t = 0; t < i.length; t++) {
                    let e = (0, _.qX)(i[t]);
                    e.byteLength > 255 && (e = (0, _.qX)(I(M(i[t])))), r[n] = e.length, r.set(e, n + 1), n += e.length + 1
                }
                return r.byteLength !== n + 1 ? r.slice(0, n + 1) : r
            }
            var R = r(82645),
                T = r(65531),
                j = r(77014);
            let U = 3;

            function N(t, {
                abi: e,
                address: r,
                args: n,
                docsPath: i,
                functionName: o,
                sender: s
            }) {
                let {
                    code: a,
                    data: u,
                    message: c,
                    shortMessage: l
                } = t instanceof S.VQ ? t : t instanceof x.G ? t.walk(t => "data" in t) || t.walk() : {}, h = t instanceof T.wb ? new S.Dk({
                    functionName: o
                }) : [U, j.XS.code].includes(a) && (u || c || l) ? new S.Lu({
                    abi: e,
                    data: "object" == typeof u ? u.data : u,
                    functionName: o,
                    message: l ? ? c
                }) : t;
                return new S.uq(h, {
                    abi: e,
                    args: n,
                    contractAddress: r,
                    docsPath: i,
                    functionName: o,
                    sender: s
                })
            }
            var F = r(24733);
            async function L(t, {
                abi: e,
                address: r,
                args: n,
                functionName: i,
                ...o
            }) {
                let s = (0, b.R)({
                    abi: e,
                    args: n,
                    functionName: i
                });
                try {
                    let {
                        data: a
                    } = await (0, R.s)(t, F.R, "call")({
                        data: s,
                        to: r,
                        ...o
                    });
                    return (0, m.k)({
                        abi: e,
                        args: n,
                        functionName: i,
                        data: a || "0x"
                    })
                } catch (t) {
                    throw N(t, {
                        abi: e,
                        address: r,
                        args: n,
                        docsPath: "/docs/contract/readContract",
                        functionName: i
                    })
                }
            }
            async function q(t, {
                blockNumber: e,
                blockTag: r,
                coinType: n,
                name: i,
                universalResolverAddress: o
            }) {
                let s = o;
                if (!s) {
                    if (!t.chain) throw Error("client chain not configured. universalResolverAddress is required.");
                    s = (0, g.L)({
                        blockNumber: e,
                        chain: t.chain,
                        contract: "ensUniversalResolver"
                    })
                }
                try {
                    let o = (0, b.R)({
                            abi: y.X$,
                            functionName: "addr",
                            ...null != n ? {
                                args: [D(i), BigInt(n)]
                            } : {
                                args: [D(i)]
                            }
                        }),
                        a = await (0, R.s)(t, L, "readContract")({
                            address: s,
                            abi: y.k3,
                            functionName: "resolve",
                            args: [(0, v.NC)(B(i)), o],
                            blockNumber: e,
                            blockTag: r
                        });
                    if ("0x" === a[0]) return null;
                    let u = (0, m.k)({
                        abi: y.X$,
                        args: null != n ? [D(i), BigInt(n)] : void 0,
                        functionName: "addr",
                        data: a[0]
                    });
                    if ("0x" === u || "0x00" === (0, w.f)(u)) return null;
                    return u
                } catch (t) {
                    if (O(t, "resolve")) return null;
                    throw t
                }
            }
            class $ extends x.G {
                constructor({
                    data: t
                }) {
                    super("Unable to extract image from metadata. The metadata may be malformed or invalid.", {
                        metaMessages: ["- Metadata must be a JSON object with at least an `image`, `image_url` or `image_data` property.", "", `Provided data: ${JSON.stringify(t)}`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "EnsAvatarInvalidMetadataError"
                    })
                }
            }
            class W extends x.G {
                constructor({
                    reason: t
                }) {
                    super(`ENS NFT avatar URI is invalid. ${t}`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "EnsAvatarInvalidNftUriError"
                    })
                }
            }
            class G extends x.G {
                constructor({
                    uri: t
                }) {
                    super(`Unable to resolve ENS avatar URI "${t}". The URI may be malformed, invalid, or does not respond with a valid image.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "EnsAvatarUriResolutionError"
                    })
                }
            }
            class z extends x.G {
                constructor({
                    namespace: t
                }) {
                    super(`ENS NFT avatar namespace "${t}" is not supported. Must be "erc721" or "erc1155".`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "EnsAvatarUnsupportedNamespaceError"
                    })
                }
            }
            let H = /(?<protocol>https?:\/\/[^\/]*|ipfs:\/|ipns:\/|ar:\/)?(?<root>\/)?(?<subpath>ipfs\/|ipns\/)?(?<target>[\w\-.]+)(?<subtarget>\/.*)?/,
                K = /^(Qm[1-9A-HJ-NP-Za-km-z]{44,}|b[A-Za-z2-7]{58,}|B[A-Z2-7]{58,}|z[1-9A-HJ-NP-Za-km-z]{48,}|F[0-9A-F]{50,})(\/(?<target>[\w\-.]+))?(?<subtarget>\/.*)?$/,
                V = /^data:([a-zA-Z\-/+]*);base64,([^"].*)/,
                Q = /^data:([a-zA-Z\-/+]*)?(;[a-zA-Z0-9].*?)?(,)/;
            async function Z(t) {
                try {
                    let e = await fetch(t, {
                        method: "HEAD"
                    });
                    if (200 === e.status) {
                        let t = e.headers.get("content-type");
                        return t ? .startsWith("image/")
                    }
                    return !1
                } catch (e) {
                    if ("object" == typeof e && void 0 !== e.response || !globalThis.hasOwnProperty("Image")) return !1;
                    return new Promise(e => {
                        let r = new Image;
                        r.onload = () => {
                            e(!0)
                        }, r.onerror = () => {
                            e(!1)
                        }, r.src = t
                    })
                }
            }

            function Y(t, e) {
                return t ? t.endsWith("/") ? t.slice(0, -1) : t : e
            }

            function J({
                uri: t,
                gatewayUrls: e
            }) {
                let r = V.test(t);
                if (r) return {
                    uri: t,
                    isOnChain: !0,
                    isEncoded: r
                };
                let n = Y(e ? .ipfs, "https://ipfs.io"),
                    i = Y(e ? .arweave, "https://arweave.net"),
                    o = t.match(H),
                    {
                        protocol: s,
                        subpath: a,
                        target: u,
                        subtarget: c = ""
                    } = o ? .groups || {},
                    l = "ipns:/" === s || "ipns/" === a,
                    h = "ipfs:/" === s || "ipfs/" === a || K.test(t);
                if (t.startsWith("http") && !l && !h) {
                    let r = t;
                    return e ? .arweave && (r = t.replace(/https:\/\/arweave.net/g, e ? .arweave)), {
                        uri: r,
                        isOnChain: !1,
                        isEncoded: !1
                    }
                }
                if ((l || h) && u) return {
                    uri: `${n}/${l?"ipns":"ipfs"}/${u}${c}`,
                    isOnChain: !1,
                    isEncoded: !1
                };
                if ("ar:/" === s && u) return {
                    uri: `${i}/${u}${c||""}`,
                    isOnChain: !1,
                    isEncoded: !1
                };
                let f = t.replace(Q, "");
                if (f.startsWith("<svg") && (f = `data:image/svg+xml;base64,${btoa(f)}`), f.startsWith("data:") || f.startsWith("{")) return {
                    uri: f,
                    isOnChain: !0,
                    isEncoded: !1
                };
                throw new G({
                    uri: t
                })
            }

            function X(t) {
                if ("object" != typeof t || !("image" in t) && !("image_url" in t) && !("image_data" in t)) throw new $({
                    data: t
                });
                return t.image || t.image_url || t.image_data
            }
            async function tt({
                gatewayUrls: t,
                uri: e
            }) {
                try {
                    let r = await fetch(e).then(t => t.json());
                    return await te({
                        gatewayUrls: t,
                        uri: X(r)
                    })
                } catch {
                    throw new G({
                        uri: e
                    })
                }
            }
            async function te({
                gatewayUrls: t,
                uri: e
            }) {
                let {
                    uri: r,
                    isOnChain: n
                } = J({
                    uri: e,
                    gatewayUrls: t
                });
                if (n || await Z(r)) return r;
                throw new G({
                    uri: e
                })
            }

            function tr(t) {
                let e = t;
                e.startsWith("did:nft:") && (e = e.replace("did:nft:", "").replace(/_/g, "/"));
                let [r, n, i] = e.split("/"), [o, s] = r.split(":"), [a, u] = n.split(":");
                if (!o || "eip155" !== o.toLowerCase()) throw new W({
                    reason: "Only EIP-155 supported"
                });
                if (!s) throw new W({
                    reason: "Chain ID not found"
                });
                if (!u) throw new W({
                    reason: "Contract address not found"
                });
                if (!i) throw new W({
                    reason: "Token ID not found"
                });
                if (!a) throw new W({
                    reason: "ERC namespace not found"
                });
                return {
                    chainID: parseInt(s),
                    namespace: a.toLowerCase(),
                    contractAddress: u,
                    tokenID: i
                }
            }
            async function tn(t, {
                nft: e
            }) {
                if ("erc721" === e.namespace) return L(t, {
                    address: e.contractAddress,
                    abi: [{
                        name: "tokenURI",
                        type: "function",
                        stateMutability: "view",
                        inputs: [{
                            name: "tokenId",
                            type: "uint256"
                        }],
                        outputs: [{
                            name: "",
                            type: "string"
                        }]
                    }],
                    functionName: "tokenURI",
                    args: [BigInt(e.tokenID)]
                });
                if ("erc1155" === e.namespace) return L(t, {
                    address: e.contractAddress,
                    abi: [{
                        name: "uri",
                        type: "function",
                        stateMutability: "view",
                        inputs: [{
                            name: "_id",
                            type: "uint256"
                        }],
                        outputs: [{
                            name: "",
                            type: "string"
                        }]
                    }],
                    functionName: "uri",
                    args: [BigInt(e.tokenID)]
                });
                throw new z({
                    namespace: e.namespace
                })
            }
            async function ti(t, {
                gatewayUrls: e,
                record: r
            }) {
                return /eip155:/i.test(r) ? to(t, {
                    gatewayUrls: e,
                    record: r
                }) : te({
                    uri: r,
                    gatewayUrls: e
                })
            }
            async function to(t, {
                gatewayUrls: e,
                record: r
            }) {
                let n = tr(r),
                    {
                        uri: i,
                        isOnChain: o,
                        isEncoded: s
                    } = J({
                        uri: await tn(t, {
                            nft: n
                        }),
                        gatewayUrls: e
                    });
                if (o && (i.includes("data:application/json;base64,") || i.startsWith("{"))) return te({
                    uri: X(JSON.parse(s ? atob(i.replace("data:application/json;base64,", "")) : i)),
                    gatewayUrls: e
                });
                let a = n.tokenID;
                return "erc1155" === n.namespace && (a = a.replace("0x", "").padStart(64, "0")), tt({
                    gatewayUrls: e,
                    uri: i.replace(/(?:0x)?{id}/, a)
                })
            }
            async function ts(t, {
                blockNumber: e,
                blockTag: r,
                name: n,
                key: i,
                universalResolverAddress: o
            }) {
                let s = o;
                if (!s) {
                    if (!t.chain) throw Error("client chain not configured. universalResolverAddress is required.");
                    s = (0, g.L)({
                        blockNumber: e,
                        chain: t.chain,
                        contract: "ensUniversalResolver"
                    })
                }
                try {
                    let o = await (0, R.s)(t, L, "readContract")({
                        address: s,
                        abi: y.k3,
                        functionName: "resolve",
                        args: [(0, v.NC)(B(n)), (0, b.R)({
                            abi: y.nZ,
                            functionName: "text",
                            args: [D(n), i]
                        })],
                        blockNumber: e,
                        blockTag: r
                    });
                    if ("0x" === o[0]) return null;
                    let a = (0, m.k)({
                        abi: y.nZ,
                        functionName: "text",
                        data: o[0]
                    });
                    return "" === a ? null : a
                } catch (t) {
                    if (O(t, "resolve")) return null;
                    throw t
                }
            }
            async function ta(t, {
                blockNumber: e,
                blockTag: r,
                gatewayUrls: n,
                name: i,
                universalResolverAddress: o
            }) {
                let s = await (0, R.s)(t, ts, "getEnsText")({
                    blockNumber: e,
                    blockTag: r,
                    key: "avatar",
                    name: i,
                    universalResolverAddress: o
                });
                if (!s) return null;
                try {
                    return await ti(t, {
                        record: s,
                        gatewayUrls: n
                    })
                } catch {
                    return null
                }
            }
            async function tu(t, {
                address: e,
                blockNumber: r,
                blockTag: n,
                universalResolverAddress: i
            }) {
                let o = i;
                if (!o) {
                    if (!t.chain) throw Error("client chain not configured. universalResolverAddress is required.");
                    o = (0, g.L)({
                        blockNumber: r,
                        chain: t.chain,
                        contract: "ensUniversalResolver"
                    })
                }
                let s = `${e.toLowerCase().substring(2)}.addr.reverse`;
                try {
                    let [i, a] = await (0, R.s)(t, L, "readContract")({
                        address: o,
                        abi: y.du,
                        functionName: "reverse",
                        args: [(0, v.NC)(B(s))],
                        blockNumber: r,
                        blockTag: n
                    });
                    if (e.toLowerCase() !== a.toLowerCase()) return null;
                    return i
                } catch (t) {
                    if (O(t, "reverse")) return null;
                    throw t
                }
            }
            async function tc(t, {
                blockNumber: e,
                blockTag: r,
                name: n,
                universalResolverAddress: i
            }) {
                let o = i;
                if (!o) {
                    if (!t.chain) throw Error("client chain not configured. universalResolverAddress is required.");
                    o = (0, g.L)({
                        blockNumber: e,
                        chain: t.chain,
                        contract: "ensUniversalResolver"
                    })
                }
                let [s] = await (0, R.s)(t, L, "readContract")({
                    address: o,
                    abi: [{
                        inputs: [{
                            type: "bytes"
                        }],
                        name: "findResolver",
                        outputs: [{
                            type: "address"
                        }, {
                            type: "bytes32"
                        }],
                        stateMutability: "view",
                        type: "function"
                    }],
                    functionName: "findResolver",
                    args: [(0, v.NC)(B(n))],
                    blockNumber: e,
                    blockTag: r
                });
                return s
            }

            function tl(t, {
                method: e
            }) {
                let r = {};
                return "fallback" === t.transport.type && t.transport.onResponse ? .(({
                    method: t,
                    response: n,
                    status: i,
                    transport: o
                }) => {
                    "success" === i && e === t && (r[n] = o.request)
                }), e => r[e] || t.request
            }
            async function th(t) {
                let e = tl(t, {
                        method: "eth_newBlockFilter"
                    }),
                    r = await t.request({
                        method: "eth_newBlockFilter"
                    });
                return {
                    id: r,
                    request: e(r),
                    type: "block"
                }
            }
            class tf extends x.G {
                constructor(t) {
                    super(`Filter type "${t}" is not supported.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "FilterTypeNotSupportedError"
                    })
                }
            }
            var td = r(10683),
                tp = r(30056),
                ty = r(7275),
                tm = r(64043);

            function tb({
                abi: t,
                eventName: e,
                args: r
            }) {
                let n = t[0];
                if (e && !(n = (0, tm.mE)({
                        abi: t,
                        args: r,
                        name: e
                    }))) throw new T.mv(e, {
                    docsPath: "/docs/contract/encodeEventTopics"
                });
                if ("event" !== n.type) throw new T.mv(void 0, {
                    docsPath: "/docs/contract/encodeEventTopics"
                });
                let i = (0, ty.t)(n),
                    o = (0, td.e)(i),
                    s = [];
                if (r && "inputs" in n) {
                    let t = n.inputs ? .filter(t => "indexed" in t && t.indexed),
                        e = Array.isArray(r) ? r : Object.values(r).length > 0 ? t ? .map(t => r[t.name]) ? ? [] : [];
                    e.length > 0 && (s = t ? .map((t, r) => Array.isArray(e[r]) ? e[r].map((n, i) => tg({
                        param: t,
                        value: e[r][i]
                    })) : e[r] ? tg({
                        param: t,
                        value: e[r]
                    }) : null) ? ? [])
                }
                return [o, ...s]
            }

            function tg({
                param: t,
                value: e
            }) {
                if ("string" === t.type || "bytes" === t.type) return (0, A.w)((0, _.O0)(e));
                if ("tuple" === t.type || t.type.match(/^(.*)\[(\d+)?\]$/)) throw new tf(t.type);
                return (0, tp.E)([t], [e])
            }
            async function tw(t, {
                address: e,
                abi: r,
                args: n,
                eventName: i,
                fromBlock: o,
                strict: s,
                toBlock: a
            }) {
                let u = tl(t, {
                        method: "eth_newFilter"
                    }),
                    c = i ? tb({
                        abi: r,
                        args: n,
                        eventName: i
                    }) : void 0,
                    l = await t.request({
                        method: "eth_newFilter",
                        params: [{
                            address: e,
                            fromBlock: "bigint" == typeof o ? (0, v.eC)(o) : o,
                            toBlock: "bigint" == typeof a ? (0, v.eC)(a) : a,
                            topics: c
                        }]
                    });
                return {
                    abi: r,
                    args: n,
                    eventName: i,
                    id: l,
                    request: u(l),
                    strict: s,
                    type: "event"
                }
            }
            async function tv(t, {
                address: e,
                args: r,
                event: n,
                events: i,
                fromBlock: o,
                strict: s,
                toBlock: a
            } = {}) {
                let u = i ? ? (n ? [n] : void 0),
                    c = tl(t, {
                        method: "eth_newFilter"
                    }),
                    l = [];
                u && (l = [u.flatMap(t => tb({
                    abi: [t],
                    eventName: t.name,
                    args: r
                }))], n && (l = l[0]));
                let h = await t.request({
                    method: "eth_newFilter",
                    params: [{
                        address: e,
                        fromBlock: "bigint" == typeof o ? (0, v.eC)(o) : o,
                        toBlock: "bigint" == typeof a ? (0, v.eC)(a) : a,
                        ...l.length ? {
                            topics: l
                        } : {}
                    }]
                });
                return {
                    abi: u,
                    args: r,
                    eventName: n ? n.name : void 0,
                    fromBlock: o,
                    id: h,
                    request: c(h),
                    strict: s,
                    toBlock: a,
                    type: "event"
                }
            }
            async function tE(t) {
                let e = tl(t, {
                        method: "eth_newPendingTransactionFilter"
                    }),
                    r = await t.request({
                        method: "eth_newPendingTransactionFilter"
                    });
                return {
                    id: r,
                    request: e(r),
                    type: "transaction"
                }
            }
            var tx = r(19775),
                tS = r(8741);
            async function tO(t, {
                abi: e,
                address: r,
                args: n,
                functionName: i,
                ...o
            }) {
                let s = (0, b.R)({
                    abi: e,
                    args: n,
                    functionName: i
                });
                try {
                    return await (0, R.s)(t, tS.Q, "estimateGas")({
                        data: s,
                        to: r,
                        ...o
                    })
                } catch (s) {
                    let t = o.account ? (0, tx.T)(o.account) : void 0;
                    throw N(s, {
                        abi: e,
                        address: r,
                        args: n,
                        docsPath: "/docs/contract/estimateContractGas",
                        functionName: i,
                        sender: t ? .address
                    })
                }
            }
            var tC = r(6458),
                t_ = r(96174);
            async function tA(t, {
                address: e,
                blockNumber: r,
                blockTag: n = "latest"
            }) {
                let i = r ? (0, v.eC)(r) : void 0;
                return BigInt(await t.request({
                    method: "eth_getBalance",
                    params: [e, i || n]
                }))
            }
            var tP = r(74587);
            let tk = new Map,
                tD = new Map;

            function tI(t) {
                let e = (t, e) => ({
                        clear: () => e.delete(t),
                        get: () => e.get(t),
                        set: r => e.set(t, r)
                    }),
                    r = e(t, tk),
                    n = e(t, tD);
                return {
                    clear: () => {
                        r.clear(), n.clear()
                    },
                    promise: r,
                    response: n
                }
            }
            async function tM(t, {
                cacheKey: e,
                cacheTime: r = 1 / 0
            }) {
                let n = tI(e),
                    i = n.response.get();
                if (i && r > 0 && new Date().getTime() - i.created.getTime() < r) return i.data;
                let o = n.promise.get();
                o || (o = t(), n.promise.set(o));
                try {
                    let t = await o;
                    return n.response.set({
                        created: new Date,
                        data: t
                    }), t
                } finally {
                    n.promise.clear()
                }
            }
            let tB = t => `blockNumber.${t}`;
            async function tR(t, {
                cacheTime: e = t.cacheTime,
                maxAge: r
            } = {}) {
                return BigInt(await tM(() => t.request({
                    method: "eth_blockNumber"
                }), {
                    cacheKey: tB(t.uid),
                    cacheTime: r ? ? e
                }))
            }
            var tT = r(72932);
            async function tj(t, {
                blockHash: e,
                blockNumber: r,
                blockTag: n = "latest"
            } = {}) {
                let i;
                let o = void 0 !== r ? (0, v.eC)(r) : void 0;
                return i = e ? await t.request({
                    method: "eth_getBlockTransactionCountByHash",
                    params: [e]
                }) : await t.request({
                    method: "eth_getBlockTransactionCountByNumber",
                    params: [o || n]
                }), (0, tT.ly)(i)
            }
            async function tU(t, {
                address: e,
                blockNumber: r,
                blockTag: n = "latest"
            }) {
                let i = void 0 !== r ? (0, v.eC)(r) : void 0,
                    o = await t.request({
                        method: "eth_getCode",
                        params: [e, i || n]
                    });
                if ("0x" !== o) return o
            }
            var tN = r(12363),
                tF = r(27964),
                tL = r(55668);
            async function tq(t, {
                address: e,
                blockHash: r,
                fromBlock: n,
                toBlock: i,
                event: o,
                events: s,
                args: a,
                strict: u
            } = {}) {
                let c;
                let l = u ? ? !1,
                    h = s ? ? (o ? [o] : void 0),
                    f = [];
                return h && (f = [h.flatMap(t => tb({
                    abi: [t],
                    eventName: t.name,
                    args: a
                }))], o && (f = f[0])), (c = r ? await t.request({
                    method: "eth_getLogs",
                    params: [{
                        address: e,
                        topics: f,
                        blockHash: r
                    }]
                }) : await t.request({
                    method: "eth_getLogs",
                    params: [{
                        address: e,
                        topics: f,
                        fromBlock: "bigint" == typeof n ? (0, v.eC)(n) : n,
                        toBlock: "bigint" == typeof i ? (0, v.eC)(i) : i
                    }]
                })).map(t => {
                    try {
                        let {
                            eventName: e,
                            args: r
                        } = h ? (0, tF.F)({
                            abi: h,
                            data: t.data,
                            topics: t.topics,
                            strict: l
                        }) : {
                            eventName: void 0,
                            args: void 0
                        };
                        return (0, tL.U)(t, {
                            args: r,
                            eventName: e
                        })
                    } catch (n) {
                        let e, r;
                        if (n instanceof T.SM || n instanceof T.Gy) {
                            if (l) return;
                            e = n.abiItem.name, r = n.abiItem.inputs ? .some(t => !("name" in t && t.name))
                        }
                        return (0, tL.U)(t, {
                            args: r ? [] : {},
                            eventName: e
                        })
                    }
                }).filter(Boolean)
            }
            async function t$(t, {
                abi: e,
                address: r,
                args: n,
                blockHash: i,
                eventName: o,
                fromBlock: s,
                toBlock: a,
                strict: u
            }) {
                let c = o ? (0, tm.mE)({
                        abi: e,
                        name: o
                    }) : void 0,
                    l = c ? void 0 : e.filter(t => "event" === t.type);
                return (0, R.s)(t, tq, "getLogs")({
                    address: r,
                    args: n,
                    blockHash: i,
                    event: c,
                    events: l,
                    fromBlock: s,
                    toBlock: a,
                    strict: u
                })
            }

            function tW(t) {
                return {
                    baseFeePerGas: t.baseFeePerGas.map(t => BigInt(t)),
                    gasUsedRatio: t.gasUsedRatio,
                    oldestBlock: BigInt(t.oldestBlock),
                    reward: t.reward ? .map(t => t.map(t => BigInt(t)))
                }
            }
            async function tG(t, {
                blockCount: e,
                blockNumber: r,
                blockTag: n = "latest",
                rewardPercentiles: i
            }) {
                let o = r ? (0, v.eC)(r) : void 0;
                return tW(await t.request({
                    method: "eth_feeHistory",
                    params: [(0, v.eC)(e), o || n, i]
                }))
            }
            async function tz(t, {
                filter: e
            }) {
                let r = "strict" in e && e.strict;
                return (await e.request({
                    method: "eth_getFilterChanges",
                    params: [e.id]
                })).map(t => {
                    if ("string" == typeof t) return t;
                    try {
                        let {
                            eventName: n,
                            args: i
                        } = "abi" in e && e.abi ? (0, tF.F)({
                            abi: e.abi,
                            data: t.data,
                            topics: t.topics,
                            strict: r
                        }) : {
                            eventName: void 0,
                            args: void 0
                        };
                        return (0, tL.U)(t, {
                            args: i,
                            eventName: n
                        })
                    } catch (i) {
                        let r, n;
                        if (i instanceof T.SM || i instanceof T.Gy) {
                            if ("strict" in e && e.strict) return;
                            r = i.abiItem.name, n = i.abiItem.inputs ? .some(t => !("name" in t && t.name))
                        }
                        return (0, tL.U)(t, {
                            args: n ? [] : {},
                            eventName: r
                        })
                    }
                }).filter(Boolean)
            }
            async function tH(t, {
                filter: e
            }) {
                let r = e.strict ? ? !1;
                return (await e.request({
                    method: "eth_getFilterLogs",
                    params: [e.id]
                })).map(t => {
                    try {
                        let {
                            eventName: n,
                            args: i
                        } = "abi" in e && e.abi ? (0, tF.F)({
                            abi: e.abi,
                            data: t.data,
                            topics: t.topics,
                            strict: r
                        }) : {
                            eventName: void 0,
                            args: void 0
                        };
                        return (0, tL.U)(t, {
                            args: i,
                            eventName: n
                        })
                    } catch (i) {
                        let r, n;
                        if (i instanceof T.SM || i instanceof T.Gy) {
                            if ("strict" in e && e.strict) return;
                            r = i.abiItem.name, n = i.abiItem.inputs ? .some(t => !("name" in t && t.name))
                        }
                        return (0, tL.U)(t, {
                            args: n ? [] : {},
                            eventName: r
                        })
                    }
                }).filter(Boolean)
            }
            var tK = r(25283);

            function tV(t) {
                return t.map(t => ({ ...t,
                    value: BigInt(t.value)
                }))
            }

            function tQ(t) {
                return { ...t,
                    balance: t.balance ? BigInt(t.balance) : void 0,
                    nonce: t.nonce ? (0, tT.ly)(t.nonce) : void 0,
                    storageProof: t.storageProof ? tV(t.storageProof) : void 0
                }
            }
            async function tZ(t, {
                address: e,
                blockNumber: r,
                blockTag: n,
                storageKeys: i
            }) {
                let o = n ? ? "latest",
                    s = void 0 !== r ? (0, v.eC)(r) : void 0;
                return tQ(await t.request({
                    method: "eth_getProof",
                    params: [e, i, s || o]
                }))
            }
            async function tY(t, {
                address: e,
                blockNumber: r,
                blockTag: n = "latest",
                slot: i
            }) {
                let o = void 0 !== r ? (0, v.eC)(r) : void 0;
                return await t.request({
                    method: "eth_getStorageAt",
                    params: [e, i, o || n]
                })
            }
            var tJ = r(63228),
                tX = r(27481);
            async function t0(t, {
                blockHash: e,
                blockNumber: r,
                blockTag: n,
                hash: i,
                index: o
            }) {
                let s = n || "latest",
                    a = void 0 !== r ? (0, v.eC)(r) : void 0,
                    u = null;
                if (i ? u = await t.request({
                        method: "eth_getTransactionByHash",
                        params: [i]
                    }) : e ? u = await t.request({
                        method: "eth_getTransactionByBlockHashAndIndex",
                        params: [e, (0, v.eC)(o)]
                    }) : (a || s) && (u = await t.request({
                        method: "eth_getTransactionByBlockNumberAndIndex",
                        params: [a || s, (0, v.eC)(o)]
                    })), !u) throw new tJ.Bh({
                    blockHash: e,
                    blockNumber: r,
                    blockTag: s,
                    hash: i,
                    index: o
                });
                return (t.chain ? .formatters ? .transaction ? .format || tX.Tr)(u)
            }
            async function t1(t, {
                hash: e,
                transactionReceipt: r
            }) {
                let [n, i] = await Promise.all([(0, R.s)(t, tR, "getBlockNumber")({}), e ? (0, R.s)(t, t0, "getBlockNumber")({
                    hash: e
                }) : void 0]), o = r ? .blockNumber || i ? .blockNumber;
                return o ? n - o + 1 n : 0 n
            }
            var t2 = r(16689),
                t6 = r(13550);
            async function t3(t, {
                hash: e
            }) {
                let r = await t.request({
                    method: "eth_getTransactionReceipt",
                    params: [e]
                });
                if (!r) throw new tJ.Yb({
                    hash: e
                });
                return (t.chain ? .formatters ? .transactionReceipt ? .format || t6.f)(r)
            }
            async function t5(t, e) {
                let {
                    allowFailure: r = !0,
                    batchSize: n,
                    blockNumber: i,
                    blockTag: o,
                    contracts: s,
                    multicallAddress: a
                } = e, u = n ? ? ("object" == typeof t.batch ? .multicall && t.batch.multicall.batchSize || 1024), c = a;
                if (!c) {
                    if (!t.chain) throw Error("client chain not configured. multicallAddress is required.");
                    c = (0, g.L)({
                        blockNumber: i,
                        chain: t.chain,
                        contract: "multicall3"
                    })
                }
                let l = [
                        []
                    ],
                    h = 0,
                    f = 0;
                for (let t = 0; t < s.length; t++) {
                    let {
                        abi: e,
                        address: n,
                        args: i,
                        functionName: o
                    } = s[t];
                    try {
                        let t = (0, b.R)({
                            abi: e,
                            args: i,
                            functionName: o
                        });
                        f += (t.length - 2) / 2, u > 0 && f > u && l[h].length > 0 && (h++, f = (t.length - 2) / 2, l[h] = []), l[h] = [...l[h], {
                            allowFailure: !0,
                            callData: t,
                            target: n
                        }]
                    } catch (s) {
                        let t = N(s, {
                            abi: e,
                            address: n,
                            args: i,
                            docsPath: "/docs/contract/multicall",
                            functionName: o
                        });
                        if (!r) throw t;
                        l[h] = [...l[h], {
                            allowFailure: !0,
                            callData: "0x",
                            target: n
                        }]
                    }
                }
                let d = await Promise.allSettled(l.map(e => (0, R.s)(t, L, "readContract")({
                        abi: y.F8,
                        address: c,
                        args: [e],
                        blockNumber: i,
                        blockTag: o,
                        functionName: "aggregate3"
                    }))),
                    p = [];
                for (let t = 0; t < d.length; t++) {
                    let e = d[t];
                    if ("rejected" === e.status) {
                        if (!r) throw e.reason;
                        for (let r = 0; r < l[t].length; r++) p.push({
                            status: "failure",
                            error: e.reason,
                            result: void 0
                        });
                        continue
                    }
                    let n = e.value;
                    for (let e = 0; e < n.length; e++) {
                        let {
                            returnData: i,
                            success: o
                        } = n[e], {
                            callData: a
                        } = l[t][e], {
                            abi: u,
                            address: c,
                            functionName: h,
                            args: f
                        } = s[p.length];
                        try {
                            if ("0x" === a) throw new T.wb;
                            if (!o) throw new S.VQ({
                                data: i
                            });
                            let t = (0, m.k)({
                                abi: u,
                                args: f,
                                data: i,
                                functionName: h
                            });
                            p.push(r ? {
                                result: t,
                                status: "success"
                            } : t)
                        } catch (e) {
                            let t = N(e, {
                                abi: u,
                                address: c,
                                args: f,
                                docsPath: "/docs/contract/multicall",
                                functionName: h
                            });
                            if (!r) throw t;
                            p.push({
                                error: t,
                                result: void 0,
                                status: "failure"
                            })
                        }
                    }
                }
                if (p.length !== s.length) throw new x.G("multicall results mismatch");
                return p
            }
            async function t8(t, {
                abi: e,
                address: r,
                args: n,
                dataSuffix: i,
                functionName: o,
                ...s
            }) {
                let a = s.account ? (0, tx.T)(s.account) : void 0,
                    u = (0, b.R)({
                        abi: e,
                        args: n,
                        functionName: o
                    });
                try {
                    let {
                        data: a
                    } = await (0, R.s)(t, F.R, "call")({
                        batch: !1,
                        data: `${u}${i?i.replace("0x",""):""}`,
                        to: r,
                        ...s
                    });
                    return {
                        result: (0, m.k)({
                            abi: e,
                            args: n,
                            functionName: o,
                            data: a || "0x"
                        }),
                        request: {
                            abi: e,
                            address: r,
                            args: n,
                            dataSuffix: i,
                            functionName: o,
                            ...s
                        }
                    }
                } catch (t) {
                    throw N(t, {
                        abi: e,
                        address: r,
                        args: n,
                        docsPath: "/docs/contract/simulateContract",
                        functionName: o,
                        sender: a ? .address
                    })
                }
            }
            async function t4(t, {
                filter: e
            }) {
                return e.request({
                    method: "eth_uninstallFilter",
                    params: [e.id]
                })
            }
            let t9 = "\x19Ethereum Signed Message:\n";

            function t7(t, e) {
                let r = "string" == typeof t ? (0, _.qX)(t) : t.raw instanceof Uint8Array ? t.raw : (0, _.O0)(t.raw),
                    n = (0, _.qX)(`${t9}${r.length}`);
                return (0, A.w)((0, C.zo)([n, r]), e)
            }
            let et = "0x60806040523480156200001157600080fd5b50604051620007003803806200070083398101604081905262000034916200056f565b6000620000438484846200004f565b9050806000526001601ff35b600080846001600160a01b0316803b806020016040519081016040528181526000908060200190933c90507f6492649264926492649264926492649264926492649264926492649264926492620000a68462000451565b036200021f57600060608085806020019051810190620000c79190620005ce565b8651929550909350915060000362000192576000836001600160a01b031683604051620000f5919062000643565b6000604051808303816000865af19150503d806000811462000134576040519150601f19603f3d011682016040523d82523d6000602084013e62000139565b606091505b5050905080620001905760405162461bcd60e51b815260206004820152601e60248201527f5369676e617475726556616c696461746f723a206465706c6f796d656e74000060448201526064015b60405180910390fd5b505b604051630b135d3f60e11b808252906001600160a01b038a1690631626ba7e90620001c4908b90869060040162000661565b602060405180830381865afa158015620001e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200020891906200069d565b6001600160e01b031916149450505050506200044a565b805115620002b157604051630b135d3f60e11b808252906001600160a01b03871690631626ba7e9062000259908890889060040162000661565b602060405180830381865afa15801562000277573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200029d91906200069d565b6001600160e01b031916149150506200044a565b8251604114620003195760405162461bcd60e51b815260206004820152603a6024820152600080516020620006e083398151915260448201527f3a20696e76616c6964207369676e6174757265206c656e677468000000000000606482015260840162000187565b620003236200046b565b506020830151604080850151855186939260009185919081106200034b576200034b620006c9565b016020015160f81c9050601b81148015906200036b57508060ff16601c14155b15620003cf5760405162461bcd60e51b815260206004820152603b6024820152600080516020620006e083398151915260448201527f3a20696e76616c6964207369676e617475726520762076616c75650000000000606482015260840162000187565b6040805160008152602081018083528a905260ff83169181019190915260608101849052608081018390526001600160a01b038a169060019060a0016020604051602081039080840390855afa1580156200042e573d6000803e3d6000fd5b505050602060405103516001600160a01b031614955050505050505b9392505050565b60006020825110156200046357600080fd5b508051015190565b60405180606001604052806003906020820280368337509192915050565b6001600160a01b03811681146200049f57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620004d5578181015183820152602001620004bb565b50506000910152565b600082601f830112620004f057600080fd5b81516001600160401b03808211156200050d576200050d620004a2565b604051601f8301601f19908116603f01168101908282118183101715620005385762000538620004a2565b816040528381528660208588010111156200055257600080fd5b62000565846020830160208901620004b8565b9695505050505050565b6000806000606084860312156200058557600080fd5b8351620005928162000489565b6020850151604086015191945092506001600160401b03811115620005b657600080fd5b620005c486828701620004de565b9150509250925092565b600080600060608486031215620005e457600080fd5b8351620005f18162000489565b60208501519093506001600160401b03808211156200060f57600080fd5b6200061d87838801620004de565b935060408601519150808211156200063457600080fd5b50620005c486828701620004de565b6000825162000657818460208701620004b8565b9190910192915050565b828152604060208201526000825180604084015262000688816060850160208701620004b8565b601f01601f1916919091016060019392505050565b600060208284031215620006b057600080fd5b81516001600160e01b0319811681146200044a57600080fd5b634e487b7160e01b600052603260045260246000fdfe5369676e617475726556616c696461746f72237265636f7665725369676e6572";

            function ee(t, e) {
                if (t.length !== e.length) return !1;
                for (let r = 0; r < t.length; r++)
                    if (t[r] !== e[r]) return !1;
                return !0
            }

            function er(t, e) {
                return ee((0, P.v)(t) ? (0, _.O0)(t) : t, (0, P.v)(e) ? (0, _.O0)(e) : e)
            }
            BigInt(0), BigInt(1), BigInt(2);
            var en = r(23010);
            async function ei(t, {
                address: e,
                hash: r,
                signature: n,
                ...i
            }) {
                let o = (0, P.v)(n) ? n : (0, v.NC)(n);
                try {
                    let {
                        data: n
                    } = await (0, R.s)(t, F.R, "call")({
                        data: (0, en.w)({
                            abi: y.$o,
                            args: [e, r, o],
                            bytecode: et
                        }),
                        ...i
                    });
                    return er(n ? ? "0x0", "0x1")
                } catch (t) {
                    if (t instanceof S.cg) return !1;
                    throw t
                }
            }
            async function eo(t, {
                address: e,
                message: r,
                signature: n,
                ...i
            }) {
                return ei(t, {
                    address: e,
                    hash: t7(r),
                    signature: n,
                    ...i
                })
            }
            var es = r(15209);

            function ea({
                domain: t,
                message: e,
                primaryType: r,
                types: n
            }) {
                let i = void 0 === t ? {} : t,
                    o = {
                        EIP712Domain: (0, es.cj)({
                            domain: i
                        }),
                        ...n
                    };
                (0, es.iC)({
                    domain: i,
                    message: e,
                    primaryType: r,
                    types: o
                });
                let s = ["0x1901"];
                return i && s.push(eu({
                    domain: i,
                    types: o
                })), "EIP712Domain" !== r && s.push(ec({
                    data: e,
                    primaryType: r,
                    types: o
                })), (0, A.w)((0, C.zo)(s))
            }

            function eu({
                domain: t,
                types: e
            }) {
                return ec({
                    data: t,
                    primaryType: "EIP712Domain",
                    types: e
                })
            }

            function ec({
                data: t,
                primaryType: e,
                types: r
            }) {
                let n = el({
                    data: t,
                    primaryType: e,
                    types: r
                });
                return (0, A.w)(n)
            }

            function el({
                data: t,
                primaryType: e,
                types: r
            }) {
                let n = [{
                        type: "bytes32"
                    }],
                    i = [eh({
                        primaryType: e,
                        types: r
                    })];
                for (let o of r[e]) {
                    let [e, s] = ep({
                        types: r,
                        name: o.name,
                        type: o.type,
                        value: t[o.name]
                    });
                    n.push(e), i.push(s)
                }
                return (0, tp.E)(n, i)
            }

            function eh({
                primaryType: t,
                types: e
            }) {
                let r = (0, v.NC)(ef({
                    primaryType: t,
                    types: e
                }));
                return (0, A.w)(r)
            }

            function ef({
                primaryType: t,
                types: e
            }) {
                let r = "",
                    n = ed({
                        primaryType: t,
                        types: e
                    });
                for (let i of (n.delete(t), [t, ...Array.from(n).sort()])) r += `${i}(${e[i].map(({name:t,type:e})=>`
                $ {
                    e
                }
                $ {
                    t
                }
                `).join(",")})`;
                return r
            }

            function ed({
                primaryType: t,
                types: e
            }, r = new Set) {
                let n = t.match(/^\w*/u),
                    i = n ? .[0];
                if (r.has(i) || void 0 === e[i]) return r;
                for (let t of (r.add(i), e[i])) ed({
                    primaryType: t.type,
                    types: e
                }, r);
                return r
            }

            function ep({
                types: t,
                name: e,
                type: r,
                value: n
            }) {
                if (void 0 !== t[r]) return [{
                    type: "bytes32"
                }, (0, A.w)(el({
                    data: n,
                    primaryType: r,
                    types: t
                }))];
                if ("bytes" === r) {
                    let t = n.length % 2 ? "0" : "";
                    return n = `0x${t+n.slice(2)}`, [{
                        type: "bytes32"
                    }, (0, A.w)(n)]
                }
                if ("string" === r) return [{
                    type: "bytes32"
                }, (0, A.w)((0, v.NC)(n))];
                if (r.lastIndexOf("]") === r.length - 1) {
                    let i = r.slice(0, r.lastIndexOf("[")),
                        o = n.map(r => ep({
                            name: e,
                            type: i,
                            types: t,
                            value: r
                        }));
                    return [{
                        type: "bytes32"
                    }, (0, A.w)((0, tp.E)(o.map(([t]) => t), o.map(([, t]) => t)))]
                }
                return [{
                    type: r
                }, n]
            }
            async function ey(t, {
                address: e,
                signature: r,
                message: n,
                primaryType: i,
                types: o,
                domain: s,
                ...a
            }) {
                return ei(t, {
                    address: e,
                    hash: ea({
                        message: n,
                        primaryType: i,
                        types: o,
                        domain: s
                    }),
                    signature: r,
                    ...a
                })
            }
            var em = r(12197);
            let eb = new Map,
                eg = new Map,
                ew = 0;

            function ev(t, e, r) {
                let n = ++ew,
                    i = () => eb.get(t) || [],
                    o = () => {
                        let e = i();
                        eb.set(t, e.filter(t => t.id !== n))
                    },
                    s = () => {
                        let e = eg.get(t);
                        1 === i().length && e && e(), o()
                    },
                    a = i();
                if (eb.set(t, [...a, {
                        id: n,
                        fns: e
                    }]), a && a.length > 0) return s;
                let u = {};
                for (let t in e) u[t] = (...e) => {
                    let r = i();
                    if (0 !== r.length)
                        for (let n of r) n.fns[t] ? .(...e)
                };
                let c = r(u);
                return "function" == typeof c && eg.set(t, c), s
            }
            var eE = r(49287),
                ex = r(31853),
                eS = r(33457);

            function eO(t, {
                emitOnBegin: e,
                initialWaitTime: r,
                interval: n
            }) {
                let i = !0,
                    o = () => i = !1;
                return (async () => {
                    let s;
                    e && (s = await t({
                        unpoll: o
                    }));
                    let a = await r ? .(s) ? ? n;
                    await (0, eS.D)(a);
                    let u = async () => {
                        i && (await t({
                            unpoll: o
                        }), await (0, eS.D)(n), u())
                    };
                    u()
                })(), o
            }

            function eC(t, {
                emitOnBegin: e = !1,
                emitMissed: r = !1,
                onBlockNumber: n,
                onError: i,
                poll: o,
                pollingInterval: s = t.pollingInterval
            }) {
                let a;
                let u = void 0 !== o ? o : "webSocket" !== t.transport.type,
                    c = () => ev((0, ex.P)(["watchBlockNumber", t.uid, e, r, s]), {
                        onBlockNumber: n,
                        onError: i
                    }, n => eO(async () => {
                        try {
                            let e = await (0, R.s)(t, tR, "getBlockNumber")({
                                cacheTime: 0
                            });
                            if (a) {
                                if (e === a) return;
                                if (e - a > 1 && r)
                                    for (let t = a + 1 n; t < e; t++) n.onBlockNumber(t, a), a = t
                            }(!a || e > a) && (n.onBlockNumber(e, a), a = e)
                        } catch (t) {
                            n.onError ? .(t)
                        }
                    }, {
                        emitOnBegin: e,
                        interval: s
                    })),
                    l = () => {
                        let e = !0,
                            r = () => e = !1;
                        return (async () => {
                            try {
                                let {
                                    unsubscribe: o
                                } = await t.transport.subscribe({
                                    params: ["newHeads"],
                                    onData(t) {
                                        if (!e) return;
                                        let r = (0, tT.y_)(t.result ? .number);
                                        n(r, a), a = r
                                    },
                                    onError(t) {
                                        i ? .(t)
                                    }
                                });
                                r = o, e || r()
                            } catch (t) {
                                i ? .(t)
                            }
                        })(), r
                    };
                return u ? c() : l()
            }
            async function e_(t, {
                confirmations: e = 1,
                hash: r,
                onReplaced: n,
                pollingInterval: i = t.pollingInterval,
                timeout: o
            }) {
                let s, a, u;
                let c = (0, ex.P)(["waitForTransactionReceipt", t.uid, r]),
                    l = !1;
                return new Promise((h, f) => {
                    o && setTimeout(() => f(new tJ.mc({
                        hash: r
                    })), o);
                    let d = ev(c, {
                        onReplaced: n,
                        resolve: h,
                        reject: f
                    }, n => {
                        let o = (0, R.s)(t, eC, "watchBlockNumber")({
                            emitMissed: !0,
                            emitOnBegin: !0,
                            poll: !0,
                            pollingInterval: i,
                            async onBlockNumber(i) {
                                if (l) return;
                                let c = i,
                                    h = t => {
                                        o(), t(), d()
                                    };
                                try {
                                    if (u) {
                                        if (e > 1 && (!u.blockNumber || c - u.blockNumber + 1 n < e)) return;
                                        h(() => n.resolve(u));
                                        return
                                    }
                                    if (s || (l = !0, await (0, eE.J)(async () => {
                                            (s = await (0, R.s)(t, t0, "getTransaction")({
                                                hash: r
                                            })).blockNumber && (c = s.blockNumber)
                                        }, {
                                            delay: ({
                                                count: t
                                            }) => 200 * ~~(1 << t),
                                            retryCount: 6
                                        }), l = !1), u = await (0, R.s)(t, t3, "getTransactionReceipt")({
                                            hash: r
                                        }), e > 1 && (!u.blockNumber || c - u.blockNumber + 1 n < e)) return;
                                    h(() => n.resolve(u))
                                } catch (r) {
                                    if (s && (r instanceof tJ.Bh || r instanceof tJ.Yb)) try {
                                        a = s, l = !0;
                                        let r = await (0, eE.J)(() => (0, R.s)(t, tP.Q, "getBlock")({
                                            blockNumber: c,
                                            includeTransactions: !0
                                        }), {
                                            delay: ({
                                                count: t
                                            }) => 200 * ~~(1 << t),
                                            retryCount: 6,
                                            shouldRetry: ({
                                                error: t
                                            }) => t instanceof em.f
                                        });
                                        l = !1;
                                        let i = r.transactions.find(({
                                            from: t,
                                            nonce: e
                                        }) => t === a.from && e === a.nonce);
                                        if (!i || (u = await (0, R.s)(t, t3, "getTransactionReceipt")({
                                                hash: i.hash
                                            }), e > 1 && (!u.blockNumber || c - u.blockNumber + 1 n < e))) return;
                                        let o = "replaced";
                                        i.to === a.to && i.value === a.value ? o = "repriced" : i.from === i.to && 0 n === i.value && (o = "cancelled"), h(() => {
                                            n.onReplaced ? .({
                                                reason: o,
                                                replacedTransaction: a,
                                                transaction: i,
                                                transactionReceipt: u
                                            }), n.resolve(u)
                                        })
                                    } catch (t) {
                                        h(() => n.reject(t))
                                    } else h(() => n.reject(r))
                                }
                            }
                        })
                    })
                })
            }
            var eA = r(59069);

            function eP(t, {
                blockTag: e = "latest",
                emitMissed: r = !1,
                emitOnBegin: n = !1,
                onBlock: i,
                onError: o,
                includeTransactions: s,
                poll: a,
                pollingInterval: u = t.pollingInterval
            }) {
                let c;
                let l = void 0 !== a ? a : "webSocket" !== t.transport.type,
                    h = s ? ? !1,
                    f = () => ev((0, ex.P)(["watchBlocks", t.uid, r, n, h, u]), {
                        onBlock: i,
                        onError: o
                    }, i => eO(async () => {
                        try {
                            let n = await (0, R.s)(t, tP.Q, "getBlock")({
                                blockTag: e,
                                includeTransactions: h
                            });
                            if (n.number && c ? .number) {
                                if (n.number === c.number) return;
                                if (n.number - c.number > 1 && r)
                                    for (let e = c ? .number + 1 n; e < n.number; e++) {
                                        let r = await (0, R.s)(t, tP.Q, "getBlock")({
                                            blockNumber: e,
                                            includeTransactions: h
                                        });
                                        i.onBlock(r, c), c = r
                                    }
                            }(!c ? .number || "pending" === e && !n ? .number || n.number && n.number > c.number) && (i.onBlock(n, c), c = n)
                        } catch (t) {
                            i.onError ? .(t)
                        }
                    }, {
                        emitOnBegin: n,
                        interval: u
                    })),
                    d = () => {
                        let e = !0,
                            r = () => e = !1;
                        return (async () => {
                            try {
                                let {
                                    unsubscribe: n
                                } = await t.transport.subscribe({
                                    params: ["newHeads"],
                                    onData(r) {
                                        if (!e) return;
                                        let n = (t.chain ? .formatters ? .block ? .format || eA.Z)(r.result);
                                        i(n, c), c = n
                                    },
                                    onError(t) {
                                        o ? .(t)
                                    }
                                });
                                r = n, e || r()
                            } catch (t) {
                                o ? .(t)
                            }
                        })(), r
                    };
                return l ? f() : d()
            }

            function ek(t, {
                abi: e,
                address: r,
                args: n,
                batch: i = !0,
                eventName: o,
                onError: s,
                onLogs: a,
                poll: u,
                pollingInterval: c = t.pollingInterval,
                strict: l
            }) {
                let h = void 0 !== u ? u : "webSocket" !== t.transport.type,
                    f = () => {
                        let u = (0, ex.P)(["watchContractEvent", r, n, i, t.uid, o, c]),
                            h = l ? ? !1;
                        return ev(u, {
                            onLogs: a,
                            onError: s
                        }, s => {
                            let a, u;
                            let l = !1,
                                f = eO(async () => {
                                    if (!l) {
                                        try {
                                            u = await (0, R.s)(t, tw, "createContractEventFilter")({
                                                abi: e,
                                                address: r,
                                                args: n,
                                                eventName: o,
                                                strict: h
                                            })
                                        } catch {}
                                        l = !0;
                                        return
                                    }
                                    try {
                                        let c;
                                        if (u) c = await (0, R.s)(t, tz, "getFilterChanges")({
                                            filter: u
                                        });
                                        else {
                                            let i = await (0, R.s)(t, tR, "getBlockNumber")({});
                                            c = a && a !== i ? await (0, R.s)(t, t$, "getContractEvents")({
                                                abi: e,
                                                address: r,
                                                args: n,
                                                eventName: o,
                                                fromBlock: a + 1 n,
                                                toBlock: i,
                                                strict: h
                                            }) : [], a = i
                                        }
                                        if (0 === c.length) return;
                                        if (i) s.onLogs(c);
                                        else
                                            for (let t of c) s.onLogs([t])
                                    } catch (t) {
                                        u && t instanceof j.yR && (l = !1), s.onError ? .(t)
                                    }
                                }, {
                                    emitOnBegin: !0,
                                    interval: c
                                });
                            return async () => {
                                u && await (0, R.s)(t, t4, "uninstallFilter")({
                                    filter: u
                                }), f()
                            }
                        })
                    },
                    d = () => {
                        let i = !0,
                            u = () => i = !1;
                        return (async () => {
                            try {
                                let c = o ? tb({
                                        abi: e,
                                        eventName: o,
                                        args: n
                                    }) : [],
                                    {
                                        unsubscribe: h
                                    } = await t.transport.subscribe({
                                        params: ["logs", {
                                            address: r,
                                            topics: c
                                        }],
                                        onData(t) {
                                            if (!i) return;
                                            let r = t.result;
                                            try {
                                                let {
                                                    eventName: t,
                                                    args: n
                                                } = (0, tF.F)({
                                                    abi: e,
                                                    data: r.data,
                                                    topics: r.topics,
                                                    strict: l
                                                }), i = (0, tL.U)(r, {
                                                    args: n,
                                                    eventName: t
                                                });
                                                a([i])
                                            } catch (i) {
                                                let t, e;
                                                if (i instanceof T.SM || i instanceof T.Gy) {
                                                    if (l) return;
                                                    t = i.abiItem.name, e = i.abiItem.inputs ? .some(t => !("name" in t && t.name))
                                                }
                                                let n = (0, tL.U)(r, {
                                                    args: e ? [] : {},
                                                    eventName: t
                                                });
                                                a([n])
                                            }
                                        },
                                        onError(t) {
                                            s ? .(t)
                                        }
                                    });
                                u = h, i || u()
                            } catch (t) {
                                s ? .(t)
                            }
                        })(), u
                    };
                return h ? f() : d()
            }

            function eD(t, {
                address: e,
                args: r,
                batch: n = !0,
                event: i,
                events: o,
                onError: s,
                onLogs: a,
                poll: u,
                pollingInterval: c = t.pollingInterval,
                strict: l
            }) {
                let h = void 0 !== u ? u : "webSocket" !== t.transport.type,
                    f = l ? ? !1,
                    d = () => ev((0, ex.P)(["watchEvent", e, r, n, t.uid, i, c]), {
                        onLogs: a,
                        onError: s
                    }, s => {
                        let a, u;
                        let l = !1,
                            h = eO(async () => {
                                if (!l) {
                                    try {
                                        u = await (0, R.s)(t, tv, "createEventFilter")({
                                            address: e,
                                            args: r,
                                            event: i,
                                            events: o,
                                            strict: f
                                        })
                                    } catch {}
                                    l = !0;
                                    return
                                }
                                try {
                                    let c;
                                    if (u) c = await (0, R.s)(t, tz, "getFilterChanges")({
                                        filter: u
                                    });
                                    else {
                                        let n = await (0, R.s)(t, tR, "getBlockNumber")({});
                                        c = a && a !== n ? await (0, R.s)(t, tq, "getLogs")({
                                            address: e,
                                            args: r,
                                            event: i,
                                            events: o,
                                            fromBlock: a + 1 n,
                                            toBlock: n
                                        }) : [], a = n
                                    }
                                    if (0 === c.length) return;
                                    if (n) s.onLogs(c);
                                    else
                                        for (let t of c) s.onLogs([t])
                                } catch (t) {
                                    u && t instanceof j.yR && (l = !1), s.onError ? .(t)
                                }
                            }, {
                                emitOnBegin: !0,
                                interval: c
                            });
                        return async () => {
                            u && await (0, R.s)(t, t4, "uninstallFilter")({
                                filter: u
                            }), h()
                        }
                    }),
                    p = () => {
                        let n = !0,
                            u = () => n = !1;
                        return (async () => {
                            try {
                                let c = o ? ? (i ? [i] : void 0),
                                    h = [];
                                c && (h = [c.flatMap(t => tb({
                                    abi: [t],
                                    eventName: t.name,
                                    args: r
                                }))], i && (h = h[0]));
                                let {
                                    unsubscribe: d
                                } = await t.transport.subscribe({
                                    params: ["logs", {
                                        address: e,
                                        topics: h
                                    }],
                                    onData(t) {
                                        if (!n) return;
                                        let e = t.result;
                                        try {
                                            let {
                                                eventName: t,
                                                args: r
                                            } = (0, tF.F)({
                                                abi: c,
                                                data: e.data,
                                                topics: e.topics,
                                                strict: f
                                            }), n = (0, tL.U)(e, {
                                                args: r,
                                                eventName: t
                                            });
                                            a([n])
                                        } catch (i) {
                                            let t, r;
                                            if (i instanceof T.SM || i instanceof T.Gy) {
                                                if (l) return;
                                                t = i.abiItem.name, r = i.abiItem.inputs ? .some(t => !("name" in t && t.name))
                                            }
                                            let n = (0, tL.U)(e, {
                                                args: r ? [] : {},
                                                eventName: t
                                            });
                                            a([n])
                                        }
                                    },
                                    onError(t) {
                                        s ? .(t)
                                    }
                                });
                                u = d, n || u()
                            } catch (t) {
                                s ? .(t)
                            }
                        })(), u
                    };
                return h ? d() : p()
            }

            function eI(t, {
                batch: e = !0,
                onError: r,
                onTransactions: n,
                poll: i,
                pollingInterval: o = t.pollingInterval
            }) {
                let s = void 0 !== i ? i : "webSocket" !== t.transport.type,
                    a = () => ev((0, ex.P)(["watchPendingTransactions", t.uid, e, o]), {
                        onTransactions: n,
                        onError: r
                    }, r => {
                        let n;
                        let i = eO(async () => {
                            try {
                                if (!n) try {
                                    n = await (0, R.s)(t, tE, "createPendingTransactionFilter")({});
                                    return
                                } catch (t) {
                                    throw i(), t
                                }
                                let o = await (0, R.s)(t, tz, "getFilterChanges")({
                                    filter: n
                                });
                                if (0 === o.length) return;
                                if (e) r.onTransactions(o);
                                else
                                    for (let t of o) r.onTransactions([t])
                            } catch (t) {
                                r.onError ? .(t)
                            }
                        }, {
                            emitOnBegin: !0,
                            interval: o
                        });
                        return async () => {
                            n && await (0, R.s)(t, t4, "uninstallFilter")({
                                filter: n
                            }), i()
                        }
                    }),
                    u = () => {
                        let e = !0,
                            i = () => e = !1;
                        return (async () => {
                            try {
                                let {
                                    unsubscribe: o
                                } = await t.transport.subscribe({
                                    params: ["newPendingTransactions"],
                                    onData(t) {
                                        if (!e) return;
                                        let r = t.result;
                                        n([r])
                                    },
                                    onError(t) {
                                        r ? .(t)
                                    }
                                });
                                i = o, e || i()
                            } catch (t) {
                                r ? .(t)
                            }
                        })(), i
                    };
                return s ? a() : u()
            }
            var eM = r(63198),
                eB = r(9769);

            function eR(t) {
                return {
                    call: e => (0, F.R)(t, e),
                    createBlockFilter: () => th(t),
                    createContractEventFilter: e => tw(t, e),
                    createEventFilter: e => tv(t, e),
                    createPendingTransactionFilter: () => tE(t),
                    estimateContractGas: e => tO(t, e),
                    estimateGas: e => (0, tS.Q)(t, e),
                    getBalance: e => tA(t, e),
                    getBlock: e => (0, tP.Q)(t, e),
                    getBlockNumber: e => tR(t, e),
                    getBlockTransactionCount: e => tj(t, e),
                    getBytecode: e => tU(t, e),
                    getChainId: () => (0, tN.L)(t),
                    getContractEvents: e => t$(t, e),
                    getEnsAddress: e => q(t, e),
                    getEnsAvatar: e => ta(t, e),
                    getEnsName: e => tu(t, e),
                    getEnsResolver: e => tc(t, e),
                    getEnsText: e => ts(t, e),
                    getFeeHistory: e => tG(t, e),
                    estimateFeesPerGas: e => (0, tC.X)(t, e),
                    getFilterChanges: e => tz(t, e),
                    getFilterLogs: e => tH(t, e),
                    getGasPrice: () => (0, tK.o)(t),
                    getLogs: e => tq(t, e),
                    getProof: e => tZ(t, e),
                    estimateMaxPriorityFeePerGas: e => (0, t_._)(t, e),
                    getStorageAt: e => tY(t, e),
                    getTransaction: e => t0(t, e),
                    getTransactionConfirmations: e => t1(t, e),
                    getTransactionCount: e => (0, t2.K)(t, e),
                    getTransactionReceipt: e => t3(t, e),
                    multicall: e => t5(t, e),
                    prepareTransactionRequest: e => (0, eM.Z)(t, e),
                    readContract: e => L(t, e),
                    sendRawTransaction: e => (0, eB.p)(t, e),
                    simulateContract: e => t8(t, e),
                    verifyMessage: e => eo(t, e),
                    verifyTypedData: e => ey(t, e),
                    uninstallFilter: e => t4(t, e),
                    waitForTransactionReceipt: e => e_(t, e),
                    watchBlocks: e => eP(t, e),
                    watchBlockNumber: e => eC(t, e),
                    watchContractEvent: e => ek(t, e),
                    watchEvent: e => eD(t, e),
                    watchPendingTransactions: e => eI(t, e)
                }
            }

            function eT(t) {
                let {
                    key: e = "public",
                    name: r = "Public Client"
                } = t;
                return (0, p.e)({ ...t,
                    key: e,
                    name: r,
                    type: "publicClient"
                }).extend(eR)
            }
            var ej = r(11337),
                eU = r(74138);

            function eN(t, e = {}) {
                let {
                    key: r = "fallback",
                    name: n = "Fallback",
                    rank: i = !1,
                    retryCount: o,
                    retryDelay: s
                } = e;
                return ({
                    chain: e,
                    pollingInterval: a = 4e3,
                    timeout: u
                }) => {
                    let c = t,
                        l = () => {},
                        h = (0, eU.q)({
                            key: r,
                            name: n,
                            async request({
                                method: t,
                                params: r
                            }) {
                                let n = async (i = 0) => {
                                    let o = c[i]({
                                        chain: e,
                                        retryCount: 0,
                                        timeout: u
                                    });
                                    try {
                                        let e = await o.request({
                                            method: t,
                                            params: r
                                        });
                                        return l({
                                            method: t,
                                            params: r,
                                            response: e,
                                            transport: o,
                                            status: "success"
                                        }), e
                                    } catch (e) {
                                        if (l({
                                                error: e,
                                                method: t,
                                                params: r,
                                                transport: o,
                                                status: "error"
                                            }), (0, ej.y)(e) || i === c.length - 1) throw e;
                                        return n(i + 1)
                                    }
                                };
                                return n()
                            },
                            retryCount: o,
                            retryDelay: s,
                            type: "fallback"
                        }, {
                            onResponse: t => l = t,
                            transports: c.map(t => t({
                                chain: e,
                                retryCount: 0
                            }))
                        });
                    if (i) {
                        let t = "object" == typeof i ? i : {};
                        eF({
                            chain: e,
                            interval: t.interval ? ? a,
                            onTransports: t => c = t,
                            sampleCount: t.sampleCount,
                            timeout: t.timeout,
                            transports: c,
                            weights: t.weights
                        })
                    }
                    return h
                }
            }

            function eF({
                chain: t,
                interval: e = 4e3,
                onTransports: r,
                sampleCount: n = 10,
                timeout: i = 1e3,
                transports: o,
                weights: s = {}
            }) {
                let {
                    stability: a = .7,
                    latency: u = .3
                } = s, c = [], l = async () => {
                    let s = await Promise.all(o.map(async e => {
                        let r, n;
                        let o = e({
                                chain: t,
                                retryCount: 0,
                                timeout: i
                            }),
                            s = Date.now();
                        try {
                            await o.request({
                                method: "net_listening"
                            }), n = 1
                        } catch {
                            n = 0
                        } finally {
                            r = Date.now()
                        }
                        return {
                            latency: r - s,
                            success: n
                        }
                    }));
                    c.push(s), c.length > n && c.shift();
                    let h = Math.max(...c.map(t => Math.max(...t.map(({
                        latency: t
                    }) => t))));
                    r(o.map((t, e) => {
                        let r = c.map(t => t[e].latency),
                            n = 1 - r.reduce((t, e) => t + e, 0) / r.length / h,
                            i = c.map(t => t[e].success),
                            o = i.reduce((t, e) => t + e, 0) / i.length;
                        return 0 === o ? [0, e] : [u * n + a * o, e]
                    }).sort((t, e) => e[0] - t[0]).map(([, t]) => o[t])), await (0, eS.D)(e), l()
                };
                l()
            }
            var eL = r(17057);
            class eq extends x.G {
                constructor() {
                    super("No URL was provided to the Transport. Please provide a valid RPC URL to the Transport.", {
                        docsPath: "/docs/clients/intro"
                    })
                }
            }
            var e$ = r(43226);
            let eW = function() {
                if ("undefined" != typeof WebSocket) return WebSocket;
                if (void 0 !== global.WebSocket) return global.WebSocket;
                if (void 0 !== window.WebSocket) return window.WebSocket;
                if (void 0 !== self.WebSocket) return self.WebSocket;
                throw Error("`WebSocket` is not supported in this environment")
            }();

            function eG(t, {
                errorInstance: e = Error("timed out"),
                timeout: r,
                signal: n
            }) {
                return new Promise((i, o) => {
                    (async () => {
                        let s;
                        try {
                            let a = new AbortController;
                            r > 0 && (s = setTimeout(() => {
                                n ? a.abort() : o(e)
                            }, r)), i(await t({
                                signal: a ? .signal
                            }))
                        } catch (t) {
                            "AbortError" === t.name && o(e), o(t)
                        } finally {
                            clearTimeout(s)
                        }
                    })()
                })
            }
            let ez = 0;
            async function eH(t, {
                body: e,
                fetchOptions: r = {},
                timeout: n = 1e4
            }) {
                let {
                    headers: i,
                    method: o,
                    signal: s
                } = r;
                try {
                    let a;
                    let u = await eG(async ({
                        signal: a
                    }) => await fetch(t, { ...r,
                        body: Array.isArray(e) ? (0, ex.P)(e.map(t => ({
                            jsonrpc: "2.0",
                            id: t.id ? ? ez++,
                            ...t
                        }))) : (0, ex.P)({
                            jsonrpc: "2.0",
                            id: e.id ? ? ez++,
                            ...e
                        }),
                        headers: { ...i,
                            "Content-Type": "application/json"
                        },
                        method: o || "POST",
                        signal: s || (n > 0 ? a : void 0)
                    }), {
                        errorInstance: new eL.W5({
                            body: e,
                            url: t
                        }),
                        timeout: n,
                        signal: !0
                    });
                    if (a = u.headers.get("Content-Type") ? .startsWith("application/json") ? await u.json() : await u.text(), !u.ok) throw new eL.Gg({
                        body: e,
                        details: (0, ex.P)(a.error) || u.statusText,
                        headers: u.headers,
                        status: u.status,
                        url: t
                    });
                    return a
                } catch (r) {
                    if (r instanceof eL.Gg || r instanceof eL.W5) throw r;
                    throw new eL.Gg({
                        body: e,
                        details: r.message,
                        url: t
                    })
                }
            }
            let eK = new Map;
            async function eV(t) {
                let e = eK.get(t);
                if (e) return e;
                let {
                    schedule: r
                } = (0, e$.S)({
                    id: t,
                    fn: async () => {
                        let r = new eW(t),
                            n = new Map,
                            i = new Map,
                            o = ({
                                data: t
                            }) => {
                                let e = JSON.parse(t),
                                    r = "eth_subscription" === e.method,
                                    o = r ? e.params.subscription : e.id,
                                    s = r ? i : n,
                                    a = s.get(o);
                                a && a({
                                    data: t
                                }), r || s.delete(o)
                            },
                            s = () => {
                                eK.delete(t), r.removeEventListener("close", s), r.removeEventListener("message", o)
                            };
                        return r.addEventListener("close", s), r.addEventListener("message", o), r.readyState === eW.CONNECTING && await new Promise((t, e) => {
                            r && (r.onopen = t, r.onerror = e)
                        }), e = Object.assign(r, {
                            requests: n,
                            subscriptions: i
                        }), eK.set(t, e), [e]
                    }
                }), [n, [i]] = await r();
                return i
            }
            let eQ = {
                http: eH,
                webSocket: function(t, {
                    body: e,
                    onResponse: r
                }) {
                    if (t.readyState === t.CLOSED || t.readyState === t.CLOSING) throw new eL.c9({
                        body: e,
                        url: t.url,
                        details: "Socket is closed."
                    });
                    let n = ez++,
                        i = ({
                            data: o
                        }) => {
                            let s = JSON.parse(o);
                            ("number" != typeof s.id || n === s.id) && (r ? .(s), "eth_subscribe" === e.method && "string" == typeof s.result && t.subscriptions.set(s.result, i), "eth_unsubscribe" === e.method && t.subscriptions.delete(e.params ? .[0]))
                        };
                    return t.requests.set(n, i), t.send(JSON.stringify({
                        jsonrpc: "2.0",
                        ...e,
                        id: n
                    })), t
                },
                webSocketAsync: async function(t, {
                    body: e,
                    timeout: r = 1e4
                }) {
                    return eG(() => new Promise(r => eQ.webSocket(t, {
                        body: e,
                        onResponse: r
                    })), {
                        errorInstance: new eL.W5({
                            body: e,
                            url: t.url
                        }),
                        timeout: r
                    })
                }
            };

            function eZ(t, e = {}) {
                let {
                    batch: r,
                    fetchOptions: n,
                    key: i = "http",
                    name: o = "HTTP JSON-RPC",
                    retryDelay: s
                } = e;
                return ({
                    chain: a,
                    retryCount: u,
                    timeout: c
                }) => {
                    let {
                        batchSize: l = 1e3,
                        wait: h = 0
                    } = "object" == typeof r ? r : {}, f = e.retryCount ? ? u, d = c ? ? e.timeout ? ? 1e4, p = t || a ? .rpcUrls.default.http[0];
                    if (!p) throw new eq;
                    return (0, eU.q)({
                        key: i,
                        name: o,
                        async request({
                            method: e,
                            params: i
                        }) {
                            let o = {
                                    method: e,
                                    params: i
                                },
                                {
                                    schedule: s
                                } = (0, e$.S)({
                                    id: `${t}`,
                                    wait: h,
                                    shouldSplitBatch: t => t.length > l,
                                    fn: t => eQ.http(p, {
                                        body: t,
                                        fetchOptions: n,
                                        timeout: d
                                    }),
                                    sort: (t, e) => t.id - e.id
                                }),
                                a = async t => r ? s(t) : [await eQ.http(p, {
                                    body: t,
                                    fetchOptions: n,
                                    timeout: d
                                })],
                                [{
                                    error: u,
                                    result: c
                                }] = await a(o);
                            if (u) throw new eL.bs({
                                body: o,
                                error: u,
                                url: p
                            });
                            return c
                        },
                        retryCount: f,
                        retryDelay: s,
                        timeout: d,
                        type: "http"
                    }, {
                        fetchOptions: n,
                        url: t
                    })
                }
            }

            function eY(t, e = {}) {
                let {
                    key: r = "webSocket",
                    name: n = "WebSocket JSON-RPC",
                    retryDelay: i
                } = e;
                return ({
                    chain: o,
                    retryCount: s,
                    timeout: a
                }) => {
                    let u = e.retryCount ? ? s,
                        c = a ? ? e.timeout ? ? 1e4,
                        l = t || o ? .rpcUrls.default.webSocket ? .[0];
                    if (!l) throw new eq;
                    return (0, eU.q)({
                        key: r,
                        name: n,
                        async request({
                            method: t,
                            params: e
                        }) {
                            let r = {
                                    method: t,
                                    params: e
                                },
                                n = await eV(l),
                                {
                                    error: i,
                                    result: o
                                } = await eQ.webSocketAsync(n, {
                                    body: r,
                                    timeout: c
                                });
                            if (i) throw new eL.bs({
                                body: r,
                                error: i,
                                url: l
                            });
                            return o
                        },
                        retryCount: u,
                        retryDelay: i,
                        timeout: c,
                        type: "webSocket"
                    }, {
                        getSocket: () => eV(l),
                        async subscribe({
                            params: t,
                            onData: e,
                            onError: r
                        }) {
                            let n = await eV(l),
                                {
                                    result: i
                                } = await new Promise((i, o) => eQ.webSocket(n, {
                                    body: {
                                        method: "eth_subscribe",
                                        params: t
                                    },
                                    onResponse(t) {
                                        if (t.error) {
                                            o(t.error), r ? .(t.error);
                                            return
                                        }
                                        if ("number" == typeof t.id) {
                                            i(t);
                                            return
                                        }
                                        "eth_subscription" === t.method && e(t.params)
                                    }
                                }));
                            return {
                                subscriptionId: i,
                                unsubscribe: async () => new Promise(t => eQ.webSocket(n, {
                                    body: {
                                        method: "eth_unsubscribe",
                                        params: [i]
                                    },
                                    onResponse: t
                                }))
                            }
                        }
                    })
                }
            }
            var eJ = r(77233),
                eX = r(98173);
            let e0 = t => (e, r, n) => {
                let i = n.subscribe;
                return n.subscribe = (t, e, r) => {
                    let o = t;
                    if (e) {
                        let i = (null == r ? void 0 : r.equalityFn) || Object.is,
                            s = t(n.getState());
                        o = r => {
                            let n = t(r);
                            if (!i(s, n)) {
                                let t = s;
                                e(s = n, t)
                            }
                        }, (null == r ? void 0 : r.fireImmediately) && e(s, s)
                    }
                    return i(o)
                }, t(e, r, n)
            };

            function e1(t, e) {
                let r;
                try {
                    r = t()
                } catch (t) {
                    return
                }
                return {
                    getItem: t => {
                        var n;
                        let i = t => null === t ? null : JSON.parse(t, null == e ? void 0 : e.reviver),
                            o = null != (n = r.getItem(t)) ? n : null;
                        return o instanceof Promise ? o.then(i) : i(o)
                    },
                    setItem: (t, n) => r.setItem(t, JSON.stringify(n, null == e ? void 0 : e.replacer)),
                    removeItem: t => r.removeItem(t)
                }
            }
            let e2 = t => e => {
                    try {
                        let r = t(e);
                        if (r instanceof Promise) return r;
                        return {
                            then: t => e2(t)(r),
                            catch (t) {
                                return this
                            }
                        }
                    } catch (t) {
                        return {
                            then(t) {
                                return this
                            },
                            catch: e => e2(e)(t)
                        }
                    }
                },
                e6 = (t, e) => (r, n, i) => {
                    let o, s, a = {
                            getStorage: () => localStorage,
                            serialize: JSON.stringify,
                            deserialize: JSON.parse,
                            partialize: t => t,
                            version: 0,
                            merge: (t, e) => ({ ...e,
                                ...t
                            }),
                            ...e
                        },
                        u = !1,
                        c = new Set,
                        l = new Set;
                    try {
                        o = a.getStorage()
                    } catch (t) {}
                    if (!o) return t((...t) => {
                        console.warn(`[zustand persist middleware] Unable to update item '${a.name}', the given storage is currently unavailable.`), r(...t)
                    }, n, i);
                    let h = e2(a.serialize),
                        f = () => {
                            let t;
                            let e = h({
                                state: a.partialize({ ...n()
                                }),
                                version: a.version
                            }).then(t => o.setItem(a.name, t)).catch(e => {
                                t = e
                            });
                            if (t) throw t;
                            return e
                        },
                        d = i.setState;
                    i.setState = (t, e) => {
                        d(t, e), f()
                    };
                    let p = t((...t) => {
                            r(...t), f()
                        }, n, i),
                        y = () => {
                            var t;
                            if (!o) return;
                            u = !1, c.forEach(t => t(n()));
                            let e = (null == (t = a.onRehydrateStorage) ? void 0 : t.call(a, n())) || void 0;
                            return e2(o.getItem.bind(o))(a.name).then(t => {
                                if (t) return a.deserialize(t)
                            }).then(t => {
                                if (t) {
                                    if ("number" != typeof t.version || t.version === a.version) return t.state;
                                    if (a.migrate) return a.migrate(t.state, t.version);
                                    console.error("State loaded from storage couldn't be migrated since no migrate function was provided")
                                }
                            }).then(t => {
                                var e;
                                return r(s = a.merge(t, null != (e = n()) ? e : p), !0), f()
                            }).then(() => {
                                null == e || e(s, void 0), u = !0, l.forEach(t => t(s))
                            }).catch(t => {
                                null == e || e(void 0, t)
                            })
                        };
                    return i.persist = {
                        setOptions: t => {
                            a = { ...a,
                                ...t
                            }, t.getStorage && (o = t.getStorage())
                        },
                        clearStorage: () => {
                            null == o || o.removeItem(a.name)
                        },
                        getOptions: () => a,
                        rehydrate: () => y(),
                        hasHydrated: () => u,
                        onHydrate: t => (c.add(t), () => {
                            c.delete(t)
                        }),
                        onFinishHydration: t => (l.add(t), () => {
                            l.delete(t)
                        })
                    }, y(), s || p
                },
                e3 = (t, e) => (r, n, i) => {
                    let o, s = {
                            storage: e1(() => localStorage),
                            partialize: t => t,
                            version: 0,
                            merge: (t, e) => ({ ...e,
                                ...t
                            }),
                            ...e
                        },
                        a = !1,
                        u = new Set,
                        c = new Set,
                        l = s.storage;
                    if (!l) return t((...t) => {
                        console.warn(`[zustand persist middleware] Unable to update item '${s.name}', the given storage is currently unavailable.`), r(...t)
                    }, n, i);
                    let h = () => {
                            let t = s.partialize({ ...n()
                            });
                            return l.setItem(s.name, {
                                state: t,
                                version: s.version
                            })
                        },
                        f = i.setState;
                    i.setState = (t, e) => {
                        f(t, e), h()
                    };
                    let d = t((...t) => {
                        r(...t), h()
                    }, n, i);
                    i.getInitialState = () => d;
                    let p = () => {
                        var t, e;
                        if (!l) return;
                        a = !1, u.forEach(t => {
                            var e;
                            return t(null != (e = n()) ? e : d)
                        });
                        let i = (null == (e = s.onRehydrateStorage) ? void 0 : e.call(s, null != (t = n()) ? t : d)) || void 0;
                        return e2(l.getItem.bind(l))(s.name).then(t => {
                            if (t) {
                                if ("number" != typeof t.version || t.version === s.version) return t.state;
                                if (s.migrate) return s.migrate(t.state, t.version);
                                console.error("State loaded from storage couldn't be migrated since no migrate function was provided")
                            }
                        }).then(t => {
                            var e;
                            return r(o = s.merge(t, null != (e = n()) ? e : d), !0), h()
                        }).then(() => {
                            null == i || i(o, void 0), o = n(), a = !0, c.forEach(t => t(o))
                        }).catch(t => {
                            null == i || i(void 0, t)
                        })
                    };
                    return i.persist = {
                        setOptions: t => {
                            s = { ...s,
                                ...t
                            }, t.storage && (l = t.storage)
                        },
                        clearStorage: () => {
                            null == l || l.removeItem(s.name)
                        },
                        getOptions: () => s,
                        rehydrate: () => p(),
                        hasHydrated: () => a,
                        onHydrate: t => (u.add(t), () => {
                            u.delete(t)
                        }),
                        onFinishHydration: t => (c.add(t), () => {
                            c.delete(t)
                        })
                    }, s.skipHydration || p(), o || d
                },
                e5 = (t, e) => "getStorage" in e || "serialize" in e || "deserialize" in e ? (console.warn("[DEPRECATED] `getStorage`, `serialize` and `deserialize` options are deprecated. Use `storage` option instead."), e6(t, e)) : e3(t, e),
                e8 = t => {
                    let e;
                    let r = new Set,
                        n = (t, n) => {
                            let i = "function" == typeof t ? t(e) : t;
                            if (!Object.is(i, e)) {
                                let t = e;
                                e = (null != n ? n : "object" != typeof i || null === i) ? i : Object.assign({}, e, i), r.forEach(r => r(e, t))
                            }
                        },
                        i = () => e,
                        o = {
                            setState: n,
                            getState: i,
                            getInitialState: () => s,
                            subscribe: t => (r.add(t), () => r.delete(t)),
                            destroy: () => {
                                console.warn("[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected."), r.clear()
                            }
                        },
                        s = e = t(n, i, o);
                    return o
                },
                e4 = t => t ? e8(t) : e8;
            var e9 = r(39502);

            function e7(t, e) {
                if (Object.is(t, e)) return !0;
                if ("object" != typeof t || null === t || "object" != typeof e || null === e) return !1;
                if (t instanceof Map && e instanceof Map) {
                    if (t.size !== e.size) return !1;
                    for (let [r, n] of t)
                        if (!Object.is(n, e.get(r))) return !1;
                    return !0
                }
                if (t instanceof Set && e instanceof Set) {
                    if (t.size !== e.size) return !1;
                    for (let r of t)
                        if (!e.has(r)) return !1;
                    return !0
                }
                let r = Object.keys(t);
                if (r.length !== Object.keys(e).length) return !1;
                for (let n of r)
                    if (!Object.prototype.hasOwnProperty.call(e, n) || !Object.is(t[n], e[n])) return !1;
                return !0
            }
            var rt = r(31669);

            function re(t, e, {
                batch: r = {
                    multicall: {
                        wait: 32
                    }
                },
                pollingInterval: n = 4e3,
                rank: i,
                retryCount: o,
                retryDelay: s,
                stallTimeout: a
            } = {}) {
                if (!t.length) throw Error("must have at least one chain");
                let u = [],
                    c = {},
                    l = {};
                for (let r of t) {
                    let t = !1;
                    for (let n of e) {
                        let e = n(r);
                        e && (t = !0, u.some(({
                            id: t
                        }) => t === r.id) || (u = [...u, e.chain]), c[r.id] = [...c[r.id] || [], ...e.rpcUrls.http], e.rpcUrls.webSocket && (l[r.id] = [...l[r.id] || [], ...e.rpcUrls.webSocket]))
                    }
                    if (!t) throw Error(`Could not find valid provider configuration for chain "${r.name}".

You may need to add \`jsonRpcProvider\` to \`configureChains\` with the chain's RPC URLs.
Read more: https://wagmi.sh/core/providers/jsonRpc`)
                }
                return {
                    chains: u,
                    publicClient: ({
                        chainId: e
                    }) => {
                        let l = u.find(t => t.id === e) ? ? t[0],
                            h = c[l.id];
                        if (!h || !h[0]) throw Error(`No providers configured for chain "${l.id}"`);
                        return Object.assign(eT({
                            batch: r,
                            chain: l,
                            transport: eN(h.map(t => eZ(t, {
                                timeout: a
                            })), {
                                rank: i,
                                retryCount: o,
                                retryDelay: s
                            }),
                            pollingInterval: n
                        }), {
                            chains: u
                        })
                    },
                    webSocketPublicClient: ({
                        chainId: e
                    }) => {
                        let c = u.find(t => t.id === e) ? ? t[0],
                            h = l[c.id];
                        if (h && h[0]) return Object.assign(eT({
                            batch: r,
                            chain: c,
                            transport: eN(h.map(t => eY(t, {
                                timeout: a
                            })), {
                                rank: i,
                                retryCount: o,
                                retryDelay: s
                            }),
                            pollingInterval: n
                        }), {
                            chains: u
                        })
                    }
                }
            }
            var rr = class extends Error {
                    constructor({
                        activeChain: t,
                        targetChain: e
                    }) {
                        super(`Chain mismatch: Expected "${e}", received "${t}".`), this.name = "ChainMismatchError"
                    }
                },
                rn = class extends Error {
                    constructor({
                        chainId: t,
                        connectorId: e
                    }) {
                        super(`Chain "${t}" not configured${e?` for connector "${e}"`:""}.`), this.name = "ChainNotConfigured"
                    }
                },
                ri = class extends Error {
                    constructor() {
                        super(...arguments), this.name = "ConnectorAlreadyConnectedError", this.message = "Connector already connected"
                    }
                },
                ro = class extends Error {
                    constructor() {
                        super(...arguments), this.name = "ConfigChainsNotFound", this.message = "No chains were found on the wagmi config. Some functions that require a chain may not work."
                    }
                },
                rs = class extends Error {
                    constructor({
                        connector: t
                    }) {
                        super(`"${t.name}" does not support programmatic chain switching.`), this.name = "SwitchChainNotSupportedError"
                    }
                };

            function ra(t, e) {
                if (t === e) return !0;
                if (t && e && "object" == typeof t && "object" == typeof e) {
                    let r, n;
                    if (t.constructor !== e.constructor) return !1;
                    if (Array.isArray(t) && Array.isArray(e)) {
                        if ((r = t.length) != e.length) return !1;
                        for (n = r; 0 != n--;)
                            if (!ra(t[n], e[n])) return !1;
                        return !0
                    }
                    if (t.valueOf !== Object.prototype.valueOf) return t.valueOf() === e.valueOf();
                    if (t.toString !== Object.prototype.toString) return t.toString() === e.toString();
                    let i = Object.keys(t);
                    if ((r = i.length) !== Object.keys(e).length) return !1;
                    for (n = r; 0 != n--;)
                        if (!Object.prototype.hasOwnProperty.call(e, i[n])) return !1;
                    for (n = r; 0 != n--;) {
                        let r = i[n];
                        if (r && !ra(t[r], e[r])) return !1
                    }
                    return !0
                }
                return t != t && e != e
            }
            var ru = (t, {
                find: e,
                replace: r
            }) => t && e(t) ? r(t) : "object" != typeof t ? t : Array.isArray(t) ? t.map(t => ru(t, {
                find: e,
                replace: r
            })) : t instanceof Object ? Object.entries(t).reduce((t, [n, i]) => ({ ...t,
                [n]: ru(i, {
                    find: e,
                    replace: r
                })
            }), {}) : t;

            function rc(t) {
                return ru(JSON.parse(t), {
                    find: t => "string" == typeof t && t.startsWith("#bigint."),
                    replace: t => BigInt(t.replace("#bigint.", ""))
                })
            }

            function rl(t) {
                return {
                    accessList: t.accessList,
                    account: t.account,
                    blockNumber: t.blockNumber,
                    blockTag: t.blockTag,
                    data: t.data,
                    gas: t.gas,
                    gasPrice: t.gasPrice,
                    maxFeePerGas: t.maxFeePerGas,
                    maxPriorityFeePerGas: t.maxPriorityFeePerGas,
                    nonce: t.nonce,
                    to: t.to,
                    value: t.value
                }
            }

            function rh(t) {
                return {
                    accessList: t.accessList,
                    account: t.account,
                    data: t.data,
                    gas: t.gas,
                    gasPrice: t.gasPrice,
                    maxFeePerGas: t.maxFeePerGas,
                    maxPriorityFeePerGas: t.maxPriorityFeePerGas,
                    nonce: t.nonce,
                    to: t.to,
                    value: t.value
                }
            }

            function rf(t) {
                return "number" == typeof t ? t : "wei" === t ? 0 : Math.abs(eX.Bd[t])
            }

            function rd(t, e) {
                return t.slice(0, e).join(".") || "."
            }

            function rp(t, e) {
                let {
                    length: r
                } = t;
                for (let n = 0; n < r; ++n)
                    if (t[n] === e) return n + 1;
                return 0
            }

            function ry(t, e) {
                let r = "function" == typeof t,
                    n = "function" == typeof e,
                    i = [],
                    o = [];
                return function(s, a) {
                    if ("object" == typeof a) {
                        if (i.length) {
                            let t = rp(i, this);
                            0 === t ? i[i.length] = this : (i.splice(t), o.splice(t)), o[o.length] = s;
                            let r = rp(i, a);
                            if (0 !== r) return n ? e.call(this, s, a, rd(o, r)) : `[ref=${rd(o,r)}]`
                        } else i[0] = a, o[0] = s
                    }
                    return r ? t.call(this, s, a) : a
                }
            }

            function rm(t, e, r, n) {
                return JSON.stringify(t, ry((t, r) => {
                    let n = "bigint" == typeof r ? `#bigint.${r.toString()}` : r;
                    return e ? .(t, n) || n
                }, n), r ? ? void 0)
            }
            var rb = {
                getItem: t => "",
                setItem: (t, e) => null,
                removeItem: t => null
            };

            function rg({
                deserialize: t = rc,
                key: e = "wagmi",
                serialize: r = rm,
                storage: n
            }) {
                return { ...n,
                    getItem: (r, i = null) => {
                        let o = n.getItem(`${e}.${r}`);
                        try {
                            return o ? t(o) : i
                        } catch (t) {
                            return console.warn(t), i
                        }
                    },
                    setItem: (t, i) => {
                        if (null === i) n.removeItem(`${e}.${t}`);
                        else try {
                            n.setItem(`${e}.${t}`, r(i))
                        } catch (t) {
                            console.error(t)
                        }
                    },
                    removeItem: t => n.removeItem(`${e}.${t}`)
                }
            }
            var rw = "store",
                rv = class {
                    constructor({
                        autoConnect: t = !1,
                        connectors: e = [new u._],
                        publicClient: r,
                        storage: a = rg({
                            storage: "undefined" != typeof window ? window.localStorage : rb
                        }),
                        logger: c = {
                            warn: console.warn
                        },
                        webSocketPublicClient: l
                    }) {
                        let p;
                        h(this, o), this.publicClients = new Map, this.webSocketPublicClients = new Map, h(this, n, void 0), h(this, i, void 0), this.args = {
                            autoConnect: t,
                            connectors: e,
                            logger: c,
                            publicClient: r,
                            storage: a,
                            webSocketPublicClient: l
                        };
                        let y = "disconnected";
                        if (t) try {
                            let t = a.getItem(rw),
                                e = t ? .state ? .data;
                            y = e ? .account ? "reconnecting" : "connecting", p = e ? .chain ? .id
                        } catch (t) {}
                        let m = "function" == typeof e ? e() : e;
                        m.forEach(t => t.setStorage(a)), this.store = e4(e0(e5(() => ({
                            connectors: m,
                            publicClient: this.getPublicClient({
                                chainId: p
                            }),
                            status: y,
                            webSocketPublicClient: this.getWebSocketPublicClient({
                                chainId: p
                            })
                        }), {
                            name: rw,
                            storage: a,
                            partialize: e => ({ ...t && {
                                    data: {
                                        account: e ? .data ? .account,
                                        chain: e ? .data ? .chain
                                    }
                                },
                                chains: e ? .chains
                            }),
                            version: 2
                        }))), this.storage = a, f(this, i, a ? .getItem("wallet")), d(this, o, s).call(this), t && "undefined" != typeof window && setTimeout(async () => await this.autoConnect(), 0)
                    }
                    get chains() {
                        return this.store.getState().chains
                    }
                    get connectors() {
                        return this.store.getState().connectors
                    }
                    get connector() {
                        return this.store.getState().connector
                    }
                    get data() {
                        return this.store.getState().data
                    }
                    get error() {
                        return this.store.getState().error
                    }
                    get lastUsedChainId() {
                        return this.data ? .chain ? .id
                    }
                    get publicClient() {
                        return this.store.getState().publicClient
                    }
                    get status() {
                        return this.store.getState().status
                    }
                    get subscribe() {
                        return this.store.subscribe
                    }
                    get webSocketPublicClient() {
                        return this.store.getState().webSocketPublicClient
                    }
                    setState(t) {
                        let e = "function" == typeof t ? t(this.store.getState()) : t;
                        this.store.setState(e, !0)
                    }
                    clearState() {
                        this.setState(t => ({ ...t,
                            chains: void 0,
                            connector: void 0,
                            data: void 0,
                            error: void 0,
                            status: "disconnected"
                        }))
                    }
                    async destroy() {
                        this.connector && await this.connector.disconnect ? .(), f(this, n, !1), this.clearState(), this.store.destroy()
                    }
                    async autoConnect() {
                        if (l(this, n)) return;
                        f(this, n, !0), this.setState(t => ({ ...t,
                            status: t.data ? .account ? "reconnecting" : "connecting"
                        }));
                        let t = l(this, i) ? [...this.connectors].sort(t => t.id === l(this, i) ? -1 : 1) : this.connectors,
                            e = !1;
                        for (let r of t) {
                            if (!r.ready || !r.isAuthorized || !await r.isAuthorized()) continue;
                            let t = await r.connect();
                            this.setState(e => ({ ...e,
                                connector: r,
                                chains: r ? .chains,
                                data: t,
                                status: "connected"
                            })), e = !0;
                            break
                        }
                        return e || this.setState(t => ({ ...t,
                            data: void 0,
                            status: "disconnected"
                        })), f(this, n, !1), this.data
                    }
                    setConnectors(t) {
                        this.args = { ...this.args,
                            connectors: t
                        };
                        let e = "function" == typeof t ? t() : t;
                        e.forEach(t => t.setStorage(this.args.storage)), this.setState(t => ({ ...t,
                            connectors: e
                        }))
                    }
                    getPublicClient({
                        chainId: t
                    } = {}) {
                        let e = this.publicClients.get(-1);
                        if (e && e ? .chain.id === t || (e = this.publicClients.get(t ? ? -1))) return e;
                        let {
                            publicClient: r
                        } = this.args;
                        return e = "function" == typeof r ? r({
                            chainId: t
                        }) : r, this.publicClients.set(t ? ? -1, e), e
                    }
                    setPublicClient(t) {
                        let e = this.data ? .chain ? .id;
                        this.args = { ...this.args,
                            publicClient: t
                        }, this.publicClients.clear(), this.setState(t => ({ ...t,
                            publicClient: this.getPublicClient({
                                chainId: e
                            })
                        }))
                    }
                    getWebSocketPublicClient({
                        chainId: t
                    } = {}) {
                        let e = this.webSocketPublicClients.get(-1);
                        if (e && e ? .chain.id === t || (e = this.webSocketPublicClients.get(t ? ? -1))) return e;
                        let {
                            webSocketPublicClient: r
                        } = this.args;
                        return (e = "function" == typeof r ? r({
                            chainId: t
                        }) : r) && this.webSocketPublicClients.set(t ? ? -1, e), e
                    }
                    setWebSocketPublicClient(t) {
                        let e = this.data ? .chain ? .id;
                        this.args = { ...this.args,
                            webSocketPublicClient: t
                        }, this.webSocketPublicClients.clear(), this.setState(t => ({ ...t,
                            webSocketPublicClient: this.getWebSocketPublicClient({
                                chainId: e
                            })
                        }))
                    }
                    setLastUsedConnector(t = null) {
                        this.storage ? .setItem("wallet", t)
                    }
                };

            function rE(t) {
                let e = new rv(t);
                return a = e, e
            }

            function rx() {
                if (!a) throw Error("No wagmi config found. Ensure you have set up a config: https://wagmi.sh/react/config");
                return a
            }
            async function rS({
                chainId: t,
                connector: e
            }) {
                let r = rx(),
                    n = r.connector;
                if (n && e.id === n.id) throw new ri;
                try {
                    r.setState(t => ({ ...t,
                        status: "connecting"
                    }));
                    let n = await e.connect({
                        chainId: t
                    });
                    return r.setLastUsedConnector(e.id), r.setState(t => ({ ...t,
                        connector: e,
                        chains: e ? .chains,
                        data: n,
                        status: "connected"
                    })), r.storage.setItem("connected", !0), { ...n,
                        connector: e
                    }
                } catch (t) {
                    throw r.setState(t => ({ ...t,
                        status: t.connector ? "connected" : "disconnected"
                    })), t
                }
            }
            async function rO() {
                let t = rx();
                t.connector && await t.connector.disconnect(), t.clearState(), t.storage.removeItem("connected")
            }
            n = new WeakMap, i = new WeakMap, o = new WeakSet, s = function() {
                let t = t => {
                        this.setState(e => ({ ...e,
                            data: { ...e.data,
                                ...t
                            }
                        }))
                    },
                    e = () => {
                        this.clearState()
                    },
                    r = t => {
                        this.setState(e => ({ ...e,
                            error: t
                        }))
                    };
                this.store.subscribe(({
                    connector: t
                }) => t, (n, i) => {
                    i ? .off ? .("change", t), i ? .off ? .("disconnect", e), i ? .off ? .("error", r), n && (n.on ? .("change", t), n.on ? .("disconnect", e), n.on ? .("error", r))
                });
                let {
                    publicClient: n,
                    webSocketPublicClient: i
                } = this.args, o = "function" == typeof i;
                ("function" == typeof n || o) && this.store.subscribe(({
                    data: t
                }) => t ? .chain ? .id, t => {
                    this.setState(e => ({ ...e,
                        publicClient: this.getPublicClient({
                            chainId: t
                        }),
                        webSocketPublicClient: this.getWebSocketPublicClient({
                            chainId: t
                        })
                    }))
                })
            };
            var rC = [{
                    type: "event",
                    name: "Approval",
                    inputs: [{
                        indexed: !0,
                        name: "owner",
                        type: "address"
                    }, {
                        indexed: !0,
                        name: "spender",
                        type: "address"
                    }, {
                        indexed: !1,
                        name: "value",
                        type: "uint256"
                    }]
                }, {
                    type: "event",
                    name: "Transfer",
                    inputs: [{
                        indexed: !0,
                        name: "from",
                        type: "address"
                    }, {
                        indexed: !0,
                        name: "to",
                        type: "address"
                    }, {
                        indexed: !1,
                        name: "value",
                        type: "uint256"
                    }]
                }, {
                    type: "function",
                    name: "allowance",
                    stateMutability: "view",
                    inputs: [{
                        name: "owner",
                        type: "address"
                    }, {
                        name: "spender",
                        type: "address"
                    }],
                    outputs: [{
                        name: "",
                        type: "uint256"
                    }]
                }, {
                    type: "function",
                    name: "approve",
                    stateMutability: "nonpayable",
                    inputs: [{
                        name: "spender",
                        type: "address"
                    }, {
                        name: "amount",
                        type: "uint256"
                    }],
                    outputs: [{
                        name: "",
                        type: "bool"
                    }]
                }, {
                    type: "function",
                    name: "balanceOf",
                    stateMutability: "view",
                    inputs: [{
                        name: "account",
                        type: "address"
                    }],
                    outputs: [{
                        name: "",
                        type: "uint256"
                    }]
                }, {
                    type: "function",
                    name: "decimals",
                    stateMutability: "view",
                    inputs: [],
                    outputs: [{
                        name: "",
                        type: "uint8"
                    }]
                }, {
                    type: "function",
                    name: "name",
                    stateMutability: "view",
                    inputs: [],
                    outputs: [{
                        name: "",
                        type: "string"
                    }]
                }, {
                    type: "function",
                    name: "symbol",
                    stateMutability: "view",
                    inputs: [],
                    outputs: [{
                        name: "",
                        type: "string"
                    }]
                }, {
                    type: "function",
                    name: "totalSupply",
                    stateMutability: "view",
                    inputs: [],
                    outputs: [{
                        name: "",
                        type: "uint256"
                    }]
                }, {
                    type: "function",
                    name: "transfer",
                    stateMutability: "nonpayable",
                    inputs: [{
                        name: "recipient",
                        type: "address"
                    }, {
                        name: "amount",
                        type: "uint256"
                    }],
                    outputs: [{
                        name: "",
                        type: "bool"
                    }]
                }, {
                    type: "function",
                    name: "transferFrom",
                    stateMutability: "nonpayable",
                    inputs: [{
                        name: "sender",
                        type: "address"
                    }, {
                        name: "recipient",
                        type: "address"
                    }, {
                        name: "amount",
                        type: "uint256"
                    }],
                    outputs: [{
                        name: "",
                        type: "bool"
                    }]
                }],
                r_ = [{
                    type: "event",
                    name: "Approval",
                    inputs: [{
                        indexed: !0,
                        name: "owner",
                        type: "address"
                    }, {
                        indexed: !0,
                        name: "spender",
                        type: "address"
                    }, {
                        indexed: !1,
                        name: "value",
                        type: "uint256"
                    }]
                }, {
                    type: "event",
                    name: "Transfer",
                    inputs: [{
                        indexed: !0,
                        name: "from",
                        type: "address"
                    }, {
                        indexed: !0,
                        name: "to",
                        type: "address"
                    }, {
                        indexed: !1,
                        name: "value",
                        type: "uint256"
                    }]
                }, {
                    type: "function",
                    name: "allowance",
                    stateMutability: "view",
                    inputs: [{
                        name: "owner",
                        type: "address"
                    }, {
                        name: "spender",
                        type: "address"
                    }],
                    outputs: [{
                        name: "",
                        type: "uint256"
                    }]
                }, {
                    type: "function",
                    name: "approve",
                    stateMutability: "nonpayable",
                    inputs: [{
                        name: "spender",
                        type: "address"
                    }, {
                        name: "amount",
                        type: "uint256"
                    }],
                    outputs: [{
                        name: "",
                        type: "bool"
                    }]
                }, {
                    type: "function",
                    name: "balanceOf",
                    stateMutability: "view",
                    inputs: [{
                        name: "account",
                        type: "address"
                    }],
                    outputs: [{
                        name: "",
                        type: "uint256"
                    }]
                }, {
                    type: "function",
                    name: "decimals",
                    stateMutability: "view",
                    inputs: [],
                    outputs: [{
                        name: "",
                        type: "uint8"
                    }]
                }, {
                    type: "function",
                    name: "name",
                    stateMutability: "view",
                    inputs: [],
                    outputs: [{
                        name: "",
                        type: "bytes32"
                    }]
                }, {
                    type: "function",
                    name: "symbol",
                    stateMutability: "view",
                    inputs: [],
                    outputs: [{
                        name: "",
                        type: "bytes32"
                    }]
                }, {
                    type: "function",
                    name: "totalSupply",
                    stateMutability: "view",
                    inputs: [],
                    outputs: [{
                        name: "",
                        type: "uint256"
                    }]
                }, {
                    type: "function",
                    name: "transfer",
                    stateMutability: "nonpayable",
                    inputs: [{
                        name: "recipient",
                        type: "address"
                    }, {
                        name: "amount",
                        type: "uint256"
                    }],
                    outputs: [{
                        name: "",
                        type: "bool"
                    }]
                }, {
                    type: "function",
                    name: "transferFrom",
                    stateMutability: "nonpayable",
                    inputs: [{
                        name: "sender",
                        type: "address"
                    }, {
                        name: "recipient",
                        type: "address"
                    }, {
                        name: "amount",
                        type: "uint256"
                    }],
                    outputs: [{
                        name: "",
                        type: "bool"
                    }]
                }];

            function rA({
                chainId: t
            } = {}) {
                let e = rx();
                return t && e.getPublicClient({
                    chainId: t
                }) || e.publicClient
            }
            async function rP({
                chainId: t
            } = {}) {
                let e = rx();
                return await e.connector ? .getWalletClient ? .({
                    chainId: t
                }) || null
            }

            function rk({
                chainId: t
            } = {}) {
                let e = rx();
                return t && e.getWebSocketPublicClient({
                    chainId: t
                }) || e.webSocketPublicClient
            }

            function rD(t, e) {
                let r = rx(),
                    n = async () => e(rA(t));
                return r.subscribe(({
                    publicClient: t
                }) => t, n)
            }

            function rI({
                chainId: t
            }, e) {
                let r = rx(),
                    n = async ({
                        chainId: r
                    }) => {
                        if (t && r && t !== r) return;
                        let n = await rP({
                            chainId: t
                        });
                        return rx().connector ? e(n) : e(null)
                    };
                return r.subscribe(({
                    data: t,
                    connector: e
                }) => ({
                    account: t ? .account,
                    chainId: t ? .chain ? .id,
                    connector: e
                }), n, {
                    equalityFn: e7
                })
            }

            function rM(t, e) {
                let r = rx(),
                    n = async () => e(rk(t));
                return r.subscribe(({
                    webSocketPublicClient: t
                }) => t, n)
            }
            async function rB({
                abi: t,
                address: e,
                args: r,
                chainId: n,
                dataSuffix: i,
                functionName: o,
                walletClient: s,
                ...a
            }) {
                let u = rA({
                        chainId: n
                    }),
                    c = s ? ? await rP({
                        chainId: n
                    });
                if (!c) throw new eJ.N;
                n && rQ({
                    chainId: n
                });
                let {
                    account: l,
                    accessList: h,
                    blockNumber: f,
                    blockTag: d,
                    gas: p,
                    gasPrice: y,
                    maxFeePerGas: m,
                    maxPriorityFeePerGas: b,
                    nonce: g,
                    value: w
                } = rl(a), {
                    result: v,
                    request: E
                } = await u.simulateContract({
                    abi: t,
                    address: e,
                    functionName: o,
                    args: r,
                    account: l || c.account,
                    accessList: h,
                    blockNumber: f,
                    blockTag: d,
                    dataSuffix: i,
                    gas: p,
                    gasPrice: y,
                    maxFeePerGas: m,
                    maxPriorityFeePerGas: b,
                    nonce: g,
                    value: w
                }), x = t.filter(t => "name" in t && t.name === o);
                return {
                    mode: "prepared",
                    request: { ...E,
                        abi: x,
                        chainId: n
                    },
                    result: v
                }
            }
            async function rR({
                chainId: t,
                contracts: e,
                blockNumber: r,
                blockTag: n,
                ...i
            }) {
                let o = rA({
                    chainId: t
                });
                if (!o.chains) throw new ro;
                if (t && o.chain.id !== t) throw new rn({
                    chainId: t
                });
                return o.multicall({
                    allowFailure: i.allowFailure ? ? !0,
                    blockNumber: r,
                    blockTag: n,
                    contracts: e
                })
            }
            async function rT({
                address: t,
                account: e,
                chainId: r,
                abi: n,
                args: i,
                functionName: o,
                blockNumber: s,
                blockTag: a
            }) {
                return rA({
                    chainId: r
                }).readContract({
                    abi: n,
                    address: t,
                    account: e,
                    functionName: o,
                    args: i,
                    blockNumber: s,
                    blockTag: a
                })
            }
            async function rj({
                contracts: t,
                blockNumber: e,
                blockTag: r,
                ...n
            }) {
                let {
                    allowFailure: i = !0
                } = n;
                try {
                    let n = rA(),
                        o = t.reduce((t, e, r) => {
                            let i = e.chainId ? ? n.chain.id;
                            return { ...t,
                                [i]: [...t[i] || [], {
                                    contract: e,
                                    index: r
                                }]
                            }
                        }, {}),
                        s = () => Object.entries(o).map(([t, n]) => rR({
                            allowFailure: i,
                            chainId: parseInt(t),
                            contracts: n.map(({
                                contract: t
                            }) => t),
                            blockNumber: e,
                            blockTag: r
                        })),
                        a = (await Promise.all(s())).flat(),
                        u = Object.values(o).flatMap(t => t.map(({
                            index: t
                        }) => t));
                    return a.reduce((t, e, r) => (t && (t[u[r]] = e), t), [])
                } catch (o) {
                    if (o instanceof S.uq) throw o;
                    let n = () => t.map(t => rT({ ...t,
                        blockNumber: e,
                        blockTag: r
                    }));
                    if (i) return (await Promise.allSettled(n())).map(t => "fulfilled" === t.status ? {
                        result: t.value,
                        status: "success"
                    } : {
                        error: t.reason,
                        result: void 0,
                        status: "failure"
                    });
                    return await Promise.all(n())
                }
            }
            async function rU(t) {
                let e;
                let r = await rP({
                    chainId: t.chainId
                });
                if (!r) throw new eJ.N;
                if (t.chainId && rQ({
                        chainId: t.chainId
                    }), "prepared" === t.mode) e = t.request;
                else {
                    let {
                        chainId: r,
                        mode: n,
                        ...i
                    } = t;
                    e = (await rB(i)).request
                }
                return {
                    hash: await r.writeContract({ ...e,
                        chain: t.chainId ? {
                            id: t.chainId
                        } : null
                    })
                }
            }
            async function rN({
                address: t,
                chainId: e,
                formatUnits: r,
                token: n
            }) {
                let i = rx(),
                    o = rA({
                        chainId: e
                    });
                if (n) {
                    let i = async ({
                        abi: i
                    }) => {
                        let o = {
                                abi: i,
                                address: n,
                                chainId: e
                            },
                            [s, a, u] = await rj({
                                allowFailure: !1,
                                contracts: [{ ...o,
                                    functionName: "balanceOf",
                                    args: [t]
                                }, { ...o,
                                    functionName: "decimals"
                                }, { ...o,
                                    functionName: "symbol"
                                }]
                            });
                        return {
                            decimals: a,
                            formatted: (0, e9.b)(s ? ? "0", rf(r ? ? a)),
                            symbol: u,
                            value: s
                        }
                    };
                    try {
                        return await i({
                            abi: rC
                        })
                    } catch (t) {
                        if (t instanceof S.uq) {
                            let {
                                symbol: t,
                                ...e
                            } = await i({
                                abi: r_
                            });
                            return {
                                symbol: (0, tT.rR)((0, w.f)(t, {
                                    dir: "right"
                                })),
                                ...e
                            }
                        }
                        throw t
                    }
                }
                let s = [...i.publicClient.chains || [], ...i.chains ? ? []],
                    a = await o.getBalance({
                        address: t
                    }),
                    u = s.find(t => t.id === o.chain.id);
                return {
                    decimals: u ? .nativeCurrency.decimals ? ? 18,
                    formatted: (0, e9.b)(a ? ? "0", rf(r ? ? 18)),
                    symbol: u ? .nativeCurrency.symbol ? ? "ETH",
                    value: a
                }
            }

            function rF() {
                let {
                    data: t,
                    connector: e,
                    status: r
                } = rx();
                switch (r) {
                    case "connected":
                        return {
                            address: t ? .account,
                            connector: e,
                            isConnected: !0,
                            isConnecting: !1,
                            isDisconnected: !1,
                            isReconnecting: !1,
                            status: r
                        };
                    case "reconnecting":
                        return {
                            address: t ? .account,
                            connector: e,
                            isConnected: !!t ? .account,
                            isConnecting: !1,
                            isDisconnected: !1,
                            isReconnecting: !0,
                            status: r
                        };
                    case "connecting":
                        return {
                            address: t ? .account,
                            connector: e,
                            isConnected: !1,
                            isConnecting: !0,
                            isDisconnected: !1,
                            isReconnecting: !1,
                            status: r
                        };
                    case "disconnected":
                        return {
                            address: void 0,
                            connector: void 0,
                            isConnected: !1,
                            isConnecting: !1,
                            isDisconnected: !0,
                            isReconnecting: !1,
                            status: r
                        }
                }
            }

            function rL() {
                let t = rx(),
                    e = t.data ? .chain ? .id,
                    r = t.chains ? ? [],
                    n = [...t.publicClient ? .chains || [], ...r].find(t => t.id === e) ? ? {
                        id: e,
                        name: `Chain ${e}`,
                        network: `${e}`,
                        nativeCurrency: {
                            name: "Ether",
                            decimals: 18,
                            symbol: "ETH"
                        },
                        rpcUrls: {
                            default: {
                                http: [""]
                            },
                            public: {
                                http: [""]
                            }
                        }
                    };
                return {
                    chain: e ? { ...n,
                        ...t.data ? .chain,
                        id : e
                    } : void 0,
                    chains: r
                }
            }
            async function rq(t) {
                let e = await rP();
                if (!e) throw new eJ.N;
                return await e.signMessage({
                    message: t.message
                })
            }
            async function r$({
                chainId: t
            }) {
                let {
                    connector: e
                } = rx();
                if (!e) throw new eJ.N;
                if (!e.switchChain) throw new rs({
                    connector: e
                });
                return e.switchChain(t)
            }

            function rW(t, {
                selector: e = t => t
            } = {}) {
                let r = rx(),
                    n = () => t(rF());
                return r.subscribe(({
                    data: t,
                    connector: r,
                    status: n
                }) => e({
                    address: t ? .account,
                    connector: r,
                    status: n
                }), n, {
                    equalityFn: e7
                })
            }

            function rG(t, {
                selector: e = t => t
            } = {}) {
                let r = rx(),
                    n = () => t(rL());
                return r.subscribe(({
                    data: t,
                    chains: r
                }) => e({
                    chainId: t ? .chain ? .id,
                    chains: r
                }), n, {
                    equalityFn: e7
                })
            }
            async function rz({
                name: t,
                chainId: e
            }) {
                let {
                    normalize: n
                } = await r.e(2996).then(r.bind(r, 22996)), i = rA({
                    chainId: e
                });
                return await i.getEnsAvatar({
                    name: n(t)
                })
            }
            async function rH({
                address: t,
                chainId: e
            }) {
                return rA({
                    chainId: e
                }).getEnsName({
                    address: (0, rt.K)(t)
                })
            }
            async function rK({
                chainId: t
            } = {}) {
                let e = rA({
                    chainId: t
                });
                return await e.getBlockNumber()
            }
            async function rV({
                chainId: t,
                confirmations: e = 1,
                hash: r,
                onReplaced: n,
                timeout: i = 0
            }) {
                let o = rA({
                        chainId: t
                    }),
                    s = await o.waitForTransactionReceipt({
                        hash: r,
                        confirmations: e,
                        onReplaced: n,
                        timeout: i
                    });
                if ("reverted" === s.status) {
                    let t = await o.getTransaction({
                            hash: s.transactionHash
                        }),
                        e = await o.call({ ...t,
                            gasPrice: "eip1559" !== t.type ? t.gasPrice : void 0,
                            maxFeePerGas: "eip1559" === t.type ? t.maxFeePerGas : void 0,
                            maxPriorityFeePerGas: "eip1559" === t.type ? t.maxPriorityFeePerGas : void 0
                        });
                    throw Error((0, tT.rR)(`0x${e.substring(138)}`))
                }
                return s
            }

            function rQ({
                chainId: t
            }) {
                let {
                    chain: e,
                    chains: r
                } = rL(), n = e ? .id;
                if (n && t !== n) throw new rr({
                    activeChain: r.find(t => t.id === n) ? .name ? ? `Chain ${n}`,
                    targetChain: r.find(e => e.id === t) ? .name ? ? `Chain ${t}`
                })
            }
        },
        95185: function(t, e, r) {
            "use strict";

            function n({
                rpc: t
            }) {
                return function(e) {
                    let r = t(e);
                    return r && "" !== r.http ? {
                        chain: { ...e,
                            rpcUrls: { ...e.rpcUrls,
                                default: {
                                    http: [r.http]
                                }
                            }
                        },
                        rpcUrls: {
                            http: [r.http],
                            webSocket: r.webSocket ? [r.webSocket] : void 0
                        }
                    } : null
                }
            }
            r.d(e, {
                R: function() {
                    return n
                }
            })
        },
        70020: function(t, e, r) {
            "use strict";

            function n() {
                return function(t) {
                    return t.rpcUrls.public.http[0] ? {
                        chain: t,
                        rpcUrls: t.rpcUrls.public
                    } : null
                }
            }
            r.d(e, {
                I: function() {
                    return n
                }
            })
        },
        61994: function(t, e, r) {
            "use strict";

            function n(t) {
                var e, r, i = "";
                if ("string" == typeof t || "number" == typeof t) i += t;
                else if ("object" == typeof t) {
                    if (Array.isArray(t)) {
                        var o = t.length;
                        for (e = 0; e < o; e++) t[e] && (r = n(t[e])) && (i && (i += " "), i += r)
                    } else
                        for (r in t) t[r] && (i && (i += " "), i += r)
                }
                return i
            }

            function i() {
                for (var t, e, r = 0, i = "", o = arguments.length; r < o; r++)(t = arguments[r]) && (e = n(t)) && (i && (i += " "), i += e);
                return i
            }
            e.Z = i
        },
        5853: function(t, e, r) {
            "use strict";
            r.r(e), r.d(e, {
                __addDisposableResource: function() {
                    return R
                },
                __assign: function() {
                    return o
                },
                __asyncDelegator: function() {
                    return C
                },
                __asyncGenerator: function() {
                    return O
                },
                __asyncValues: function() {
                    return _
                },
                __await: function() {
                    return S
                },
                __awaiter: function() {
                    return p
                },
                __classPrivateFieldGet: function() {
                    return I
                },
                __classPrivateFieldIn: function() {
                    return B
                },
                __classPrivateFieldSet: function() {
                    return M
                },
                __createBinding: function() {
                    return m
                },
                __decorate: function() {
                    return a
                },
                __disposeResources: function() {
                    return j
                },
                __esDecorate: function() {
                    return c
                },
                __exportStar: function() {
                    return b
                },
                __extends: function() {
                    return i
                },
                __generator: function() {
                    return y
                },
                __importDefault: function() {
                    return D
                },
                __importStar: function() {
                    return k
                },
                __makeTemplateObject: function() {
                    return A
                },
                __metadata: function() {
                    return d
                },
                __param: function() {
                    return u
                },
                __propKey: function() {
                    return h
                },
                __read: function() {
                    return w
                },
                __rest: function() {
                    return s
                },
                __runInitializers: function() {
                    return l
                },
                __setFunctionName: function() {
                    return f
                },
                __spread: function() {
                    return v
                },
                __spreadArray: function() {
                    return x
                },
                __spreadArrays: function() {
                    return E
                },
                __values: function() {
                    return g
                }
            });
            var n = function(t, e) {
                return (n = Object.setPrototypeOf || ({
                    __proto__: []
                }) instanceof Array && function(t, e) {
                    t.__proto__ = e
                } || function(t, e) {
                    for (var r in e) Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r])
                })(t, e)
            };

            function i(t, e) {
                if ("function" != typeof e && null !== e) throw TypeError("Class extends value " + String(e) + " is not a constructor or null");

                function r() {
                    this.constructor = t
                }
                n(t, e), t.prototype = null === e ? Object.create(e) : (r.prototype = e.prototype, new r)
            }
            var o = function() {
                return (o = Object.assign || function(t) {
                    for (var e, r = 1, n = arguments.length; r < n; r++)
                        for (var i in e = arguments[r]) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
                    return t
                }).apply(this, arguments)
            };

            function s(t, e) {
                var r = {};
                for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && 0 > e.indexOf(n) && (r[n] = t[n]);
                if (null != t && "function" == typeof Object.getOwnPropertySymbols)
                    for (var i = 0, n = Object.getOwnPropertySymbols(t); i < n.length; i++) 0 > e.indexOf(n[i]) && Object.prototype.propertyIsEnumerable.call(t, n[i]) && (r[n[i]] = t[n[i]]);
                return r
            }

            function a(t, e, r, n) {
                var i, o = arguments.length,
                    s = o < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, r) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(t, e, r, n);
                else
                    for (var a = t.length - 1; a >= 0; a--)(i = t[a]) && (s = (o < 3 ? i(s) : o > 3 ? i(e, r, s) : i(e, r)) || s);
                return o > 3 && s && Object.defineProperty(e, r, s), s
            }

            function u(t, e) {
                return function(r, n) {
                    e(r, n, t)
                }
            }

            function c(t, e, r, n, i, o) {
                function s(t) {
                    if (void 0 !== t && "function" != typeof t) throw TypeError("Function expected");
                    return t
                }
                for (var a, u = n.kind, c = "getter" === u ? "get" : "setter" === u ? "set" : "value", l = !e && t ? n.static ? t : t.prototype : null, h = e || (l ? Object.getOwnPropertyDescriptor(l, n.name) : {}), f = !1, d = r.length - 1; d >= 0; d--) {
                    var p = {};
                    for (var y in n) p[y] = "access" === y ? {} : n[y];
                    for (var y in n.access) p.access[y] = n.access[y];
                    p.addInitializer = function(t) {
                        if (f) throw TypeError("Cannot add initializers after decoration has completed");
                        o.push(s(t || null))
                    };
                    var m = (0, r[d])("accessor" === u ? {
                        get: h.get,
                        set: h.set
                    } : h[c], p);
                    if ("accessor" === u) {
                        if (void 0 === m) continue;
                        if (null === m || "object" != typeof m) throw TypeError("Object expected");
                        (a = s(m.get)) && (h.get = a), (a = s(m.set)) && (h.set = a), (a = s(m.init)) && i.unshift(a)
                    } else(a = s(m)) && ("field" === u ? i.unshift(a) : h[c] = a)
                }
                l && Object.defineProperty(l, n.name, h), f = !0
            }

            function l(t, e, r) {
                for (var n = arguments.length > 2, i = 0; i < e.length; i++) r = n ? e[i].call(t, r) : e[i].call(t);
                return n ? r : void 0
            }

            function h(t) {
                return "symbol" == typeof t ? t : "".concat(t)
            }

            function f(t, e, r) {
                return "symbol" == typeof e && (e = e.description ? "[".concat(e.description, "]") : ""), Object.defineProperty(t, "name", {
                    configurable: !0,
                    value: r ? "".concat(r, " ", e) : e
                })
            }

            function d(t, e) {
                if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(t, e)
            }

            function p(t, e, r, n) {
                function i(t) {
                    return t instanceof r ? t : new r(function(e) {
                        e(t)
                    })
                }
                return new(r || (r = Promise))(function(r, o) {
                    function s(t) {
                        try {
                            u(n.next(t))
                        } catch (t) {
                            o(t)
                        }
                    }

                    function a(t) {
                        try {
                            u(n.throw(t))
                        } catch (t) {
                            o(t)
                        }
                    }

                    function u(t) {
                        t.done ? r(t.value) : i(t.value).then(s, a)
                    }
                    u((n = n.apply(t, e || [])).next())
                })
            }

            function y(t, e) {
                var r, n, i, o, s = {
                    label: 0,
                    sent: function() {
                        if (1 & i[0]) throw i[1];
                        return i[1]
                    },
                    trys: [],
                    ops: []
                };
                return o = {
                    next: a(0),
                    throw: a(1),
                    return: a(2)
                }, "function" == typeof Symbol && (o[Symbol.iterator] = function() {
                    return this
                }), o;

                function a(t) {
                    return function(e) {
                        return u([t, e])
                    }
                }

                function u(a) {
                    if (r) throw TypeError("Generator is already executing.");
                    for (; o && (o = 0, a[0] && (s = 0)), s;) try {
                        if (r = 1, n && (i = 2 & a[0] ? n.return : a[0] ? n.throw || ((i = n.return) && i.call(n), 0) : n.next) && !(i = i.call(n, a[1])).done) return i;
                        switch (n = 0, i && (a = [2 & a[0], i.value]), a[0]) {
                            case 0:
                            case 1:
                                i = a;
                                break;
                            case 4:
                                return s.label++, {
                                    value: a[1],
                                    done: !1
                                };
                            case 5:
                                s.label++, n = a[1], a = [0];
                                continue;
                            case 7:
                                a = s.ops.pop(), s.trys.pop();
                                continue;
                            default:
                                if (!(i = (i = s.trys).length > 0 && i[i.length - 1]) && (6 === a[0] || 2 === a[0])) {
                                    s = 0;
                                    continue
                                }
                                if (3 === a[0] && (!i || a[1] > i[0] && a[1] < i[3])) {
                                    s.label = a[1];
                                    break
                                }
                                if (6 === a[0] && s.label < i[1]) {
                                    s.label = i[1], i = a;
                                    break
                                }
                                if (i && s.label < i[2]) {
                                    s.label = i[2], s.ops.push(a);
                                    break
                                }
                                i[2] && s.ops.pop(), s.trys.pop();
                                continue
                        }
                        a = e.call(t, s)
                    } catch (t) {
                        a = [6, t], n = 0
                    } finally {
                        r = i = 0
                    }
                    if (5 & a[0]) throw a[1];
                    return {
                        value: a[0] ? a[1] : void 0,
                        done: !0
                    }
                }
            }
            var m = Object.create ? function(t, e, r, n) {
                void 0 === n && (n = r);
                var i = Object.getOwnPropertyDescriptor(e, r);
                (!i || ("get" in i ? !e.__esModule : i.writable || i.configurable)) && (i = {
                    enumerable: !0,
                    get: function() {
                        return e[r]
                    }
                }), Object.defineProperty(t, n, i)
            } : function(t, e, r, n) {
                void 0 === n && (n = r), t[n] = e[r]
            };

            function b(t, e) {
                for (var r in t) "default" === r || Object.prototype.hasOwnProperty.call(e, r) || m(e, t, r)
            }

            function g(t) {
                var e = "function" == typeof Symbol && Symbol.iterator,
                    r = e && t[e],
                    n = 0;
                if (r) return r.call(t);
                if (t && "number" == typeof t.length) return {
                    next: function() {
                        return t && n >= t.length && (t = void 0), {
                            value: t && t[n++],
                            done: !t
                        }
                    }
                };
                throw TypeError(e ? "Object is not iterable." : "Symbol.iterator is not defined.")
            }

            function w(t, e) {
                var r = "function" == typeof Symbol && t[Symbol.iterator];
                if (!r) return t;
                var n, i, o = r.call(t),
                    s = [];
                try {
                    for (;
                        (void 0 === e || e-- > 0) && !(n = o.next()).done;) s.push(n.value)
                } catch (t) {
                    i = {
                        error: t
                    }
                } finally {
                    try {
                        n && !n.done && (r = o.return) && r.call(o)
                    } finally {
                        if (i) throw i.error
                    }
                }
                return s
            }

            function v() {
                for (var t = [], e = 0; e < arguments.length; e++) t = t.concat(w(arguments[e]));
                return t
            }

            function E() {
                for (var t = 0, e = 0, r = arguments.length; e < r; e++) t += arguments[e].length;
                for (var n = Array(t), i = 0, e = 0; e < r; e++)
                    for (var o = arguments[e], s = 0, a = o.length; s < a; s++, i++) n[i] = o[s];
                return n
            }

            function x(t, e, r) {
                if (r || 2 == arguments.length)
                    for (var n, i = 0, o = e.length; i < o; i++) !n && i in e || (n || (n = Array.prototype.slice.call(e, 0, i)), n[i] = e[i]);
                return t.concat(n || Array.prototype.slice.call(e))
            }

            function S(t) {
                return this instanceof S ? (this.v = t, this) : new S(t)
            }

            function O(t, e, r) {
                if (!Symbol.asyncIterator) throw TypeError("Symbol.asyncIterator is not defined.");
                var n, i = r.apply(t, e || []),
                    o = [];
                return n = {}, s("next"), s("throw"), s("return"), n[Symbol.asyncIterator] = function() {
                    return this
                }, n;

                function s(t) {
                    i[t] && (n[t] = function(e) {
                        return new Promise(function(r, n) {
                            o.push([t, e, r, n]) > 1 || a(t, e)
                        })
                    })
                }

                function a(t, e) {
                    try {
                        u(i[t](e))
                    } catch (t) {
                        h(o[0][3], t)
                    }
                }

                function u(t) {
                    t.value instanceof S ? Promise.resolve(t.value.v).then(c, l) : h(o[0][2], t)
                }

                function c(t) {
                    a("next", t)
                }

                function l(t) {
                    a("throw", t)
                }

                function h(t, e) {
                    t(e), o.shift(), o.length && a(o[0][0], o[0][1])
                }
            }

            function C(t) {
                var e, r;
                return e = {}, n("next"), n("throw", function(t) {
                    throw t
                }), n("return"), e[Symbol.iterator] = function() {
                    return this
                }, e;

                function n(n, i) {
                    e[n] = t[n] ? function(e) {
                        return (r = !r) ? {
                            value: S(t[n](e)),
                            done: !1
                        } : i ? i(e) : e
                    } : i
                }
            }

            function _(t) {
                if (!Symbol.asyncIterator) throw TypeError("Symbol.asyncIterator is not defined.");
                var e, r = t[Symbol.asyncIterator];
                return r ? r.call(t) : (t = g(t), e = {}, n("next"), n("throw"), n("return"), e[Symbol.asyncIterator] = function() {
                    return this
                }, e);

                function n(r) {
                    e[r] = t[r] && function(e) {
                        return new Promise(function(n, o) {
                            i(n, o, (e = t[r](e)).done, e.value)
                        })
                    }
                }

                function i(t, e, r, n) {
                    Promise.resolve(n).then(function(e) {
                        t({
                            value: e,
                            done: r
                        })
                    }, e)
                }
            }

            function A(t, e) {
                return Object.defineProperty ? Object.defineProperty(t, "raw", {
                    value: e
                }) : t.raw = e, t
            }
            var P = Object.create ? function(t, e) {
                Object.defineProperty(t, "default", {
                    enumerable: !0,
                    value: e
                })
            } : function(t, e) {
                t.default = e
            };

            function k(t) {
                if (t && t.__esModule) return t;
                var e = {};
                if (null != t)
                    for (var r in t) "default" !== r && Object.prototype.hasOwnProperty.call(t, r) && m(e, t, r);
                return P(e, t), e
            }

            function D(t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            }

            function I(t, e, r, n) {
                if ("a" === r && !n) throw TypeError("Private accessor was defined without a getter");
                if ("function" == typeof e ? t !== e || !n : !e.has(t)) throw TypeError("Cannot read private member from an object whose class did not declare it");
                return "m" === r ? n : "a" === r ? n.call(t) : n ? n.value : e.get(t)
            }

            function M(t, e, r, n, i) {
                if ("m" === n) throw TypeError("Private method is not writable");
                if ("a" === n && !i) throw TypeError("Private accessor was defined without a setter");
                if ("function" == typeof e ? t !== e || !i : !e.has(t)) throw TypeError("Cannot write private member to an object whose class did not declare it");
                return "a" === n ? i.call(t, r) : i ? i.value = r : e.set(t, r), r
            }

            function B(t, e) {
                if (null === e || "object" != typeof e && "function" != typeof e) throw TypeError("Cannot use 'in' operator on non-object");
                return "function" == typeof t ? e === t : t.has(e)
            }

            function R(t, e, r) {
                if (null != e) {
                    var n;
                    if ("object" != typeof e && "function" != typeof e) throw TypeError("Object expected.");
                    if (r) {
                        if (!Symbol.asyncDispose) throw TypeError("Symbol.asyncDispose is not defined.");
                        n = e[Symbol.asyncDispose]
                    }
                    if (void 0 === n) {
                        if (!Symbol.dispose) throw TypeError("Symbol.dispose is not defined.");
                        n = e[Symbol.dispose]
                    }
                    if ("function" != typeof n) throw TypeError("Object not disposable.");
                    t.stack.push({
                        value: e,
                        dispose: n,
                        async: r
                    })
                } else r && t.stack.push({
                    async: !0
                });
                return e
            }
            var T = "function" == typeof SuppressedError ? SuppressedError : function(t, e, r) {
                var n = Error(r);
                return n.name = "SuppressedError", n.error = t, n.suppressed = e, n
            };

            function j(t) {
                function e(e) {
                    t.error = t.hasError ? new T(e, t.error, "An error was suppressed during disposal.") : e, t.hasError = !0
                }

                function r() {
                    for (; t.stack.length;) {
                        var n = t.stack.pop();
                        try {
                            var i = n.dispose && n.dispose.call(n.value);
                            if (n.async) return Promise.resolve(i).then(r, function(t) {
                                return e(t), r()
                            })
                        } catch (t) {
                            e(t)
                        }
                    }
                    if (t.hasError) throw t.error
                }
                return r()
            }
            e.default = {
                __extends: i,
                __assign: o,
                __rest: s,
                __decorate: a,
                __param: u,
                __metadata: d,
                __awaiter: p,
                __generator: y,
                __createBinding: m,
                __exportStar: b,
                __values: g,
                __read: w,
                __spread: v,
                __spreadArrays: E,
                __spreadArray: x,
                __await: S,
                __asyncGenerator: O,
                __asyncDelegator: C,
                __asyncValues: _,
                __makeTemplateObject: A,
                __importStar: k,
                __importDefault: D,
                __classPrivateFieldGet: I,
                __classPrivateFieldSet: M,
                __classPrivateFieldIn: B,
                __addDisposableResource: R,
                __disposeResources: j
            }
        },
        55389: function(t, e, r) {
            "use strict";
            r.d(e, {
                E: function() {
                    return i
                }
            });
            var n = r(57251);

            function i(t = 0) {
                return null != globalThis.Buffer && null != globalThis.Buffer.allocUnsafe ? (0, n.P)(globalThis.Buffer.allocUnsafe(t)) : new Uint8Array(t)
            }
        },
        8578: function(t, e, r) {
            "use strict";
            r.d(e, {
                z: function() {
                    return o
                }
            });
            var n = r(55389),
                i = r(57251);

            function o(t, e) {
                e || (e = t.reduce((t, e) => t + e.length, 0));
                let r = (0, n.E)(e),
                    o = 0;
                for (let e of t) r.set(e, o), o += e.length;
                return (0, i.P)(r)
            }
        },
        93870: function(t, e, r) {
            "use strict";
            r.d(e, {
                m: function() {
                    return o
                }
            });
            var n = r(93393),
                i = r(57251);

            function o(t, e = "utf8") {
                let r = n.Z[e];
                if (!r) throw Error(`Unsupported encoding "${e}"`);
                return ("utf8" === e || "utf-8" === e) && null != globalThis.Buffer && null != globalThis.Buffer.from ? (0, i.P)(globalThis.Buffer.from(t, "utf-8")) : r.decoder.decode(`${r.prefix}${t}`)
            }
        },
        47783: function(t, e, r) {
            "use strict";
            r.d(e, {
                BB: function() {
                    return o.B
                },
                mL: function() {
                    return i.m
                },
                zo: function() {
                    return n.z
                }
            });
            var n = r(8578),
                i = r(93870),
                o = r(71243)
        },
        71243: function(t, e, r) {
            "use strict";
            r.d(e, {
                B: function() {
                    return i
                }
            });
            var n = r(93393);

            function i(t, e = "utf8") {
                let r = n.Z[e];
                if (!r) throw Error(`Unsupported encoding "${e}"`);
                return ("utf8" === e || "utf-8" === e) && null != globalThis.Buffer && null != globalThis.Buffer.from ? globalThis.Buffer.from(t.buffer, t.byteOffset, t.byteLength).toString("utf8") : r.encoder.encode(t).substring(1)
            }
        },
        57251: function(t, e, r) {
            "use strict";

            function n(t) {
                return null != globalThis.Buffer ? new Uint8Array(t.buffer, t.byteOffset, t.byteLength) : t
            }
            r.d(e, {
                P: function() {
                    return n
                }
            })
        },
        93393: function(t, e, r) {
            "use strict";
            r.d(e, {
                Z: function() {
                    return ei
                }
            });
            var n = {};
            r.r(n), r.d(n, {
                identity: function() {
                    return M
                }
            });
            var i = {};
            r.r(i), r.d(i, {
                base2: function() {
                    return B
                }
            });
            var o = {};
            r.r(o), r.d(o, {
                base8: function() {
                    return R
                }
            });
            var s = {};
            r.r(s), r.d(s, {
                base10: function() {
                    return T
                }
            });
            var a = {};
            r.r(a), r.d(a, {
                base16: function() {
                    return j
                },
                base16upper: function() {
                    return U
                }
            });
            var u = {};
            r.r(u), r.d(u, {
                base32: function() {
                    return N
                },
                base32hex: function() {
                    return $
                },
                base32hexpad: function() {
                    return G
                },
                base32hexpadupper: function() {
                    return z
                },
                base32hexupper: function() {
                    return W
                },
                base32pad: function() {
                    return L
                },
                base32padupper: function() {
                    return q
                },
                base32upper: function() {
                    return F
                },
                base32z: function() {
                    return H
                }
            });
            var c = {};
            r.r(c), r.d(c, {
                base36: function() {
                    return K
                },
                base36upper: function() {
                    return V
                }
            });
            var l = {};
            r.r(l), r.d(l, {
                base58btc: function() {
                    return Q
                },
                base58flickr: function() {
                    return Z
                }
            });
            var h = {};
            r.r(h), r.d(h, {
                base64: function() {
                    return Y
                },
                base64pad: function() {
                    return J
                },
                base64url: function() {
                    return X
                },
                base64urlpad: function() {
                    return tt
                }
            });
            var f = {};
            r.r(f), r.d(f, {
                base256emoji: function() {
                    return ti
                }
            });
            var d = {};
            r.r(d), r.d(d, {
                sha256: function() {
                    return tR
                },
                sha512: function() {
                    return tT
                }
            });
            var p = {};
            r.r(p), r.d(p, {
                identity: function() {
                    return tF
                }
            });
            var y = {};
            r.r(y), r.d(y, {
                code: function() {
                    return tq
                },
                decode: function() {
                    return tW
                },
                encode: function() {
                    return t$
                },
                name: function() {
                    return tL
                }
            });
            var m = {};
            r.r(m), r.d(m, {
                code: function() {
                    return tK
                },
                decode: function() {
                    return tQ
                },
                encode: function() {
                    return tV
                },
                name: function() {
                    return tH
                }
            });
            var b = function(t, e) {
                if (t.length >= 255) throw TypeError("Alphabet too long");
                for (var r = new Uint8Array(256), n = 0; n < r.length; n++) r[n] = 255;
                for (var i = 0; i < t.length; i++) {
                    var o = t.charAt(i),
                        s = o.charCodeAt(0);
                    if (255 !== r[s]) throw TypeError(o + " is ambiguous");
                    r[s] = i
                }
                var a = t.length,
                    u = t.charAt(0),
                    c = Math.log(a) / Math.log(256),
                    l = Math.log(256) / Math.log(a);

                function h(t) {
                    if ("string" != typeof t) throw TypeError("Expected String");
                    if (0 === t.length) return new Uint8Array;
                    var e = 0;
                    if (" " !== t[0]) {
                        for (var n = 0, i = 0; t[e] === u;) n++, e++;
                        for (var o = (t.length - e) * c + 1 >>> 0, s = new Uint8Array(o); t[e];) {
                            var l = r[t.charCodeAt(e)];
                            if (255 === l) return;
                            for (var h = 0, f = o - 1;
                                (0 !== l || h < i) && -1 !== f; f--, h++) l += a * s[f] >>> 0, s[f] = l % 256 >>> 0, l = l / 256 >>> 0;
                            if (0 !== l) throw Error("Non-zero carry");
                            i = h, e++
                        }
                        if (" " !== t[e]) {
                            for (var d = o - i; d !== o && 0 === s[d];) d++;
                            for (var p = new Uint8Array(n + (o - d)), y = n; d !== o;) p[y++] = s[d++];
                            return p
                        }
                    }
                }

                function f(t) {
                    var r = h(t);
                    if (r) return r;
                    throw Error(`Non-${e} character`)
                }
                return {
                    encode: function(e) {
                        if (e instanceof Uint8Array || (ArrayBuffer.isView(e) ? e = new Uint8Array(e.buffer, e.byteOffset, e.byteLength) : Array.isArray(e) && (e = Uint8Array.from(e))), !(e instanceof Uint8Array)) throw TypeError("Expected Uint8Array");
                        if (0 === e.length) return "";
                        for (var r = 0, n = 0, i = 0, o = e.length; i !== o && 0 === e[i];) i++, r++;
                        for (var s = (o - i) * l + 1 >>> 0, c = new Uint8Array(s); i !== o;) {
                            for (var h = e[i], f = 0, d = s - 1;
                                (0 !== h || f < n) && -1 !== d; d--, f++) h += 256 * c[d] >>> 0, c[d] = h % a >>> 0, h = h / a >>> 0;
                            if (0 !== h) throw Error("Non-zero carry");
                            n = f, i++
                        }
                        for (var p = s - n; p !== s && 0 === c[p];) p++;
                        for (var y = u.repeat(r); p < s; ++p) y += t.charAt(c[p]);
                        return y
                    },
                    decodeUnsafe: h,
                    decode: f
                }
            };
            new Uint8Array(0);
            let g = (t, e) => {
                    if (t === e) return !0;
                    if (t.byteLength !== e.byteLength) return !1;
                    for (let r = 0; r < t.byteLength; r++)
                        if (t[r] !== e[r]) return !1;
                    return !0
                },
                w = t => {
                    if (t instanceof Uint8Array && "Uint8Array" === t.constructor.name) return t;
                    if (t instanceof ArrayBuffer) return new Uint8Array(t);
                    if (ArrayBuffer.isView(t)) return new Uint8Array(t.buffer, t.byteOffset, t.byteLength);
                    throw Error("Unknown type, must be binary type")
                },
                v = t => new TextEncoder().encode(t),
                E = t => new TextDecoder().decode(t);
            class x {
                constructor(t, e, r) {
                    this.name = t, this.prefix = e, this.baseEncode = r
                }
                encode(t) {
                    if (t instanceof Uint8Array) return `${this.prefix}${this.baseEncode(t)}`;
                    throw Error("Unknown type, must be binary type")
                }
            }
            class S {
                constructor(t, e, r) {
                    if (this.name = t, this.prefix = e, void 0 === e.codePointAt(0)) throw Error("Invalid prefix character");
                    this.prefixCodePoint = e.codePointAt(0), this.baseDecode = r
                }
                decode(t) {
                    if ("string" == typeof t) {
                        if (t.codePointAt(0) !== this.prefixCodePoint) throw Error(`Unable to decode multibase string ${JSON.stringify(t)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);
                        return this.baseDecode(t.slice(this.prefix.length))
                    }
                    throw Error("Can only multibase decode strings")
                }
                or(t) {
                    return C(this, t)
                }
            }
            class O {
                constructor(t) {
                    this.decoders = t
                }
                or(t) {
                    return C(this, t)
                }
                decode(t) {
                    let e = t[0],
                        r = this.decoders[e];
                    if (r) return r.decode(t);
                    throw RangeError(`Unable to decode multibase string ${JSON.stringify(t)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)
                }
            }
            let C = (t, e) => new O({ ...t.decoders || {
                    [t.prefix]: t
                },
                ...e.decoders || {
                    [e.prefix]: e
                }
            });
            class _ {
                constructor(t, e, r, n) {
                    this.name = t, this.prefix = e, this.baseEncode = r, this.baseDecode = n, this.encoder = new x(t, e, r), this.decoder = new S(t, e, n)
                }
                encode(t) {
                    return this.encoder.encode(t)
                }
                decode(t) {
                    return this.decoder.decode(t)
                }
            }
            let A = ({
                    name: t,
                    prefix: e,
                    encode: r,
                    decode: n
                }) => new _(t, e, r, n),
                P = ({
                    prefix: t,
                    name: e,
                    alphabet: r
                }) => {
                    let {
                        encode: n,
                        decode: i
                    } = b(r, e);
                    return A({
                        prefix: t,
                        name: e,
                        encode: n,
                        decode: t => w(i(t))
                    })
                },
                k = (t, e, r, n) => {
                    let i = {};
                    for (let t = 0; t < e.length; ++t) i[e[t]] = t;
                    let o = t.length;
                    for (;
                        "=" === t[o - 1];) --o;
                    let s = new Uint8Array(o * r / 8 | 0),
                        a = 0,
                        u = 0,
                        c = 0;
                    for (let e = 0; e < o; ++e) {
                        let o = i[t[e]];
                        if (void 0 === o) throw SyntaxError(`Non-${n} character`);
                        u = u << r | o, (a += r) >= 8 && (a -= 8, s[c++] = 255 & u >> a)
                    }
                    if (a >= r || 255 & u << 8 - a) throw SyntaxError("Unexpected end of data");
                    return s
                },
                D = (t, e, r) => {
                    let n = "=" === e[e.length - 1],
                        i = (1 << r) - 1,
                        o = "",
                        s = 0,
                        a = 0;
                    for (let n = 0; n < t.length; ++n)
                        for (a = a << 8 | t[n], s += 8; s > r;) s -= r, o += e[i & a >> s];
                    if (s && (o += e[i & a << r - s]), n)
                        for (; o.length * r & 7;) o += "=";
                    return o
                },
                I = ({
                    name: t,
                    prefix: e,
                    bitsPerChar: r,
                    alphabet: n
                }) => A({
                    prefix: e,
                    name: t,
                    encode: t => D(t, n, r),
                    decode: e => k(e, n, r, t)
                }),
                M = A({
                    prefix: "\0",
                    name: "identity",
                    encode: t => E(t),
                    decode: t => v(t)
                }),
                B = I({
                    prefix: "0",
                    name: "base2",
                    alphabet: "01",
                    bitsPerChar: 1
                }),
                R = I({
                    prefix: "7",
                    name: "base8",
                    alphabet: "01234567",
                    bitsPerChar: 3
                }),
                T = P({
                    prefix: "9",
                    name: "base10",
                    alphabet: "0123456789"
                }),
                j = I({
                    prefix: "f",
                    name: "base16",
                    alphabet: "0123456789abcdef",
                    bitsPerChar: 4
                }),
                U = I({
                    prefix: "F",
                    name: "base16upper",
                    alphabet: "0123456789ABCDEF",
                    bitsPerChar: 4
                }),
                N = I({
                    prefix: "b",
                    name: "base32",
                    alphabet: "abcdefghijklmnopqrstuvwxyz234567",
                    bitsPerChar: 5
                }),
                F = I({
                    prefix: "B",
                    name: "base32upper",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",
                    bitsPerChar: 5
                }),
                L = I({
                    prefix: "c",
                    name: "base32pad",
                    alphabet: "abcdefghijklmnopqrstuvwxyz234567=",
                    bitsPerChar: 5
                }),
                q = I({
                    prefix: "C",
                    name: "base32padupper",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",
                    bitsPerChar: 5
                }),
                $ = I({
                    prefix: "v",
                    name: "base32hex",
                    alphabet: "0123456789abcdefghijklmnopqrstuv",
                    bitsPerChar: 5
                }),
                W = I({
                    prefix: "V",
                    name: "base32hexupper",
                    alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV",
                    bitsPerChar: 5
                }),
                G = I({
                    prefix: "t",
                    name: "base32hexpad",
                    alphabet: "0123456789abcdefghijklmnopqrstuv=",
                    bitsPerChar: 5
                }),
                z = I({
                    prefix: "T",
                    name: "base32hexpadupper",
                    alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=",
                    bitsPerChar: 5
                }),
                H = I({
                    prefix: "h",
                    name: "base32z",
                    alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769",
                    bitsPerChar: 5
                }),
                K = P({
                    prefix: "k",
                    name: "base36",
                    alphabet: "0123456789abcdefghijklmnopqrstuvwxyz"
                }),
                V = P({
                    prefix: "K",
                    name: "base36upper",
                    alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"
                }),
                Q = P({
                    name: "base58btc",
                    prefix: "z",
                    alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"
                }),
                Z = P({
                    name: "base58flickr",
                    prefix: "Z",
                    alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"
                }),
                Y = I({
                    prefix: "m",
                    name: "base64",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
                    bitsPerChar: 6
                }),
                J = I({
                    prefix: "M",
                    name: "base64pad",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
                    bitsPerChar: 6
                }),
                X = I({
                    prefix: "u",
                    name: "base64url",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",
                    bitsPerChar: 6
                }),
                tt = I({
                    prefix: "U",
                    name: "base64urlpad",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",
                    bitsPerChar: 6
                }),
                te = Array.from("\uD83D\uDE80\uD83E\uDE90☄\uD83D\uDEF0\uD83C\uDF0C\uD83C\uDF11\uD83C\uDF12\uD83C\uDF13\uD83C\uDF14\uD83C\uDF15\uD83C\uDF16\uD83C\uDF17\uD83C\uDF18\uD83C\uDF0D\uD83C\uDF0F\uD83C\uDF0E\uD83D\uDC09☀\uD83D\uDCBB\uD83D\uDDA5\uD83D\uDCBE\uD83D\uDCBF\uD83D\uDE02❤\uD83D\uDE0D\uD83E\uDD23\uD83D\uDE0A\uD83D\uDE4F\uD83D\uDC95\uD83D\uDE2D\uD83D\uDE18\uD83D\uDC4D\uD83D\uDE05\uD83D\uDC4F\uD83D\uDE01\uD83D\uDD25\uD83E\uDD70\uD83D\uDC94\uD83D\uDC96\uD83D\uDC99\uD83D\uDE22\uD83E\uDD14\uD83D\uDE06\uD83D\uDE44\uD83D\uDCAA\uD83D\uDE09☺\uD83D\uDC4C\uD83E\uDD17\uD83D\uDC9C\uD83D\uDE14\uD83D\uDE0E\uD83D\uDE07\uD83C\uDF39\uD83E\uDD26\uD83C\uDF89\uD83D\uDC9E✌✨\uD83E\uDD37\uD83D\uDE31\uD83D\uDE0C\uD83C\uDF38\uD83D\uDE4C\uD83D\uDE0B\uD83D\uDC97\uD83D\uDC9A\uD83D\uDE0F\uD83D\uDC9B\uD83D\uDE42\uD83D\uDC93\uD83E\uDD29\uD83D\uDE04\uD83D\uDE00\uD83D\uDDA4\uD83D\uDE03\uD83D\uDCAF\uD83D\uDE48\uD83D\uDC47\uD83C\uDFB6\uD83D\uDE12\uD83E\uDD2D❣\uD83D\uDE1C\uD83D\uDC8B\uD83D\uDC40\uD83D\uDE2A\uD83D\uDE11\uD83D\uDCA5\uD83D\uDE4B\uD83D\uDE1E\uD83D\uDE29\uD83D\uDE21\uD83E\uDD2A\uD83D\uDC4A\uD83E\uDD73\uD83D\uDE25\uD83E\uDD24\uD83D\uDC49\uD83D\uDC83\uD83D\uDE33✋\uD83D\uDE1A\uD83D\uDE1D\uD83D\uDE34\uD83C\uDF1F\uD83D\uDE2C\uD83D\uDE43\uD83C\uDF40\uD83C\uDF37\uD83D\uDE3B\uD83D\uDE13⭐✅\uD83E\uDD7A\uD83C\uDF08\uD83D\uDE08\uD83E\uDD18\uD83D\uDCA6✔\uD83D\uDE23\uD83C\uDFC3\uD83D\uDC90☹\uD83C\uDF8A\uD83D\uDC98\uD83D\uDE20☝\uD83D\uDE15\uD83C\uDF3A\uD83C\uDF82\uD83C\uDF3B\uD83D\uDE10\uD83D\uDD95\uD83D\uDC9D\uD83D\uDE4A\uD83D\uDE39\uD83D\uDDE3\uD83D\uDCAB\uD83D\uDC80\uD83D\uDC51\uD83C\uDFB5\uD83E\uDD1E\uD83D\uDE1B\uD83D\uDD34\uD83D\uDE24\uD83C\uDF3C\uD83D\uDE2B⚽\uD83E\uDD19☕\uD83C\uDFC6\uD83E\uDD2B\uD83D\uDC48\uD83D\uDE2E\uD83D\uDE46\uD83C\uDF7B\uD83C\uDF43\uD83D\uDC36\uD83D\uDC81\uD83D\uDE32\uD83C\uDF3F\uD83E\uDDE1\uD83C\uDF81⚡\uD83C\uDF1E\uD83C\uDF88❌✊\uD83D\uDC4B\uD83D\uDE30\uD83E\uDD28\uD83D\uDE36\uD83E\uDD1D\uD83D\uDEB6\uD83D\uDCB0\uD83C\uDF53\uD83D\uDCA2\uD83E\uDD1F\uD83D\uDE41\uD83D\uDEA8\uD83D\uDCA8\uD83E\uDD2C✈\uD83C\uDF80\uD83C\uDF7A\uD83E\uDD13\uD83D\uDE19\uD83D\uDC9F\uD83C\uDF31\uD83D\uDE16\uD83D\uDC76\uD83E\uDD74▶➡❓\uD83D\uDC8E\uD83D\uDCB8⬇\uD83D\uDE28\uD83C\uDF1A\uD83E\uDD8B\uD83D\uDE37\uD83D\uDD7A⚠\uD83D\uDE45\uD83D\uDE1F\uD83D\uDE35\uD83D\uDC4E\uD83E\uDD32\uD83E\uDD20\uD83E\uDD27\uD83D\uDCCC\uD83D\uDD35\uD83D\uDC85\uD83E\uDDD0\uD83D\uDC3E\uD83C\uDF52\uD83D\uDE17\uD83E\uDD11\uD83C\uDF0A\uD83E\uDD2F\uD83D\uDC37☎\uD83D\uDCA7\uD83D\uDE2F\uD83D\uDC86\uD83D\uDC46\uD83C\uDFA4\uD83D\uDE47\uD83C\uDF51❄\uD83C\uDF34\uD83D\uDCA3\uD83D\uDC38\uD83D\uDC8C\uD83D\uDCCD\uD83E\uDD40\uD83E\uDD22\uD83D\uDC45\uD83D\uDCA1\uD83D\uDCA9\uD83D\uDC50\uD83D\uDCF8\uD83D\uDC7B\uD83E\uDD10\uD83E\uDD2E\uD83C\uDFBC\uD83E\uDD75\uD83D\uDEA9\uD83C\uDF4E\uD83C\uDF4A\uD83D\uDC7C\uD83D\uDC8D\uD83D\uDCE3\uD83E\uDD42"),
                tr = te.reduce((t, e, r) => (t[r] = e, t), []),
                tn = te.reduce((t, e, r) => (t[e.codePointAt(0)] = r, t), []),
                ti = A({
                    prefix: "\uD83D\uDE80",
                    name: "base256emoji",
                    encode: function(t) {
                        return t.reduce((t, e) => t += tr[e], "")
                    },
                    decode: function(t) {
                        let e = [];
                        for (let r of t) {
                            let t = tn[r.codePointAt(0)];
                            if (void 0 === t) throw Error(`Non-base256emoji character: ${r}`);
                            e.push(t)
                        }
                        return new Uint8Array(e)
                    }
                });
            var to = 128,
                ts = -128,
                ta = 2147483648;

            function tu(t, e, r) {
                e = e || [];
                for (var n = r = r || 0; t >= ta;) e[r++] = 255 & t | to, t /= 128;
                for (; t & ts;) e[r++] = 255 & t | to, t >>>= 7;
                return e[r] = 0 | t, tu.bytes = r - n + 1, e
            }
            var tc = 128,
                tl = 127;

            function th(t, e) {
                var r, n = 0,
                    e = e || 0,
                    i = 0,
                    o = e,
                    s = t.length;
                do {
                    if (o >= s) throw th.bytes = 0, RangeError("Could not decode varint");
                    r = t[o++], n += i < 28 ? (r & tl) << i : (r & tl) * Math.pow(2, i), i += 7
                } while (r >= tc);
                return th.bytes = o - e, n
            }
            var tf = 128,
                td = 16384,
                tp = 2097152,
                ty = 268435456,
                tm = 34359738368,
                tb = 4398046511104,
                tg = 562949953421312,
                tw = 72057594037927940,
                tv = 0x7fffffffffffffff,
                tE = tu,
                tx = th,
                tS = function(t) {
                    return t < tf ? 1 : t < td ? 2 : t < tp ? 3 : t < ty ? 4 : t < tm ? 5 : t < tb ? 6 : t < tg ? 7 : t < tw ? 8 : t < tv ? 9 : 10
                };
            let tO = (t, e = 0) => [tx(t, e), tx.bytes],
                tC = (t, e, r = 0) => (tE(t, e, r), e),
                t_ = t => tS(t),
                tA = (t, e) => {
                    let r = e.byteLength,
                        n = t_(t),
                        i = n + t_(r),
                        o = new Uint8Array(i + r);
                    return tC(t, o, 0), tC(r, o, n), o.set(e, i), new tD(t, r, e, o)
                },
                tP = t => {
                    let e = w(t),
                        [r, n] = tO(e),
                        [i, o] = tO(e.subarray(n)),
                        s = e.subarray(n + o);
                    if (s.byteLength !== i) throw Error("Incorrect length");
                    return new tD(r, i, s, e)
                },
                tk = (t, e) => t === e || t.code === e.code && t.size === e.size && g(t.bytes, e.bytes);
            class tD {
                constructor(t, e, r, n) {
                    this.code = t, this.size = e, this.digest = r, this.bytes = n
                }
            }
            let tI = ({
                name: t,
                code: e,
                encode: r
            }) => new tM(t, e, r);
            class tM {
                constructor(t, e, r) {
                    this.name = t, this.code = e, this.encode = r
                }
                digest(t) {
                    if (t instanceof Uint8Array) {
                        let e = this.encode(t);
                        return e instanceof Uint8Array ? tA(this.code, e) : e.then(t => tA(this.code, t))
                    }
                    throw Error("Unknown type, must be binary type")
                }
            }
            let tB = t => async e => new Uint8Array(await crypto.subtle.digest(t, e)),
                tR = tI({
                    name: "sha2-256",
                    code: 18,
                    encode: tB("SHA-256")
                }),
                tT = tI({
                    name: "sha2-512",
                    code: 19,
                    encode: tB("SHA-512")
                }),
                tj = 0,
                tU = w,
                tN = t => tA(tj, tU(t)),
                tF = {
                    code: tj,
                    name: "identity",
                    encode: tU,
                    digest: tN
                },
                tL = "raw",
                tq = 85,
                t$ = t => w(t),
                tW = t => w(t),
                tG = new TextEncoder,
                tz = new TextDecoder,
                tH = "json",
                tK = 512,
                tV = t => tG.encode(JSON.stringify(t)),
                tQ = t => JSON.parse(tz.decode(t));
            class tZ {
                constructor(t, e, r, n) {
                    this.code = e, this.version = t, this.multihash = r, this.bytes = n, this.byteOffset = n.byteOffset, this.byteLength = n.byteLength, this.asCID = this, this._baseCache = new Map, Object.defineProperties(this, {
                        byteOffset: t5,
                        byteLength: t5,
                        code: t3,
                        version: t3,
                        multihash: t3,
                        bytes: t3,
                        _baseCache: t5,
                        asCID: t5
                    })
                }
                toV0() {
                    if (0 === this.version) return this; {
                        let {
                            code: t,
                            multihash: e
                        } = this;
                        if (t !== t0) throw Error("Cannot convert a non dag-pb CID to CIDv0");
                        if (e.code !== t1) throw Error("Cannot convert non sha2-256 multihash CID to CIDv0");
                        return tZ.createV0(e)
                    }
                }
                toV1() {
                    switch (this.version) {
                        case 0:
                            {
                                let {
                                    code: t,
                                    digest: e
                                } = this.multihash,
                                r = tA(t, e);
                                return tZ.createV1(this.code, r)
                            }
                        case 1:
                            return this;
                        default:
                            throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)
                    }
                }
                equals(t) {
                    return t && this.code === t.code && this.version === t.version && tk(this.multihash, t.multihash)
                }
                toString(t) {
                    let {
                        bytes: e,
                        version: r,
                        _baseCache: n
                    } = this;
                    return 0 === r ? tJ(e, n, t || Q.encoder) : tX(e, n, t || N.encoder)
                }
                toJSON() {
                    return {
                        code: this.code,
                        version: this.version,
                        hash: this.multihash.bytes
                    }
                }
                get[Symbol.toStringTag]() {
                    return "CID"
                }[Symbol.for("nodejs.util.inspect.custom")]() {
                    return "CID(" + this.toString() + ")"
                }
                static isCID(t) {
                    return t4(/^0\.0/, t9), !!(t && (t[t6] || t.asCID === t))
                }
                get toBaseEncodedString() {
                    throw Error("Deprecated, use .toString()")
                }
                get codec() {
                    throw Error('"codec" property is deprecated, use integer "code" property instead')
                }
                get buffer() {
                    throw Error("Deprecated .buffer property, use .bytes to get Uint8Array instead")
                }
                get multibaseName() {
                    throw Error('"multibaseName" property is deprecated')
                }
                get prefix() {
                    throw Error('"prefix" property is deprecated')
                }
                static asCID(t) {
                    if (t instanceof tZ) return t;
                    if (null != t && t.asCID === t) {
                        let {
                            version: e,
                            code: r,
                            multihash: n,
                            bytes: i
                        } = t;
                        return new tZ(e, r, n, i || t2(e, r, n.bytes))
                    }
                    if (null == t || !0 !== t[t6]) return null; {
                        let {
                            version: e,
                            multihash: r,
                            code: n
                        } = t, i = tP(r);
                        return tZ.create(e, n, i)
                    }
                }
                static create(t, e, r) {
                    if ("number" != typeof e) throw Error("String codecs are no longer supported");
                    switch (t) {
                        case 0:
                            if (e === t0) return new tZ(t, e, r, r.bytes);
                            throw Error(`Version 0 CID must use dag-pb (code: ${t0}) block encoding`);
                        case 1:
                            {
                                let n = t2(t, e, r.bytes);
                                return new tZ(t, e, r, n)
                            }
                        default:
                            throw Error("Invalid version")
                    }
                }
                static createV0(t) {
                    return tZ.create(0, t0, t)
                }
                static createV1(t, e) {
                    return tZ.create(1, t, e)
                }
                static decode(t) {
                    let [e, r] = tZ.decodeFirst(t);
                    if (r.length) throw Error("Incorrect length");
                    return e
                }
                static decodeFirst(t) {
                    let e = tZ.inspectBytes(t),
                        r = e.size - e.multihashSize,
                        n = w(t.subarray(r, r + e.multihashSize));
                    if (n.byteLength !== e.multihashSize) throw Error("Incorrect length");
                    let i = n.subarray(e.multihashSize - e.digestSize),
                        o = new tD(e.multihashCode, e.digestSize, i, n);
                    return [0 === e.version ? tZ.createV0(o) : tZ.createV1(e.codec, o), t.subarray(e.size)]
                }
                static inspectBytes(t) {
                    let e = 0,
                        r = () => {
                            let [r, n] = tO(t.subarray(e));
                            return e += n, r
                        },
                        n = r(),
                        i = t0;
                    if (18 === n ? (n = 0, e = 0) : 1 === n && (i = r()), 0 !== n && 1 !== n) throw RangeError(`Invalid CID version ${n}`);
                    let o = e,
                        s = r(),
                        a = r(),
                        u = e + a;
                    return {
                        version: n,
                        codec: i,
                        multihashCode: s,
                        digestSize: a,
                        multihashSize: u - o,
                        size: u
                    }
                }
                static parse(t, e) {
                    let [r, n] = tY(t, e), i = tZ.decode(n);
                    return i._baseCache.set(r, t), i
                }
            }
            let tY = (t, e) => {
                    switch (t[0]) {
                        case "Q":
                            {
                                let r = e || Q;
                                return [Q.prefix, r.decode(`${Q.prefix}${t}`)]
                            }
                        case Q.prefix:
                            {
                                let r = e || Q;
                                return [Q.prefix, r.decode(t)]
                            }
                        case N.prefix:
                            {
                                let r = e || N;
                                return [N.prefix, r.decode(t)]
                            }
                        default:
                            if (null == e) throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");
                            return [t[0], e.decode(t)]
                    }
                },
                tJ = (t, e, r) => {
                    let {
                        prefix: n
                    } = r;
                    if (n !== Q.prefix) throw Error(`Cannot string encode V0 in ${r.name} encoding`);
                    let i = e.get(n);
                    if (null != i) return i; {
                        let i = r.encode(t).slice(1);
                        return e.set(n, i), i
                    }
                },
                tX = (t, e, r) => {
                    let {
                        prefix: n
                    } = r, i = e.get(n);
                    if (null != i) return i; {
                        let i = r.encode(t);
                        return e.set(n, i), i
                    }
                },
                t0 = 112,
                t1 = 18,
                t2 = (t, e, r) => {
                    let n = t_(t),
                        i = n + t_(e),
                        o = new Uint8Array(i + r.byteLength);
                    return tC(t, o, 0), tC(e, o, n), o.set(r, i), o
                },
                t6 = Symbol.for("@ipld/js-cid/CID"),
                t3 = {
                    writable: !1,
                    configurable: !1,
                    enumerable: !0
                },
                t5 = {
                    writable: !1,
                    enumerable: !1,
                    configurable: !1
                },
                t8 = "0.0.0-dev",
                t4 = (t, e) => {
                    if (t.test(t8)) console.warn(e);
                    else throw Error(e)
                },
                t9 = `CID.isCID(v) is deprecated and will be removed in the next major release.
Following code pattern:

if (CID.isCID(value)) {
  doSomethingWithCID(value)
}

Is replaced with:

const cid = CID.asCID(value)
if (cid) {
  // Make sure to use cid instead of value
  doSomethingWithCID(cid)
}
`,
                t7 = { ...n,
                    ...i,
                    ...o,
                    ...s,
                    ...a,
                    ...u,
                    ...c,
                    ...l,
                    ...h,
                    ...f
                };
            ({ ...d,
                ...p
            });
            var et = r(55389);

            function ee(t, e, r, n) {
                return {
                    name: t,
                    prefix: e,
                    encoder: {
                        name: t,
                        prefix: e,
                        encode: r
                    },
                    decoder: {
                        decode: n
                    }
                }
            }
            let er = ee("utf8", "u", t => "u" + new TextDecoder("utf8").decode(t), t => new TextEncoder().encode(t.substring(1))),
                en = ee("ascii", "a", t => {
                    let e = "a";
                    for (let r = 0; r < t.length; r++) e += String.fromCharCode(t[r]);
                    return e
                }, t => {
                    t = t.substring(1);
                    let e = (0, et.E)(t.length);
                    for (let r = 0; r < t.length; r++) e[r] = t.charCodeAt(r);
                    return e
                });
            var ei = {
                utf8: er,
                "utf-8": er,
                hex: t7.base16,
                latin1: en,
                ascii: en,
                binary: en,
                ...t7
            }
        },
        19775: function(t, e, r) {
            "use strict";

            function n(t) {
                return "string" == typeof t ? {
                    address: t,
                    type: "json-rpc"
                } : t
            }
            r.d(e, {
                T: function() {
                    return n
                }
            })
        },
        24733: function(t, e, r) {
            "use strict";
            r.d(e, {
                R: function() {
                    return v
                }
            });
            var n = r(19775),
                i = r(98158);
            let o = "0x82ad56cb";
            var s = r(75921),
                a = r(35586),
                u = r(20010),
                c = r(65436),
                l = r(93182),
                h = r(93627),
                f = r(59455),
                d = r(78125),
                p = r(18856);

            function y(t, {
                docsPath: e,
                ...r
            }) {
                let n = (() => {
                    let e = (0, p.k)(t, r);
                    return e instanceof d.cj ? t : e
                })();
                return new u.cg(n, {
                    docsPath: e,
                    ...r
                })
            }
            var m = r(70878),
                b = r(92614),
                g = r(43226),
                w = r(54605);
            async function v(t, e) {
                let {
                    account: i = t.account,
                    batch: o = !!t.batch ? .multicall,
                    blockNumber: s,
                    blockTag: u = "latest",
                    accessList: c,
                    data: l,
                    gas: h,
                    gasPrice: d,
                    maxFeePerGas: p,
                    maxPriorityFeePerGas: g,
                    nonce: v,
                    to: O,
                    value: C,
                    ..._
                } = e, A = i ? (0, n.T)(i) : void 0;
                try {
                    (0, w.F)(e);
                    let r = (s ? (0, f.eC)(s) : void 0) || u,
                        n = t.chain ? .formatters ? .transactionRequest ? .format,
                        i = (n || b.tG)({ ...(0, m.K)(_, {
                                format: n
                            }),
                            from: A ? .address,
                            accessList: c,
                            data: l,
                            gas: h,
                            gasPrice: d,
                            maxFeePerGas: p,
                            maxPriorityFeePerGas: g,
                            nonce: v,
                            to: O,
                            value: C
                        });
                    if (o && E({
                            request: i
                        })) try {
                        return await x(t, { ...i,
                            blockNumber: s,
                            blockTag: u
                        })
                    } catch (t) {
                        if (!(t instanceof a.pZ) && !(t instanceof a.mm)) throw t
                    }
                    let y = await t.request({
                        method: "eth_call",
                        params: r ? [i, r] : [i]
                    });
                    if ("0x" === y) return {
                        data: void 0
                    };
                    return {
                        data: y
                    }
                } catch (s) {
                    let n = S(s),
                        {
                            offchainLookup: i,
                            offchainLookupSignature: o
                        } = await r.e(868).then(r.bind(r, 868));
                    if (n ? .slice(0, 10) === o && O) return {
                        data: await i(t, {
                            data: n,
                            to: O
                        })
                    };
                    throw y(s, { ...e,
                        account: A,
                        chain: t.chain
                    })
                }
            }

            function E({
                request: t
            }) {
                let {
                    data: e,
                    to: r,
                    ...n
                } = t;
                return !(!e || e.startsWith(o)) && !!r && !(Object.values(n).filter(t => void 0 !== t).length > 0)
            }
            async function x(t, e) {
                let {
                    batchSize: r = 1024,
                    wait: n = 0
                } = "object" == typeof t.batch ? .multicall ? t.batch.multicall : {}, {
                    blockNumber: o,
                    blockTag: s = "latest",
                    data: d,
                    multicallAddress: p,
                    to: y
                } = e, m = p;
                if (!m) {
                    if (!t.chain) throw new a.pZ;
                    m = (0, h.L)({
                        blockNumber: o,
                        chain: t.chain,
                        contract: "multicall3"
                    })
                }
                let b = (o ? (0, f.eC)(o) : void 0) || s,
                    {
                        schedule: w
                    } = (0, g.S)({
                        id: `${t.uid}.${b}`,
                        wait: n,
                        shouldSplitBatch: t => t.reduce((t, {
                            data: e
                        }) => t + (e.length - 2), 0) > 2 * r,
                        fn: async e => {
                            let r = e.map(t => ({
                                    allowFailure: !0,
                                    callData: t.data,
                                    target: t.to
                                })),
                                n = (0, l.R)({
                                    abi: i.F8,
                                    args: [r],
                                    functionName: "aggregate3"
                                }),
                                o = await t.request({
                                    method: "eth_call",
                                    params: [{
                                        data: n,
                                        to: m
                                    }, b]
                                });
                            return (0, c.k)({
                                abi: i.F8,
                                args: [r],
                                functionName: "aggregate3",
                                data: o || "0x"
                            })
                        }
                    }),
                    [{
                        returnData: v,
                        success: E
                    }] = await w({
                        data: d,
                        to: y
                    });
                if (!E) throw new u.VQ({
                    data: v
                });
                return "0x" === v ? {
                    data: void 0
                } : {
                    data: v
                }
            }

            function S(t) {
                if (!(t instanceof s.G)) return;
                let e = t.walk();
                return "object" == typeof e.data ? e.data.data : e.data
            }
        },
        6458: function(t, e, r) {
            "use strict";
            r.d(e, {
                C: function() {
                    return c
                },
                X: function() {
                    return u
                }
            });
            var n = r(4496),
                i = r(82645),
                o = r(96174),
                s = r(74587),
                a = r(25283);
            async function u(t, e) {
                return c(t, e)
            }
            async function c(t, e) {
                let {
                    block: r,
                    chain: u = t.chain,
                    request: c,
                    type: l = "eip1559"
                } = e || {}, h = await (async () => "function" == typeof u ? .fees ? .baseFeeMultiplier ? u.fees.baseFeeMultiplier({
                    block: r,
                    client: t,
                    request: c
                }) : u ? .fees ? .baseFeeMultiplier ? ? 1.2)();
                if (h < 1) throw new n.Fz;
                let f = 10 ** (h.toString().split(".")[1] ? .length ? ? 0),
                    d = t => t * BigInt(Math.ceil(h * f)) / BigInt(f),
                    p = r || await (0, i.s)(t, s.Q, "getBlock")({});
                if ("function" == typeof u ? .fees ? .estimateFeesPerGas) return u.fees.estimateFeesPerGas({
                    block: r,
                    client: t,
                    multiply: d,
                    request: c,
                    type: l
                });
                if ("eip1559" === l) {
                    if ("bigint" != typeof p.baseFeePerGas) throw new n.e5;
                    let e = c ? .maxPriorityFeePerGas ? c.maxPriorityFeePerGas : await (0, o.h)(t, {
                            block: p,
                            chain: u,
                            request: c
                        }),
                        r = d(p.baseFeePerGas);
                    return {
                        maxFeePerGas: c ? .maxFeePerGas ? ? r + e,
                        maxPriorityFeePerGas: e
                    }
                }
                return {
                    gasPrice: c ? .gasPrice ? ? d(await (0, i.s)(t, a.o, "getGasPrice")({}))
                }
            }
        },
        8741: function(t, e, r) {
            "use strict";
            r.d(e, {
                Q: function() {
                    return g
                }
            });
            var n = r(19775),
                i = r(65704),
                o = r(59455),
                s = r(71282),
                a = r(29707),
                u = r(75921),
                c = r(63228);
            class l extends u.G {
                constructor(t, {
                    account: e,
                    docsPath: r,
                    chain: n,
                    data: i,
                    gas: o,
                    gasPrice: u,
                    maxFeePerGas: l,
                    maxPriorityFeePerGas: h,
                    nonce: f,
                    to: d,
                    value: p
                }) {
                    super(t.shortMessage, {
                        cause: t,
                        docsPath: r,
                        metaMessages: [...t.metaMessages ? [...t.metaMessages, " "] : [], "Estimate Gas Arguments:", (0, c.xr)({
                            from: e ? .address,
                            to: d,
                            value: void 0 !== p && `${(0,s.d)(p)} ${n?.nativeCurrency?.symbol||"ETH"}`,
                            data: i,
                            gas: o,
                            gasPrice: void 0 !== u && `${(0,a.o)(u)} gwei`,
                            maxFeePerGas: void 0 !== l && `${(0,a.o)(l)} gwei`,
                            maxPriorityFeePerGas: void 0 !== h && `${(0,a.o)(h)} gwei`,
                            nonce: f
                        })].filter(Boolean)
                    }), Object.defineProperty(this, "cause", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "EstimateGasExecutionError"
                    }), this.cause = t
                }
            }
            var h = r(78125),
                f = r(18856);

            function d(t, {
                docsPath: e,
                ...r
            }) {
                return new l((() => {
                    let e = (0, f.k)(t, r);
                    return e instanceof h.cj ? t : e
                })(), {
                    docsPath: e,
                    ...r
                })
            }
            var p = r(70878),
                y = r(92614),
                m = r(54605),
                b = r(63198);
            async function g(t, e) {
                let r = e.account ? ? t.account;
                if (!r) throw new i.o({
                    docsPath: "/docs/actions/public/estimateGas"
                });
                let s = (0, n.T)(r);
                try {
                    let {
                        accessList: r,
                        blockNumber: n,
                        blockTag: i,
                        data: a,
                        gas: u,
                        gasPrice: c,
                        maxFeePerGas: l,
                        maxPriorityFeePerGas: h,
                        nonce: f,
                        to: d,
                        value: g,
                        ...w
                    } = "local" === s.type ? await (0, b.Z)(t, e) : e, v = (n ? (0, o.eC)(n) : void 0) || i;
                    (0, m.F)(e);
                    let E = t.chain ? .formatters ? .transactionRequest ? .format,
                        x = (E || y.tG)({ ...(0, p.K)(w, {
                                format: E
                            }),
                            from: s.address,
                            accessList: r,
                            data: a,
                            gas: u,
                            gasPrice: c,
                            maxFeePerGas: l,
                            maxPriorityFeePerGas: h,
                            nonce: f,
                            to: d,
                            value: g
                        }),
                        S = await t.request({
                            method: "eth_estimateGas",
                            params: v ? [x, v] : [x]
                        });
                    return BigInt(S)
                } catch (r) {
                    throw d(r, { ...e,
                        account: s,
                        chain: t.chain
                    })
                }
            }
        },
        96174: function(t, e, r) {
            "use strict";
            r.d(e, {
                _: function() {
                    return u
                },
                h: function() {
                    return c
                }
            });
            var n = r(4496),
                i = r(72932),
                o = r(82645),
                s = r(74587),
                a = r(25283);
            async function u(t, e) {
                return c(t, e)
            }
            async function c(t, e) {
                let {
                    block: r,
                    chain: u = t.chain,
                    request: c
                } = e || {};
                if ("function" == typeof u ? .fees ? .defaultPriorityFee) {
                    let e = r || await (0, o.s)(t, s.Q, "getBlock")({});
                    return u.fees.defaultPriorityFee({
                        block: e,
                        client: t,
                        request: c
                    })
                }
                if (void 0 !== u ? .fees ? .defaultPriorityFee) return u ? .fees ? .defaultPriorityFee;
                try {
                    let e = await t.request({
                        method: "eth_maxPriorityFeePerGas"
                    });
                    return (0, i.y_)(e)
                } catch {
                    let [e, i] = await Promise.all([r ? Promise.resolve(r) : (0, o.s)(t, s.Q, "getBlock")({}), (0, o.s)(t, a.o, "getGasPrice")({})]);
                    if ("bigint" != typeof e.baseFeePerGas) throw new n.e5;
                    let u = i - e.baseFeePerGas;
                    if (u < 0 n) return 0 n;
                    return u
                }
            }
        },
        74587: function(t, e, r) {
            "use strict";
            r.d(e, {
                Q: function() {
                    return s
                }
            });
            var n = r(12197),
                i = r(59455),
                o = r(59069);
            async function s(t, {
                blockHash: e,
                blockNumber: r,
                blockTag: s,
                includeTransactions: a
            } = {}) {
                let u = s ? ? "latest",
                    c = a ? ? !1,
                    l = void 0 !== r ? (0, i.eC)(r) : void 0,
                    h = null;
                if (!(h = e ? await t.request({
                        method: "eth_getBlockByHash",
                        params: [e, c]
                    }) : await t.request({
                        method: "eth_getBlockByNumber",
                        params: [l || u, c]
                    }))) throw new n.f({
                    blockHash: e,
                    blockNumber: r
                });
                return (t.chain ? .formatters ? .block ? .format || o.Z)(h)
            }
        },
        12363: function(t, e, r) {
            "use strict";
            r.d(e, {
                L: function() {
                    return i
                }
            });
            var n = r(72932);
            async function i(t) {
                let e = await t.request({
                    method: "eth_chainId"
                });
                return (0, n.ly)(e)
            }
        },
        25283: function(t, e, r) {
            "use strict";
            async function n(t) {
                return BigInt(await t.request({
                    method: "eth_gasPrice"
                }))
            }
            r.d(e, {
                o: function() {
                    return n
                }
            })
        },
        16689: function(t, e, r) {
            "use strict";
            r.d(e, {
                K: function() {
                    return o
                }
            });
            var n = r(72932),
                i = r(59455);
            async function o(t, {
                address: e,
                blockTag: r = "latest",
                blockNumber: o
            }) {
                let s = await t.request({
                    method: "eth_getTransactionCount",
                    params: [e, o ? (0, i.eC)(o) : r]
                });
                return (0, n.ly)(s)
            }
        },
        63198: function(t, e, r) {
            "use strict";
            r.d(e, {
                Z: function() {
                    return p
                }
            });
            var n = r(19775),
                i = r(6458),
                o = r(8741),
                s = r(74587),
                a = r(16689),
                u = r(65704),
                c = r(4496),
                l = r(82645),
                h = r(54605),
                f = r(63228);

            function d(t) {
                if (t.type) return t.type;
                if (void 0 !== t.maxFeePerGas || void 0 !== t.maxPriorityFeePerGas) return "eip1559";
                if (void 0 !== t.gasPrice) return void 0 !== t.accessList ? "eip2930" : "legacy";
                throw new f.j3({
                    transaction: t
                })
            }
            async function p(t, e) {
                let {
                    account: r = t.account,
                    chain: f,
                    gas: p,
                    nonce: y,
                    type: m
                } = e;
                if (!r) throw new u.o;
                let b = (0, n.T)(r),
                    g = await (0, l.s)(t, s.Q, "getBlock")({
                        blockTag: "latest"
                    }),
                    w = { ...e,
                        from: b.address
                    };
                if (void 0 === y && (w.nonce = await (0, l.s)(t, a.K, "getTransactionCount")({
                        address: b.address,
                        blockTag: "pending"
                    })), void 0 === m) try {
                    w.type = d(w)
                } catch {
                    w.type = "bigint" == typeof g.baseFeePerGas ? "eip1559" : "legacy"
                }
                if ("eip1559" === w.type) {
                    let {
                        maxFeePerGas: r,
                        maxPriorityFeePerGas: n
                    } = await (0, i.C)(t, {
                        block: g,
                        chain: f,
                        request: w
                    });
                    if (void 0 === e.maxPriorityFeePerGas && e.maxFeePerGas && e.maxFeePerGas < n) throw new c.ld({
                        maxPriorityFeePerGas: n
                    });
                    w.maxPriorityFeePerGas = n, w.maxFeePerGas = r
                } else {
                    if (void 0 !== e.maxFeePerGas || void 0 !== e.maxPriorityFeePerGas) throw new c.e5;
                    let {
                        gasPrice: r
                    } = await (0, i.C)(t, {
                        block: g,
                        chain: f,
                        request: w,
                        type: "legacy"
                    });
                    w.gasPrice = r
                }
                return void 0 === p && (w.gas = await (0, l.s)(t, o.Q, "estimateGas")({ ...w,
                    account: {
                        address: b.address,
                        type: "json-rpc"
                    }
                })), (0, h.F)(w), w
            }
        },
        9769: function(t, e, r) {
            "use strict";
            async function n(t, {
                serializedTransaction: e
            }) {
                return t.request({
                    method: "eth_sendRawTransaction",
                    params: [e]
                })
            }
            r.d(e, {
                p: function() {
                    return n
                }
            })
        },
        54518: function(t, e, r) {
            "use strict";
            r.d(e, {
                y: function() {
                    return n
                }
            });
            let n = (0, r(90328).a)({
                id: 42161,
                name: "Arbitrum One",
                network: "arbitrum",
                nativeCurrency: {
                    name: "Ether",
                    symbol: "ETH",
                    decimals: 18
                },
                rpcUrls: {
                    alchemy: {
                        http: ["https://arb-mainnet.g.alchemy.com/v2"],
                        webSocket: ["wss://arb-mainnet.g.alchemy.com/v2"]
                    },
                    infura: {
                        http: ["https://arbitrum-mainnet.infura.io/v3"],
                        webSocket: ["wss://arbitrum-mainnet.infura.io/ws/v3"]
                    },
                    default: {
                        http: ["https://arb1.arbitrum.io/rpc"]
                    },
                    public: {
                        http: ["https://arb1.arbitrum.io/rpc"]
                    }
                },
                blockExplorers: {
                    etherscan: {
                        name: "Arbiscan",
                        url: "https://arbiscan.io"
                    },
                    default: {
                        name: "Arbiscan",
                        url: "https://arbiscan.io"
                    }
                },
                contracts: {
                    multicall3: {
                        address: "0xca11bde05977b3631167028862be2a173976ca11",
                        blockCreated: 7654707
                    }
                }
            })
        },
        17939: function(t, e, r) {
            "use strict";
            r.d(e, {
                Z: function() {
                    return n
                }
            });
            let n = (0, r(90328).a)({
                id: 421614,
                name: "Arbitrum Sepolia",
                network: "arbitrum-sepolia",
                nativeCurrency: {
                    name: "Arbitrum Sepolia Ether",
                    symbol: "ETH",
                    decimals: 18
                },
                rpcUrls: {
                    alchemy: {
                        http: ["https://arb-sepolia.g.alchemy.com/v2"],
                        webSocket: ["wss://arb-sepolia.g.alchemy.com/v2"]
                    },
                    default: {
                        http: ["https://sepolia-rollup.arbitrum.io/rpc"]
                    },
                    public: {
                        http: ["https://sepolia-rollup.arbitrum.io/rpc"]
                    }
                },
                blockExplorers: {
                    default: {
                        name: "Blockscout",
                        url: "https://sepolia-explorer.arbitrum.io"
                    }
                },
                contracts: {
                    multicall3: {
                        address: "0xca11bde05977b3631167028862be2a173976ca11",
                        blockCreated: 81930
                    }
                },
                testnet: !0
            })
        },
        12523: function(t, e, r) {
            "use strict";
            r.d(e, {
                p: function() {
                    return n
                }
            });
            let n = (0, r(90328).a)({
                id: 43114,
                name: "Avalanche",
                network: "avalanche",
                nativeCurrency: {
                    decimals: 18,
                    name: "Avalanche",
                    symbol: "AVAX"
                },
                rpcUrls: {
                    default: {
                        http: ["https://api.avax.network/ext/bc/C/rpc"]
                    },
                    public: {
                        http: ["https://api.avax.network/ext/bc/C/rpc"]
                    }
                },
                blockExplorers: {
                    etherscan: {
                        name: "SnowTrace",
                        url: "https://snowtrace.io"
                    },
                    default: {
                        name: "SnowTrace",
                        url: "https://snowtrace.io"
                    }
                },
                contracts: {
                    multicall3: {
                        address: "0xca11bde05977b3631167028862be2a173976ca11",
                        blockCreated: 11907934
                    }
                }
            })
        },
        46240: function(t, e, r) {
            "use strict";
            r.d(e, {
                c: function() {
                    return n
                }
            });
            let n = (0, r(90328).a)({
                id: 43113,
                name: "Avalanche Fuji",
                network: "avalanche-fuji",
                nativeCurrency: {
                    decimals: 18,
                    name: "Avalanche Fuji",
                    symbol: "AVAX"
                },
                rpcUrls: {
                    default: {
                        http: ["https://api.avax-test.network/ext/bc/C/rpc"]
                    },
                    public: {
                        http: ["https://api.avax-test.network/ext/bc/C/rpc"]
                    }
                },
                blockExplorers: {
                    etherscan: {
                        name: "SnowTrace",
                        url: "https://testnet.snowtrace.io"
                    },
                    default: {
                        name: "SnowTrace",
                        url: "https://testnet.snowtrace.io"
                    }
                },
                contracts: {
                    multicall3: {
                        address: "0xca11bde05977b3631167028862be2a173976ca11",
                        blockCreated: 7096959
                    }
                },
                testnet: !0
            })
        },
        90713: function(t, e, r) {
            "use strict";
            r.d(e, {
                u: function() {
                    return o
                }
            });
            var n = r(90328),
                i = r(33893);
            let o = (0, n.a)({
                id: 8453,
                network: "base",
                name: "Base",
                nativeCurrency: {
                    name: "Ether",
                    symbol: "ETH",
                    decimals: 18
                },
                rpcUrls: {
                    alchemy: {
                        http: ["https://base-mainnet.g.alchemy.com/v2"],
                        webSocket: ["wss://base-mainnet.g.alchemy.com/v2"]
                    },
                    infura: {
                        http: ["https://base-mainnet.infura.io/v3"],
                        webSocket: ["wss://base-mainnet.infura.io/ws/v3"]
                    },
                    default: {
                        http: ["https://mainnet.base.org"]
                    },
                    public: {
                        http: ["https://mainnet.base.org"]
                    }
                },
                blockExplorers: {
                    blockscout: {
                        name: "Basescout",
                        url: "https://base.blockscout.com"
                    },
                    default: {
                        name: "Basescan",
                        url: "https://basescan.org"
                    },
                    etherscan: {
                        name: "Basescan",
                        url: "https://basescan.org"
                    }
                },
                contracts: {
                    multicall3: {
                        address: "0xca11bde05977b3631167028862be2a173976ca11",
                        blockCreated: 5022
                    }
                }
            }, {
                formatters: i.V
            })
        },
        81460: function(t, e, r) {
            "use strict";
            r.d(e, {
                L: function() {
                    return o
                }
            });
            var n = r(90328),
                i = r(33893);
            let o = (0, n.a)({
                id: 84532,
                network: "base-sepolia",
                name: "Base Sepolia",
                nativeCurrency: {
                    name: "Sepolia Ether",
                    symbol: "ETH",
                    decimals: 18
                },
                rpcUrls: {
                    default: {
                        http: ["https://sepolia.base.org"]
                    },
                    public: {
                        http: ["https://sepolia.base.org"]
                    }
                },
                blockExplorers: {
                    blockscout: {
                        name: "Blockscout",
                        url: "https://base-sepolia.blockscout.com"
                    },
                    default: {
                        name: "Blockscout",
                        url: "https://base-sepolia.blockscout.com"
                    }
                },
                testnet: !0,
                sourceId: 11155111
            }, {
                formatters: i.V
            })
        },
        32111: function(t, e, r) {
            "use strict";
            r.d(e, {
                e: function() {
                    return n
                }
            });
            let n = (0, r(90328).a)({
                id: 56,
                name: "BNB Smart Chain",
                network: "bsc",
                nativeCurrency: {
                    decimals: 18,
                    name: "BNB",
                    symbol: "BNB"
                },
                rpcUrls: {
                    default: {
                        http: ["https://rpc.ankr.com/bsc"]
                    },
                    public: {
                        http: ["https://rpc.ankr.com/bsc"]
                    }
                },
                blockExplorers: {
                    etherscan: {
                        name: "BscScan",
                        url: "https://bscscan.com"
                    },
                    default: {
                        name: "BscScan",
                        url: "https://bscscan.com"
                    }
                },
                contracts: {
                    multicall3: {
                        address: "0xca11bde05977b3631167028862be2a173976ca11",
                        blockCreated: 15921452
                    }
                }
            })
        },
        95720: function(t, e, r) {
            "use strict";
            r.d(e, {
                d: function() {
                    return n
                }
            });
            let n = (0, r(90328).a)({
                id: 97,
                name: "Binance Smart Chain Testnet",
                network: "bsc-testnet",
                nativeCurrency: {
                    decimals: 18,
                    name: "BNB",
                    symbol: "tBNB"
                },
                rpcUrls: {
                    default: {
                        http: ["https://data-seed-prebsc-1-s1.bnbchain.org:8545"]
                    },
                    public: {
                        http: ["https://data-seed-prebsc-1-s1.bnbchain.org:8545"]
                    }
                },
                blockExplorers: {
                    etherscan: {
                        name: "BscScan",
                        url: "https://testnet.bscscan.com"
                    },
                    default: {
                        name: "BscScan",
                        url: "https://testnet.bscscan.com"
                    }
                },
                contracts: {
                    multicall3: {
                        address: "0xca11bde05977b3631167028862be2a173976ca11",
                        blockCreated: 17422483
                    }
                },
                testnet: !0
            })
        },
        67156: function(t, e, r) {
            "use strict";
            r.d(e, {
                P: function() {
                    return n
                }
            });
            let n = (0, r(90328).a)({
                id: 59144,
                name: "Linea Mainnet",
                network: "linea-mainnet",
                nativeCurrency: {
                    name: "Linea Ether",
                    symbol: "ETH",
                    decimals: 18
                },
                rpcUrls: {
                    infura: {
                        http: ["https://linea-mainnet.infura.io/v3"],
                        webSocket: ["wss://linea-mainnet.infura.io/ws/v3"]
                    },
                    default: {
                        http: ["https://rpc.linea.build"],
                        webSocket: ["wss://rpc.linea.build"]
                    },
                    public: {
                        http: ["https://rpc.linea.build"],
                        webSocket: ["wss://rpc.linea.build"]
                    }
                },
                blockExplorers: {
                    default: {
                        name: "Etherscan",
                        url: "https://lineascan.build"
                    },
                    etherscan: {
                        name: "Etherscan",
                        url: "https://lineascan.build"
                    },
                    blockscout: {
                        name: "Blockscout",
                        url: "https://explorer.linea.build"
                    }
                },
                contracts: {
                    multicall3: {
                        address: "0xcA11bde05977b3631167028862bE2a173976CA11",
                        blockCreated: 42
                    }
                },
                testnet: !1
            })
        },
        44792: function(t, e, r) {
            "use strict";
            r.d(e, {
                S: function() {
                    return n
                }
            });
            let n = (0, r(90328).a)({
                id: 59140,
                name: "Linea Goerli Testnet",
                network: "linea-testnet",
                nativeCurrency: {
                    name: "Linea Ether",
                    symbol: "ETH",
                    decimals: 18
                },
                rpcUrls: {
                    infura: {
                        http: ["https://linea-goerli.infura.io/v3"],
                        webSocket: ["wss://linea-goerli.infura.io/ws/v3"]
                    },
                    default: {
                        http: ["https://rpc.goerli.linea.build"],
                        webSocket: ["wss://rpc.goerli.linea.build"]
                    },
                    public: {
                        http: ["https://rpc.goerli.linea.build"],
                        webSocket: ["wss://rpc.goerli.linea.build"]
                    }
                },
                blockExplorers: {
                    default: {
                        name: "Etherscan",
                        url: "https://goerli.lineascan.build"
                    },
                    etherscan: {
                        name: "Etherscan",
                        url: "https://goerli.lineascan.build"
                    },
                    blockscout: {
                        name: "Blockscout",
                        url: "https://explorer.goerli.linea.build"
                    }
                },
                contracts: {
                    multicall3: {
                        address: "0xca11bde05977b3631167028862be2a173976ca11",
                        blockCreated: 498623
                    }
                },
                testnet: !0
            })
        },
        64314: function(t, e, r) {
            "use strict";
            r.d(e, {
                R: function() {
                    return n
                }
            });
            let n = (0, r(90328).a)({
                id: 1,
                network: "homestead",
                name: "Ethereum",
                nativeCurrency: {
                    name: "Ether",
                    symbol: "ETH",
                    decimals: 18
                },
                rpcUrls: {
                    alchemy: {
                        http: ["https://eth-mainnet.g.alchemy.com/v2"],
                        webSocket: ["wss://eth-mainnet.g.alchemy.com/v2"]
                    },
                    infura: {
                        http: ["https://mainnet.infura.io/v3"],
                        webSocket: ["wss://mainnet.infura.io/ws/v3"]
                    },
                    default: {
                        http: ["https://cloudflare-eth.com"]
                    },
                    public: {
                        http: ["https://cloudflare-eth.com"]
                    }
                },
                blockExplorers: {
                    etherscan: {
                        name: "Etherscan",
                        url: "https://etherscan.io"
                    },
                    default: {
                        name: "Etherscan",
                        url: "https://etherscan.io"
                    }
                },
                contracts: {
                    ensRegistry: {
                        address: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e"
                    },
                    ensUniversalResolver: {
                        address: "0xc0497E381f536Be9ce14B0dD3817cBcAe57d2F62",
                        blockCreated: 16966585
                    },
                    multicall3: {
                        address: "0xca11bde05977b3631167028862be2a173976ca11",
                        blockCreated: 14353601
                    }
                }
            })
        },
        98604: function(t, e, r) {
            "use strict";
            r.d(e, {
                v: function() {
                    return o
                }
            });
            var n = r(90328),
                i = r(33893);
            let o = (0, n.a)({
                id: 10,
                name: "OP Mainnet",
                network: "optimism",
                nativeCurrency: {
                    name: "Ether",
                    symbol: "ETH",
                    decimals: 18
                },
                rpcUrls: {
                    alchemy: {
                        http: ["https://opt-mainnet.g.alchemy.com/v2"],
                        webSocket: ["wss://opt-mainnet.g.alchemy.com/v2"]
                    },
                    infura: {
                        http: ["https://optimism-mainnet.infura.io/v3"],
                        webSocket: ["wss://optimism-mainnet.infura.io/ws/v3"]
                    },
                    default: {
                        http: ["https://mainnet.optimism.io"]
                    },
                    public: {
                        http: ["https://mainnet.optimism.io"]
                    }
                },
                blockExplorers: {
                    etherscan: {
                        name: "Etherscan",
                        url: "https://optimistic.etherscan.io"
                    },
                    default: {
                        name: "Optimism Explorer",
                        url: "https://explorer.optimism.io"
                    }
                },
                contracts: {
                    multicall3: {
                        address: "0xca11bde05977b3631167028862be2a173976ca11",
                        blockCreated: 4286263
                    }
                }
            }, {
                formatters: i.V
            })
        },
        73499: function(t, e, r) {
            "use strict";
            r.d(e, {
                O: function() {
                    return o
                }
            });
            var n = r(90328),
                i = r(33893);
            let o = (0, n.a)({
                id: 11155420,
                name: "Optimism Sepolia",
                network: "optimism-sepolia",
                nativeCurrency: {
                    name: "Sepolia Ether",
                    symbol: "ETH",
                    decimals: 18
                },
                rpcUrls: {
                    default: {
                        http: ["https://sepolia.optimism.io"]
                    },
                    public: {
                        http: ["https://sepolia.optimism.io"]
                    }
                },
                blockExplorers: {
                    blockscout: {
                        name: "Blockscout",
                        url: "https://optimism-sepolia.blockscout.com"
                    },
                    default: {
                        name: "Blockscout",
                        url: "https://optimism-sepolia.blockscout.com"
                    }
                },
                contracts: {
                    multicall3: {
                        address: "0xca11bde05977b3631167028862be2a173976ca11",
                        blockCreated: 1620204
                    }
                },
                testnet: !0
            }, {
                formatters: i.V
            })
        },
        83791: function(t, e, r) {
            "use strict";
            r.d(e, {
                y: function() {
                    return n
                }
            });
            let n = (0, r(90328).a)({
                id: 137,
                name: "Polygon",
                network: "matic",
                nativeCurrency: {
                    name: "MATIC",
                    symbol: "MATIC",
                    decimals: 18
                },
                rpcUrls: {
                    alchemy: {
                        http: ["https://polygon-mainnet.g.alchemy.com/v2"],
                        webSocket: ["wss://polygon-mainnet.g.alchemy.com/v2"]
                    },
                    infura: {
                        http: ["https://polygon-mainnet.infura.io/v3"],
                        webSocket: ["wss://polygon-mainnet.infura.io/ws/v3"]
                    },
                    default: {
                        http: ["https://polygon-rpc.com"]
                    },
                    public: {
                        http: ["https://polygon-rpc.com"]
                    }
                },
                blockExplorers: {
                    etherscan: {
                        name: "PolygonScan",
                        url: "https://polygonscan.com"
                    },
                    default: {
                        name: "PolygonScan",
                        url: "https://polygonscan.com"
                    }
                },
                contracts: {
                    multicall3: {
                        address: "0xca11bde05977b3631167028862be2a173976ca11",
                        blockCreated: 25770160
                    }
                }
            })
        },
        55625: function(t, e, r) {
            "use strict";
            r.d(e, {
                F: function() {
                    return n
                }
            });
            let n = (0, r(90328).a)({
                id: 11155111,
                network: "sepolia",
                name: "Sepolia",
                nativeCurrency: {
                    name: "Sepolia Ether",
                    symbol: "SEP",
                    decimals: 18
                },
                rpcUrls: {
                    alchemy: {
                        http: ["https://eth-sepolia.g.alchemy.com/v2"],
                        webSocket: ["wss://eth-sepolia.g.alchemy.com/v2"]
                    },
                    infura: {
                        http: ["https://sepolia.infura.io/v3"],
                        webSocket: ["wss://sepolia.infura.io/ws/v3"]
                    },
                    default: {
                        http: ["https://rpc.sepolia.org"]
                    },
                    public: {
                        http: ["https://rpc.sepolia.org"]
                    }
                },
                blockExplorers: {
                    etherscan: {
                        name: "Etherscan",
                        url: "https://sepolia.etherscan.io"
                    },
                    default: {
                        name: "Etherscan",
                        url: "https://sepolia.etherscan.io"
                    }
                },
                contracts: {
                    multicall3: {
                        address: "0xca11bde05977b3631167028862be2a173976ca11",
                        blockCreated: 751532
                    },
                    ensRegistry: {
                        address: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e"
                    },
                    ensUniversalResolver: {
                        address: "0x21B000Fd62a880b2125A61e36a284BB757b76025",
                        blockCreated: 3914906
                    }
                },
                testnet: !0
            })
        },
        33893: function(t, e, r) {
            "use strict";
            r.d(e, {
                V: function() {
                    return a
                }
            });
            var n = r(72932),
                i = r(59069),
                o = r(27481),
                s = r(13550);
            let a = {
                block: (0, i.G)({
                    format: t => ({
                        transactions: t.transactions ? .map(t => {
                            if ("string" == typeof t) return t;
                            let e = o.Tr(t);
                            return "0x7e" === e.typeHex && (e.isSystemTx = t.isSystemTx, e.mint = t.mint ? n.y_(t.mint) : void 0, e.sourceHash = t.sourceHash, e.type = "deposit"), e
                        }),
                        stateRoot: t.stateRoot
                    })
                }),
                transaction: (0, o.y_)({
                    format(t) {
                        let e = {};
                        return "0x7e" === t.type && (e.isSystemTx = t.isSystemTx, e.mint = t.mint ? (0, n.y_)(t.mint) : void 0, e.sourceHash = t.sourceHash, e.type = "deposit"), e
                    }
                }),
                transactionReceipt: (0, s.d)({
                    format: t => ({
                        l1GasPrice: t.l1GasPrice ? (0, n.y_)(t.l1GasPrice) : null,
                        l1GasUsed: t.l1GasUsed ? (0, n.y_)(t.l1GasUsed) : null,
                        l1Fee: t.l1Fee ? (0, n.y_)(t.l1Fee) : null,
                        l1FeeScalar: t.l1FeeScalar ? Number(t.l1FeeScalar) : null
                    })
                })
            }
        },
        49769: function(t, e, r) {
            "use strict";
            let n;
            r.d(e, {
                e: function() {
                    return u
                }
            });
            var i = r(19775);
            let o = 256,
                s = 256;

            function a(t = 11) {
                if (!n || s + t > 2 * o) {
                    n = "", s = 0;
                    for (let t = 0; t < o; t++) n += (256 + 256 * Math.random() | 0).toString(16).substring(1)
                }
                return n.substring(s, s++ + t)
            }

            function u(t) {
                let {
                    batch: e,
                    cacheTime: r = t.pollingInterval ? ? 4e3,
                    key: n = "base",
                    name: o = "Base Client",
                    pollingInterval: s = 4e3,
                    type: u = "base"
                } = t, c = t.chain, l = t.account ? (0, i.T)(t.account) : void 0, {
                    config: h,
                    request: f,
                    value: d
                } = t.transport({
                    chain: c,
                    pollingInterval: s
                }), p = {
                    account: l,
                    batch: e,
                    cacheTime: r,
                    chain: c,
                    key: n,
                    name: o,
                    pollingInterval: s,
                    request: f,
                    transport: { ...h,
                        ...d
                    },
                    type: u,
                    uid: a()
                };

                function y(t) {
                    return e => {
                        let r = e(t);
                        for (let t in p) delete r[t];
                        let n = { ...t,
                            ...r
                        };
                        return Object.assign(n, {
                            extend: y(n)
                        })
                    }
                }
                return Object.assign(p, {
                    extend: y(p)
                })
            }
        },
        75073: function(t, e, r) {
            "use strict";
            r.d(e, {
                K: function() {
                    return L
                }
            });
            var n = r(49769),
                i = r(12363),
                o = r(59455);
            async function s(t, {
                chain: e
            }) {
                let {
                    id: r,
                    name: n,
                    nativeCurrency: i,
                    rpcUrls: s,
                    blockExplorers: a
                } = e;
                await t.request({
                    method: "wallet_addEthereumChain",
                    params: [{
                        chainId: (0, o.eC)(r),
                        chainName: n,
                        nativeCurrency: i,
                        rpcUrls: s.default.http,
                        blockExplorerUrls: a ? Object.values(a).map(({
                            url: t
                        }) => t) : void 0
                    }]
                })
            }
            var a = r(23010),
                u = r(19775),
                c = r(65704),
                l = r(35586);

            function h({
                chain: t,
                currentChainId: e
            }) {
                if (!t) throw new l.Bk;
                if (e !== t.id) throw new l.Yl({
                    chain: t,
                    currentChainId: e
                })
            }
            var f = r(78125),
                d = r(63228),
                p = r(18856);

            function y(t, {
                docsPath: e,
                ...r
            }) {
                let n = (() => {
                    let e = (0, p.k)(t, r);
                    return e instanceof f.cj ? t : e
                })();
                return new d.mk(n, {
                    docsPath: e,
                    ...r
                })
            }
            var m = r(70878),
                b = r(92614),
                g = r(82645),
                w = r(54605),
                v = r(63198),
                E = r(9769);
            async function x(t, e) {
                let {
                    account: r = t.account,
                    chain: n = t.chain,
                    accessList: o,
                    data: s,
                    gas: a,
                    gasPrice: l,
                    maxFeePerGas: f,
                    maxPriorityFeePerGas: d,
                    nonce: p,
                    to: x,
                    value: S,
                    ...O
                } = e;
                if (!r) throw new c.o({
                    docsPath: "/docs/actions/wallet/sendTransaction"
                });
                let C = (0, u.T)(r);
                try {
                    let r;
                    if ((0, w.F)(e), null !== n && (r = await (0, g.s)(t, i.L, "getChainId")({}), h({
                            currentChainId: r,
                            chain: n
                        })), "local" === C.type) {
                        let e = await (0, g.s)(t, v.Z, "prepareTransactionRequest")({
                            account: C,
                            accessList: o,
                            chain: n,
                            data: s,
                            gas: a,
                            gasPrice: l,
                            maxFeePerGas: f,
                            maxPriorityFeePerGas: d,
                            nonce: p,
                            to: x,
                            value: S,
                            ...O
                        });
                        r || (r = await (0, g.s)(t, i.L, "getChainId")({}));
                        let u = n ? .serializers ? .transaction,
                            c = await C.signTransaction({ ...e,
                                chainId: r
                            }, {
                                serializer: u
                            });
                        return await (0, g.s)(t, E.p, "sendRawTransaction")({
                            serializedTransaction: c
                        })
                    }
                    let u = t.chain ? .formatters ? .transactionRequest ? .format,
                        c = (u || b.tG)({ ...(0, m.K)(O, {
                                format: u
                            }),
                            accessList: o,
                            data: s,
                            from: C.address,
                            gas: a,
                            gasPrice: l,
                            maxFeePerGas: f,
                            maxPriorityFeePerGas: d,
                            nonce: p,
                            to: x,
                            value: S
                        });
                    return await t.request({
                        method: "eth_sendTransaction",
                        params: [c]
                    })
                } catch (t) {
                    throw y(t, { ...e,
                        account: C,
                        chain: e.chain || void 0
                    })
                }
            }

            function S(t, {
                abi: e,
                args: r,
                bytecode: n,
                ...i
            }) {
                let o = (0, a.w)({
                    abi: e,
                    args: r,
                    bytecode: n
                });
                return x(t, { ...i,
                    data: o
                })
            }
            var O = r(31669);
            async function C(t) {
                return t.account ? .type === "local" ? [t.account.address] : (await t.request({
                    method: "eth_accounts"
                })).map(t => (0, O.x)(t))
            }
            async function _(t) {
                return await t.request({
                    method: "wallet_getPermissions"
                })
            }
            async function A(t) {
                return (await t.request({
                    method: "eth_requestAccounts"
                })).map(t => (0, O.K)(t))
            }
            async function P(t, e) {
                return t.request({
                    method: "wallet_requestPermissions",
                    params: [e]
                })
            }
            async function k(t, {
                account: e = t.account,
                message: r
            }) {
                if (!e) throw new c.o({
                    docsPath: "/docs/actions/wallet/signMessage"
                });
                let n = (0, u.T)(e);
                if ("local" === n.type) return n.signMessage({
                    message: r
                });
                let i = "string" == typeof r ? (0, o.$G)(r) : r.raw instanceof Uint8Array ? (0, o.NC)(r.raw) : r.raw;
                return t.request({
                    method: "personal_sign",
                    params: [i, n.address]
                })
            }
            async function D(t, e) {
                let {
                    account: r = t.account,
                    chain: n = t.chain,
                    ...s
                } = e;
                if (!r) throw new c.o({
                    docsPath: "/docs/actions/wallet/signTransaction"
                });
                let a = (0, u.T)(r);
                (0, w.F)({
                    account: a,
                    ...e
                });
                let l = await (0, g.s)(t, i.L, "getChainId")({});
                null !== n && h({
                    currentChainId: l,
                    chain: n
                });
                let f = n ? .formatters || t.chain ? .formatters,
                    d = f ? .transactionRequest ? .format || b.tG;
                return "local" === a.type ? a.signTransaction({ ...s,
                    chainId: l
                }, {
                    serializer: t.chain ? .serializers ? .transaction
                }) : await t.request({
                    method: "eth_signTransaction",
                    params: [{ ...d(s),
                        chainId: (0, o.eC)(l),
                        from: a.address
                    }]
                })
            }
            var I = r(93610),
                M = r(31853),
                B = r(15209);
            async function R(t, {
                account: e = t.account,
                domain: r,
                message: n,
                primaryType: i,
                types: o
            }) {
                if (!e) throw new c.o({
                    docsPath: "/docs/actions/wallet/signTypedData"
                });
                let s = (0, u.T)(e),
                    a = {
                        EIP712Domain: (0, B.cj)({
                            domain: r
                        }),
                        ...o
                    };
                if ((0, B.iC)({
                        domain: r,
                        message: n,
                        primaryType: i,
                        types: a
                    }), "local" === s.type) return s.signTypedData({
                    domain: r,
                    primaryType: i,
                    types: a,
                    message: n
                });
                let l = (0, M.P)({
                    domain: r ? ? {},
                    primaryType: i,
                    types: a,
                    message: n
                }, (t, e) => (0, I.v)(e) ? e.toLowerCase() : e);
                return t.request({
                    method: "eth_signTypedData_v4",
                    params: [s.address, l]
                })
            }
            async function T(t, {
                id: e
            }) {
                await t.request({
                    method: "wallet_switchEthereumChain",
                    params: [{
                        chainId: (0, o.eC)(e)
                    }]
                })
            }
            async function j(t, e) {
                return await t.request({
                    method: "wallet_watchAsset",
                    params: e
                })
            }
            var U = r(93182);
            async function N(t, {
                abi: e,
                address: r,
                args: n,
                dataSuffix: i,
                functionName: o,
                ...s
            }) {
                let a = (0, U.R)({
                    abi: e,
                    args: n,
                    functionName: o
                });
                return await (0, g.s)(t, x, "sendTransaction")({
                    data: `${a}${i?i.replace("0x",""):""}`,
                    to: r,
                    ...s
                })
            }

            function F(t) {
                return {
                    addChain: e => s(t, e),
                    deployContract: e => S(t, e),
                    getAddresses: () => C(t),
                    getChainId: () => (0, i.L)(t),
                    getPermissions: () => _(t),
                    prepareTransactionRequest: e => (0, v.Z)(t, e),
                    requestAddresses: () => A(t),
                    requestPermissions: e => P(t, e),
                    sendRawTransaction: e => (0, E.p)(t, e),
                    sendTransaction: e => x(t, e),
                    signMessage: e => k(t, e),
                    signTransaction: e => D(t, e),
                    signTypedData: e => R(t, e),
                    switchChain: e => T(t, e),
                    watchAsset: e => j(t, e),
                    writeContract: e => N(t, e)
                }
            }

            function L(t) {
                let {
                    key: e = "wallet",
                    name: r = "Wallet Client",
                    transport: i
                } = t;
                return (0, n.e)({ ...t,
                    key: e,
                    name: r,
                    transport: t => i({ ...t,
                        retryCount: 0
                    }),
                    type: "walletClient"
                }).extend(F)
            }
        },
        74138: function(t, e, r) {
            "use strict";
            r.d(e, {
                q: function() {
                    return i
                }
            });
            var n = r(11337);

            function i({
                key: t,
                name: e,
                request: r,
                retryCount: i = 3,
                retryDelay: o = 150,
                timeout: s,
                type: a
            }, u) {
                return {
                    config: {
                        key: t,
                        name: e,
                        request: r,
                        retryCount: i,
                        retryDelay: o,
                        timeout: s,
                        type: a
                    },
                    request: (0, n.n)(r, {
                        retryCount: i,
                        retryDelay: o
                    }),
                    value: u
                }
            }
        },
        93715: function(t, e, r) {
            "use strict";
            r.d(e, {
                P: function() {
                    return i
                }
            });
            var n = r(74138);

            function i(t, e = {}) {
                let {
                    key: r = "custom",
                    name: i = "Custom Provider",
                    retryDelay: o
                } = e;
                return ({
                    retryCount: s
                }) => (0, n.q)({
                    key: r,
                    name: i,
                    request: t.request.bind(t),
                    retryCount: e.retryCount ? ? s,
                    retryDelay: o,
                    type: "custom"
                })
            }
        },
        98158: function(t, e, r) {
            "use strict";
            r.d(e, {
                $o: function() {
                    return c
                },
                F8: function() {
                    return n
                },
                X$: function() {
                    return u
                },
                du: function() {
                    return s
                },
                k3: function() {
                    return o
                },
                nZ: function() {
                    return a
                }
            });
            let n = [{
                    inputs: [{
                        components: [{
                            name: "target",
                            type: "address"
                        }, {
                            name: "allowFailure",
                            type: "bool"
                        }, {
                            name: "callData",
                            type: "bytes"
                        }],
                        name: "calls",
                        type: "tuple[]"
                    }],
                    name: "aggregate3",
                    outputs: [{
                        components: [{
                            name: "success",
                            type: "bool"
                        }, {
                            name: "returnData",
                            type: "bytes"
                        }],
                        name: "returnData",
                        type: "tuple[]"
                    }],
                    stateMutability: "view",
                    type: "function"
                }],
                i = [{
                    inputs: [],
                    name: "ResolverNotFound",
                    type: "error"
                }, {
                    inputs: [],
                    name: "ResolverWildcardNotSupported",
                    type: "error"
                }],
                o = [...i, {
                    name: "resolve",
                    type: "function",
                    stateMutability: "view",
                    inputs: [{
                        name: "name",
                        type: "bytes"
                    }, {
                        name: "data",
                        type: "bytes"
                    }],
                    outputs: [{
                        name: "",
                        type: "bytes"
                    }, {
                        name: "address",
                        type: "address"
                    }]
                }],
                s = [...i, {
                    name: "reverse",
                    type: "function",
                    stateMutability: "view",
                    inputs: [{
                        type: "bytes",
                        name: "reverseName"
                    }],
                    outputs: [{
                        type: "string",
                        name: "resolvedName"
                    }, {
                        type: "address",
                        name: "resolvedAddress"
                    }, {
                        type: "address",
                        name: "reverseResolver"
                    }, {
                        type: "address",
                        name: "resolver"
                    }]
                }],
                a = [{
                    name: "text",
                    type: "function",
                    stateMutability: "view",
                    inputs: [{
                        name: "name",
                        type: "bytes32"
                    }, {
                        name: "key",
                        type: "string"
                    }],
                    outputs: [{
                        name: "",
                        type: "string"
                    }]
                }],
                u = [{
                    name: "addr",
                    type: "function",
                    stateMutability: "view",
                    inputs: [{
                        name: "name",
                        type: "bytes32"
                    }],
                    outputs: [{
                        name: "",
                        type: "address"
                    }]
                }, {
                    name: "addr",
                    type: "function",
                    stateMutability: "view",
                    inputs: [{
                        name: "name",
                        type: "bytes32"
                    }, {
                        name: "coinType",
                        type: "uint256"
                    }],
                    outputs: [{
                        name: "",
                        type: "bytes"
                    }]
                }],
                c = [{
                    inputs: [{
                        internalType: "address",
                        name: "_signer",
                        type: "address"
                    }, {
                        internalType: "bytes32",
                        name: "_hash",
                        type: "bytes32"
                    }, {
                        internalType: "bytes",
                        name: "_signature",
                        type: "bytes"
                    }],
                    stateMutability: "nonpayable",
                    type: "constructor"
                }]
        },
        55246: function(t, e, r) {
            "use strict";
            r.d(e, {
                $: function() {
                    return n
                },
                Up: function() {
                    return i
                },
                hZ: function() {
                    return o
                }
            });
            let n = {
                    1: "An `assert` condition failed.",
                    17: "Arithmic operation resulted in underflow or overflow.",
                    18: "Division or modulo by zero (e.g. `5 / 0` or `23 % 0`).",
                    33: "Attempted to convert to an invalid type.",
                    34: "Attempted to access a storage byte array that is incorrectly encoded.",
                    49: "Performed `.pop()` on an empty array",
                    50: "Array index is out of bounds.",
                    65: "Allocated too much memory or created an array which is too large.",
                    81: "Attempted to call a zero-initialized variable of internal function type."
                },
                i = {
                    inputs: [{
                        name: "message",
                        type: "string"
                    }],
                    name: "Error",
                    type: "error"
                },
                o = {
                    inputs: [{
                        name: "reason",
                        type: "uint256"
                    }],
                    name: "Panic",
                    type: "error"
                }
        },
        98173: function(t, e, r) {
            "use strict";
            r.d(e, {
                Bd: function() {
                    return o
                },
                Zn: function() {
                    return i
                },
                ez: function() {
                    return n
                }
            });
            let n = {
                    gwei: 9,
                    wei: 18
                },
                i = {
                    ether: -9,
                    wei: 9
                },
                o = {
                    ether: -18,
                    gwei: -9
                }
        },
        65531: function(t, e, r) {
            "use strict";
            r.d(e, {
                CI: function() {
                    return O
                },
                FM: function() {
                    return p
                },
                Gy: function() {
                    return x
                },
                KY: function() {
                    return v
                },
                M4: function() {
                    return h
                },
                MX: function() {
                    return g
                },
                S4: function() {
                    return w
                },
                SM: function() {
                    return E
                },
                cO: function() {
                    return a
                },
                dh: function() {
                    return S
                },
                fM: function() {
                    return s
                },
                fs: function() {
                    return f
                },
                gr: function() {
                    return l
                },
                hn: function() {
                    return C
                },
                lC: function() {
                    return y
                },
                mv: function() {
                    return m
                },
                wM: function() {
                    return _
                },
                wb: function() {
                    return c
                },
                xB: function() {
                    return u
                },
                xL: function() {
                    return b
                },
                yP: function() {
                    return d
                }
            });
            var n = r(7275),
                i = r(20556),
                o = r(75921);
            class s extends o.G {
                constructor({
                    docsPath: t
                }) {
                    super("A constructor was not found on the ABI.\nMake sure you are using the correct ABI and that the constructor exists on it.", {
                        docsPath: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiConstructorNotFoundError"
                    })
                }
            }
            class a extends o.G {
                constructor({
                    docsPath: t
                }) {
                    super("Constructor arguments were provided (`args`), but a constructor parameters (`inputs`) were not found on the ABI.\nMake sure you are using the correct ABI, and that the `inputs` attribute on the constructor exists.", {
                        docsPath: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiConstructorParamsNotFoundError"
                    })
                }
            }
            class u extends o.G {
                constructor({
                    data: t,
                    params: e,
                    size: r
                }) {
                    super(`Data size of ${r} bytes is too small for given parameters.`, {
                        metaMessages: [`Params: (${(0,n.h)(e,{includeName:!0})})`, `Data:   ${t} (${r} bytes)`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiDecodingDataSizeTooSmallError"
                    }), Object.defineProperty(this, "data", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "params", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "size", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.data = t, this.params = e, this.size = r
                }
            }
            class c extends o.G {
                constructor() {
                    super('Cannot decode zero data ("0x") with ABI parameters.'), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiDecodingZeroDataError"
                    })
                }
            }
            class l extends o.G {
                constructor({
                    expectedLength: t,
                    givenLength: e,
                    type: r
                }) {
                    super(`ABI encoding array length mismatch for type ${r}.
Expected length: ${t}
Given length: ${e}`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiEncodingArrayLengthMismatchError"
                    })
                }
            }
            class h extends o.G {
                constructor({
                    expectedSize: t,
                    value: e
                }) {
                    super(`Size of bytes "${e}" (bytes${(0,i.d)(e)}) does not match expected size (bytes${t}).`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiEncodingBytesSizeMismatchError"
                    })
                }
            }
            class f extends o.G {
                constructor({
                    expectedLength: t,
                    givenLength: e
                }) {
                    super(`ABI encoding params/values length mismatch.
Expected length (params): ${t}
Given length (values): ${e}`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiEncodingLengthMismatchError"
                    })
                }
            }
            class d extends o.G {
                constructor(t, {
                    docsPath: e
                }) {
                    super(`Encoded error signature "${t}" not found on ABI.
Make sure you are using the correct ABI and that the error exists on it.
You can look up the decoded signature here: https://openchain.xyz/signatures?query=${t}.`, {
                        docsPath: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiErrorSignatureNotFoundError"
                    }), Object.defineProperty(this, "signature", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.signature = t
                }
            }
            class p extends o.G {
                constructor({
                    docsPath: t
                }) {
                    super("Cannot extract event signature from empty topics.", {
                        docsPath: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiEventSignatureEmptyTopicsError"
                    })
                }
            }
            class y extends o.G {
                constructor(t, {
                    docsPath: e
                }) {
                    super(`Encoded event signature "${t}" not found on ABI.
Make sure you are using the correct ABI and that the event exists on it.
You can look up the signature here: https://openchain.xyz/signatures?query=${t}.`, {
                        docsPath: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiEventSignatureNotFoundError"
                    })
                }
            }
            class m extends o.G {
                constructor(t, {
                    docsPath: e
                } = {}) {
                    super(`Event ${t?`"${t}" `:""}not found on ABI.
Make sure you are using the correct ABI and that the event exists on it.`, {
                        docsPath: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiEventNotFoundError"
                    })
                }
            }
            class b extends o.G {
                constructor(t, {
                    docsPath: e
                } = {}) {
                    super(`Function ${t?`"${t}" `:""}not found on ABI.
Make sure you are using the correct ABI and that the function exists on it.`, {
                        docsPath: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiFunctionNotFoundError"
                    })
                }
            }
            class g extends o.G {
                constructor(t, {
                    docsPath: e
                }) {
                    super(`Function "${t}" does not contain any \`outputs\` on ABI.
Cannot decode function result without knowing what the parameter types are.
Make sure you are using the correct ABI and that the function exists on it.`, {
                        docsPath: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiFunctionOutputsNotFoundError"
                    })
                }
            }
            class w extends o.G {
                constructor(t, e) {
                    super("Found ambiguous types in overloaded ABI items.", {
                        metaMessages: [`\`${t.type}\` in \`${(0,n.t)(t.abiItem)}\`, and`, `\`${e.type}\` in \`${(0,n.t)(e.abiItem)}\``, "", "These types encode differently and cannot be distinguished at runtime.", "Remove one of the ambiguous items in the ABI."]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiItemAmbiguityError"
                    })
                }
            }
            class v extends o.G {
                constructor({
                    expectedSize: t,
                    givenSize: e
                }) {
                    super(`Expected bytes${t}, got bytes${e}.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "BytesSizeMismatchError"
                    })
                }
            }
            class E extends o.G {
                constructor({
                    abiItem: t,
                    data: e,
                    params: r,
                    size: i
                }) {
                    super(`Data size of ${i} bytes is too small for non-indexed event parameters.`, {
                        metaMessages: [`Params: (${(0,n.h)(r,{includeName:!0})})`, `Data:   ${e} (${i} bytes)`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "DecodeLogDataMismatch"
                    }), Object.defineProperty(this, "abiItem", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "data", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "params", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "size", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.abiItem = t, this.data = e, this.params = r, this.size = i
                }
            }
            class x extends o.G {
                constructor({
                    abiItem: t,
                    param: e
                }) {
                    super(`Expected a topic for indexed event parameter${e.name?` "${e.name}"`:""} on event "${(0,n.t)(t,{includeName:!0})}".`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "DecodeLogTopicsMismatch"
                    }), Object.defineProperty(this, "abiItem", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.abiItem = t
                }
            }
            class S extends o.G {
                constructor(t, {
                    docsPath: e
                }) {
                    super(`Type "${t}" is not a valid encoding type.
Please provide a valid ABI type.`, {
                        docsPath: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidAbiEncodingType"
                    })
                }
            }
            class O extends o.G {
                constructor(t, {
                    docsPath: e
                }) {
                    super(`Type "${t}" is not a valid decoding type.
Please provide a valid ABI type.`, {
                        docsPath: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidAbiDecodingType"
                    })
                }
            }
            class C extends o.G {
                constructor(t) {
                    super(`Value "${t}" is not a valid array.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidArrayError"
                    })
                }
            }
            class _ extends o.G {
                constructor(t) {
                    super(`"${t}" is not a valid definition type.
Valid types: "function", "event", "error"`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidDefinitionTypeError"
                    })
                }
            }
        },
        65704: function(t, e, r) {
            "use strict";
            r.d(e, {
                o: function() {
                    return i
                }
            });
            var n = r(75921);
            class i extends n.G {
                constructor({
                    docsPath: t
                } = {}) {
                    super("Could not find an Account to execute with this Action.\nPlease provide an Account with the `account` argument on the Action, or by supplying an `account` to the WalletClient.", {
                        docsPath: t,
                        docsSlug: "account"
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AccountNotFoundError"
                    })
                }
            }
        },
        10052: function(t, e, r) {
            "use strict";
            r.d(e, {
                b: function() {
                    return i
                }
            });
            var n = r(75921);
            class i extends n.G {
                constructor({
                    address: t
                }) {
                    super(`Address "${t}" is invalid.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidAddressError"
                    })
                }
            }
        },
        75921: function(t, e, r) {
            "use strict";
            r.d(e, {
                G: function() {
                    return i
                }
            });
            var n = r(94791);
            class i extends Error {
                constructor(t, e = {}) {
                    super(), Object.defineProperty(this, "details", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "docsPath", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "metaMessages", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "shortMessage", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ViemError"
                    }), Object.defineProperty(this, "version", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: (0, n.bo)()
                    });
                    let r = e.cause instanceof i ? e.cause.details : e.cause ? .message ? e.cause.message : e.details,
                        o = e.cause instanceof i && e.cause.docsPath || e.docsPath;
                    this.message = [t || "An error occurred.", "", ...e.metaMessages ? [...e.metaMessages, ""] : [], ...o ? [`Docs: https://viem.sh${o}.html${e.docsSlug?`#${e.docsSlug}`:""}`] : [], ...r ? [`Details: ${r}`] : [], `Version: ${this.version}`].join("\n"), e.cause && (this.cause = e.cause), this.details = r, this.docsPath = o, this.metaMessages = e.metaMessages, this.shortMessage = t
                }
                walk(t) {
                    return o(this, t)
                }
            }

            function o(t, e) {
                return e ? .(t) ? t : t && "object" == typeof t && "cause" in t ? o(t.cause, e) : e ? null : t
            }
        },
        12197: function(t, e, r) {
            "use strict";
            r.d(e, {
                f: function() {
                    return i
                }
            });
            var n = r(75921);
            class i extends n.G {
                constructor({
                    blockHash: t,
                    blockNumber: e
                }) {
                    let r = "Block";
                    t && (r = `Block at hash "${t}"`), e && (r = `Block at number "${e}"`), super(`${r} could not be found.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "BlockNotFoundError"
                    })
                }
            }
        },
        35586: function(t, e, r) {
            "use strict";
            r.d(e, {
                Bk: function() {
                    return s
                },
                Yl: function() {
                    return o
                },
                mm: function() {
                    return i
                },
                pZ: function() {
                    return a
                }
            });
            var n = r(75921);
            class i extends n.G {
                constructor({
                    blockNumber: t,
                    chain: e,
                    contract: r
                }) {
                    super(`Chain "${e.name}" does not support contract "${r.name}".`, {
                        metaMessages: ["This could be due to any of the following:", ...t && r.blockCreated && r.blockCreated > t ? [`- The contract "${r.name}" was not deployed until block ${r.blockCreated} (current block ${t}).`] : [`- The chain does not have the contract "${r.name}" configured.`]]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ChainDoesNotSupportContract"
                    })
                }
            }
            class o extends n.G {
                constructor({
                    chain: t,
                    currentChainId: e
                }) {
                    super(`The current chain of the wallet (id: ${e}) does not match the target chain for the transaction (id: ${t.id} – ${t.name}).`, {
                        metaMessages: [`Current Chain ID:  ${e}`, `Expected Chain ID: ${t.id} – ${t.name}`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ChainMismatchError"
                    })
                }
            }
            class s extends n.G {
                constructor() {
                    super("No chain was provided to the request.\nPlease provide a chain with the `chain` argument on the Action, or by supplying a `chain` to WalletClient."), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ChainNotFoundError"
                    })
                }
            }
            class a extends n.G {
                constructor() {
                    super("No chain was provided to the Client."), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ClientChainNotConfiguredError"
                    })
                }
            }
        },
        20010: function(t, e, r) {
            "use strict";
            r.d(e, {
                cg: function() {
                    return m
                },
                uq: function() {
                    return b
                },
                Lu: function() {
                    return g
                },
                Dk: function() {
                    return w
                },
                VQ: function() {
                    return v
                }
            });
            var n = r(19775),
                i = r(55246),
                o = r(33591),
                s = r(7275),
                a = r(31853);

            function u({
                abiItem: t,
                args: e,
                includeFunctionName: r = !0,
                includeName: n = !1
            }) {
                if ("name" in t && "inputs" in t && t.inputs) return `${r?t.name:""}(${t.inputs.map((t,r)=>`${n&&t.name?`${t.name}: `:""}${"object"==typeof e[r]?(0,a.P)(e[r]):e[r]}`).join(", ")})`
            }
            var c = r(64043),
                l = r(71282),
                h = r(29707),
                f = r(65531),
                d = r(75921),
                p = r(63228),
                y = r(94791);
            class m extends d.G {
                constructor(t, {
                    account: e,
                    docsPath: r,
                    chain: i,
                    data: o,
                    gas: s,
                    gasPrice: a,
                    maxFeePerGas: u,
                    maxPriorityFeePerGas: c,
                    nonce: f,
                    to: d,
                    value: y
                }) {
                    super(t.shortMessage, {
                        cause: t,
                        docsPath: r,
                        metaMessages: [...t.metaMessages ? [...t.metaMessages, " "] : [], "Raw Call Arguments:", (0, p.xr)({
                            from: (e ? (0, n.T)(e) : void 0) ? .address,
                            to: d,
                            value: void 0 !== y && `${(0,l.d)(y)} ${i?.nativeCurrency?.symbol||"ETH"}`,
                            data: o,
                            gas: s,
                            gasPrice: void 0 !== a && `${(0,h.o)(a)} gwei`,
                            maxFeePerGas: void 0 !== u && `${(0,h.o)(u)} gwei`,
                            maxPriorityFeePerGas: void 0 !== c && `${(0,h.o)(c)} gwei`,
                            nonce: f
                        })].filter(Boolean)
                    }), Object.defineProperty(this, "cause", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "CallExecutionError"
                    }), this.cause = t
                }
            }
            class b extends d.G {
                constructor(t, {
                    abi: e,
                    args: r,
                    contractAddress: n,
                    docsPath: i,
                    functionName: o,
                    sender: a
                }) {
                    let l = (0, c.mE)({
                            abi: e,
                            args: r,
                            name: o
                        }),
                        h = l ? u({
                            abiItem: l,
                            args: r,
                            includeFunctionName: !1,
                            includeName: !1
                        }) : void 0;
                    super(t.shortMessage || `An unknown error occurred while executing the contract function "${o}".`, {
                        cause: t,
                        docsPath: i,
                        metaMessages: [...t.metaMessages ? [...t.metaMessages, " "] : [], "Contract Call:", (0, p.xr)({
                            address: n && (0, y.CR)(n),
                            function: l ? (0, s.t)(l, {
                                includeName: !0
                            }) : void 0,
                            args: h && "()" !== h && `${[...Array(o?.length??0).keys()].map(()=>" ").join("")}${h}`,
                            sender: a
                        })].filter(Boolean)
                    }), Object.defineProperty(this, "abi", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "args", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "cause", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "contractAddress", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "formattedArgs", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "functionName", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "sender", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ContractFunctionExecutionError"
                    }), this.abi = e, this.args = r, this.cause = t, this.contractAddress = n, this.functionName = o, this.sender = a
                }
            }
            class g extends d.G {
                constructor({
                    abi: t,
                    data: e,
                    functionName: r,
                    message: n
                }) {
                    let a, c, l, h, d;
                    if (e && "0x" !== e) try {
                        let {
                            abiItem: r,
                            errorName: n,
                            args: a
                        } = d = (0, o.p)({
                            abi: t,
                            data: e
                        });
                        if ("Error" === n) l = a[0];
                        else if ("Panic" === n) {
                            let [t] = a;
                            l = i.$[t]
                        } else {
                            let t = r ? (0, s.t)(r, {
                                    includeName: !0
                                }) : void 0,
                                e = r && a ? u({
                                    abiItem: r,
                                    args: a,
                                    includeFunctionName: !1,
                                    includeName: !1
                                }) : void 0;
                            c = [t ? `Error: ${t}` : "", e && "()" !== e ? `       ${[...Array(n?.length??0).keys()].map(()=>" ").join("")}${e}` : ""]
                        }
                    } catch (t) {
                        a = t
                    } else n && (l = n);
                    a instanceof f.yP && (h = a.signature, c = [`Unable to decode signature "${h}" as it was not found on the provided ABI.`, "Make sure you are using the correct ABI and that the error exists on it.", `You can look up the decoded signature here: https://openchain.xyz/signatures?query=${h}.`]), super(l && "execution reverted" !== l || h ? [`The contract function "${r}" reverted with the following ${h?"signature":"reason"}:`, l || h].join("\n") : `The contract function "${r}" reverted.`, {
                        cause: a,
                        metaMessages: c
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ContractFunctionRevertedError"
                    }), Object.defineProperty(this, "data", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "reason", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "signature", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.data = d, this.reason = l, this.signature = h
                }
            }
            class w extends d.G {
                constructor({
                    functionName: t
                }) {
                    super(`The contract function "${t}" returned no data ("0x").`, {
                        metaMessages: ["This could be due to any of the following:", `  - The contract does not have the function "${t}",`, "  - The parameters passed to the contract function may be invalid, or", "  - The address is not a contract."]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ContractFunctionZeroDataError"
                    })
                }
            }
            class v extends d.G {
                constructor({
                    data: t,
                    message: e
                }) {
                    super(e || ""), Object.defineProperty(this, "code", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 3
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "RawContractError"
                    }), Object.defineProperty(this, "data", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.data = t
                }
            }
        },
        47116: function(t, e, r) {
            "use strict";
            r.d(e, {
                $: function() {
                    return o
                },
                m: function() {
                    return i
                }
            });
            var n = r(75921);
            class i extends n.G {
                constructor({
                    offset: t,
                    position: e,
                    size: r
                }) {
                    super(`Slice ${"start"===e?"starting":"ending"} at offset "${t}" is out-of-bounds (size: ${r}).`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "SliceOffsetOutOfBoundsError"
                    })
                }
            }
            class o extends n.G {
                constructor({
                    size: t,
                    targetSize: e,
                    type: r
                }) {
                    super(`${r.charAt(0).toUpperCase()}${r.slice(1).toLowerCase()} size (${t}) exceeds padding size (${e}).`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "SizeExceedsPaddingSizeError"
                    })
                }
            }
        },
        63152: function(t, e, r) {
            "use strict";
            r.d(e, {
                Cd: function() {
                    return o
                },
                J5: function() {
                    return i
                },
                M6: function() {
                    return s
                }
            });
            var n = r(75921);
            class i extends n.G {
                constructor({
                    max: t,
                    min: e,
                    signed: r,
                    size: n,
                    value: i
                }) {
                    super(`Number "${i}" is not in safe ${n?`${8*n}-bit ${r?"signed":"unsigned"} `:""}integer range ${t?`(${e} to ${t})`:`(above ${e})`}`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "IntegerOutOfRangeError"
                    })
                }
            }
            class o extends n.G {
                constructor(t) {
                    super(`Hex value "${t}" is not a valid boolean. The hex value must be "0x0" (false) or "0x1" (true).`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidHexBooleanError"
                    })
                }
            }
            class s extends n.G {
                constructor({
                    givenSize: t,
                    maxSize: e
                }) {
                    super(`Size cannot exceed ${e} bytes. Given size: ${t} bytes.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "SizeOverflowError"
                    })
                }
            }
        },
        4496: function(t, e, r) {
            "use strict";
            r.d(e, {
                Fz: function() {
                    return o
                },
                e5: function() {
                    return s
                },
                ld: function() {
                    return a
                }
            });
            var n = r(29707),
                i = r(75921);
            class o extends i.G {
                constructor() {
                    super("`baseFeeMultiplier` must be greater than 1."), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "BaseFeeScalarError"
                    })
                }
            }
            class s extends i.G {
                constructor() {
                    super("Chain does not support EIP-1559 fees."), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "Eip1559FeesNotSupportedError"
                    })
                }
            }
            class a extends i.G {
                constructor({
                    maxPriorityFeePerGas: t
                }) {
                    super(`\`maxFeePerGas\` cannot be less than the \`maxPriorityFeePerGas\` (${(0,n.o)(t)} gwei).`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "MaxFeePerGasTooLowError"
                    })
                }
            }
        },
        78125: function(t, e, r) {
            "use strict";
            r.d(e, {
                C_: function() {
                    return h
                },
                G$: function() {
                    return a
                },
                Hh: function() {
                    return s
                },
                M_: function() {
                    return o
                },
                WF: function() {
                    return f
                },
                ZI: function() {
                    return u
                },
                cj: function() {
                    return m
                },
                cs: function() {
                    return y
                },
                dR: function() {
                    return d
                },
                pZ: function() {
                    return p
                },
                se: function() {
                    return l
                },
                vU: function() {
                    return c
                }
            });
            var n = r(29707),
                i = r(75921);
            class o extends i.G {
                constructor({
                    cause: t,
                    message: e
                } = {}) {
                    let r = e ? .replace("execution reverted: ", "") ? .replace("execution reverted", "");
                    super(`Execution reverted ${r?`with reason: ${r}`:"for an unknown reason"}.`, {
                        cause: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ExecutionRevertedError"
                    })
                }
            }
            Object.defineProperty(o, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: 3
            }), Object.defineProperty(o, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /execution reverted/
            });
            class s extends i.G {
                constructor({
                    cause: t,
                    maxFeePerGas: e
                } = {}) {
                    super(`The fee cap (\`maxFeePerGas\`${e?` = ${(0,n.o)(e)} gwei`:""}) cannot be higher than the maximum allowed value (2^256-1).`, {
                        cause: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "FeeCapTooHigh"
                    })
                }
            }
            Object.defineProperty(s, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /max fee per gas higher than 2\^256-1|fee cap higher than 2\^256-1/
            });
            class a extends i.G {
                constructor({
                    cause: t,
                    maxFeePerGas: e
                } = {}) {
                    super(`The fee cap (\`maxFeePerGas\`${e?` = ${(0,n.o)(e)}`:""} gwei) cannot be lower than the block base fee.`, {
                        cause: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "FeeCapTooLow"
                    })
                }
            }
            Object.defineProperty(a, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /max fee per gas less than block base fee|fee cap less than block base fee|transaction is outdated/
            });
            class u extends i.G {
                constructor({
                    cause: t,
                    nonce: e
                } = {}) {
                    super(`Nonce provided for the transaction ${e?`(${e}) `:""}is higher than the next one expected.`, {
                        cause: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "NonceTooHighError"
                    })
                }
            }
            Object.defineProperty(u, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /nonce too high/
            });
            class c extends i.G {
                constructor({
                    cause: t,
                    nonce: e
                } = {}) {
                    super(`Nonce provided for the transaction ${e?`(${e}) `:""}is lower than the current nonce of the account.
Try increasing the nonce or find the latest nonce with \`getTransactionCount\`.`, {
                        cause: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "NonceTooLowError"
                    })
                }
            }
            Object.defineProperty(c, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /nonce too low|transaction already imported|already known/
            });
            class l extends i.G {
                constructor({
                    cause: t,
                    nonce: e
                } = {}) {
                    super(`Nonce provided for the transaction ${e?`(${e}) `:""}exceeds the maximum allowed nonce.`, {
                        cause: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "NonceMaxValueError"
                    })
                }
            }
            Object.defineProperty(l, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /nonce has max value/
            });
            class h extends i.G {
                constructor({
                    cause: t
                } = {}) {
                    super("The total cost (gas * gas fee + value) of executing this transaction exceeds the balance of the account.", {
                        cause: t,
                        metaMessages: ["This error could arise when the account does not have enough funds to:", " - pay for the total gas fee,", " - pay for the value to send.", " ", "The cost of the transaction is calculated as `gas * gas fee + value`, where:", " - `gas` is the amount of gas needed for transaction to execute,", " - `gas fee` is the gas fee,", " - `value` is the amount of ether to send to the recipient."]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InsufficientFundsError"
                    })
                }
            }
            Object.defineProperty(h, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /insufficient funds/
            });
            class f extends i.G {
                constructor({
                    cause: t,
                    gas: e
                } = {}) {
                    super(`The amount of gas ${e?`(${e}) `:""}provided for the transaction exceeds the limit allowed for the block.`, {
                        cause: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "IntrinsicGasTooHighError"
                    })
                }
            }
            Object.defineProperty(f, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /intrinsic gas too high|gas limit reached/
            });
            class d extends i.G {
                constructor({
                    cause: t,
                    gas: e
                } = {}) {
                    super(`The amount of gas ${e?`(${e}) `:""}provided for the transaction is too low.`, {
                        cause: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "IntrinsicGasTooLowError"
                    })
                }
            }
            Object.defineProperty(d, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /intrinsic gas too low/
            });
            class p extends i.G {
                constructor({
                    cause: t
                }) {
                    super("The transaction type is not supported for this chain.", {
                        cause: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "TransactionTypeNotSupportedError"
                    })
                }
            }
            Object.defineProperty(p, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /transaction type not valid/
            });
            class y extends i.G {
                constructor({
                    cause: t,
                    maxPriorityFeePerGas: e,
                    maxFeePerGas: r
                } = {}) {
                    super(`The provided tip (\`maxPriorityFeePerGas\`${e?` = ${(0,n.o)(e)} gwei`:""}) cannot be higher than the fee cap (\`maxFeePerGas\`${r?` = ${(0,n.o)(r)} gwei`:""}).`, {
                        cause: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "TipAboveFeeCapError"
                    })
                }
            }
            Object.defineProperty(y, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /max priority fee per gas higher than max fee per gas|tip higher than fee cap/
            });
            class m extends i.G {
                constructor({
                    cause: t
                }) {
                    super(`An error occurred while executing: ${t?.shortMessage}`, {
                        cause: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "UnknownNodeError"
                    })
                }
            }
        },
        17057: function(t, e, r) {
            "use strict";
            r.d(e, {
                Gg: function() {
                    return s
                },
                W5: function() {
                    return c
                },
                bs: function() {
                    return u
                },
                c9: function() {
                    return a
                }
            });
            var n = r(31853),
                i = r(75921),
                o = r(94791);
            class s extends i.G {
                constructor({
                    body: t,
                    details: e,
                    headers: r,
                    status: i,
                    url: s
                }) {
                    super("HTTP request failed.", {
                        details: e,
                        metaMessages: [i && `Status: ${i}`, `URL: ${(0,o.Gr)(s)}`, t && `Request body: ${(0,n.P)(t)}`].filter(Boolean)
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "HttpRequestError"
                    }), Object.defineProperty(this, "body", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "headers", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "status", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "url", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.body = t, this.headers = r, this.status = i, this.url = s
                }
            }
            class a extends i.G {
                constructor({
                    body: t,
                    details: e,
                    url: r
                }) {
                    super("WebSocket request failed.", {
                        details: e,
                        metaMessages: [`URL: ${(0,o.Gr)(r)}`, `Request body: ${(0,n.P)(t)}`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "WebSocketRequestError"
                    })
                }
            }
            class u extends i.G {
                constructor({
                    body: t,
                    error: e,
                    url: r
                }) {
                    super("RPC Request failed.", {
                        cause: e,
                        details: e.message,
                        metaMessages: [`URL: ${(0,o.Gr)(r)}`, `Request body: ${(0,n.P)(t)}`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "RpcRequestError"
                    }), Object.defineProperty(this, "code", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.code = e.code
                }
            }
            class c extends i.G {
                constructor({
                    body: t,
                    url: e
                }) {
                    super("The request took too long to respond.", {
                        details: "The request timed out.",
                        metaMessages: [`URL: ${(0,o.Gr)(e)}`, `Request body: ${(0,n.P)(t)}`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "TimeoutError"
                    })
                }
            }
        },
        77014: function(t, e, r) {
            "use strict";
            r.d(e, {
                B: function() {
                    return c
                },
                GD: function() {
                    return w
                },
                I0: function() {
                    return O
                },
                KB: function() {
                    return m
                },
                LX: function() {
                    return l
                },
                Og: function() {
                    return p
                },
                PE: function() {
                    return E
                },
                Pv: function() {
                    return g
                },
                Ts: function() {
                    return x
                },
                XS: function() {
                    return f
                },
                ab: function() {
                    return v
                },
                gS: function() {
                    return b
                },
                ir: function() {
                    return _
                },
                nY: function() {
                    return h
                },
                pT: function() {
                    return y
                },
                s7: function() {
                    return u
                },
                u5: function() {
                    return S
                },
                x3: function() {
                    return C
                },
                yR: function() {
                    return d
                }
            });
            var n = r(75921),
                i = r(17057);
            let o = -1;
            class s extends n.G {
                constructor(t, {
                    code: e,
                    docsPath: r,
                    metaMessages: n,
                    shortMessage: s
                }) {
                    super(s, {
                        cause: t,
                        docsPath: r,
                        metaMessages: n || t ? .metaMessages
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "RpcError"
                    }), Object.defineProperty(this, "code", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.name = t.name, this.code = t instanceof i.bs ? t.code : e ? ? o
                }
            }
            class a extends s {
                constructor(t, e) {
                    super(t, e), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ProviderRpcError"
                    }), Object.defineProperty(this, "data", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.data = e.data
                }
            }
            class u extends s {
                constructor(t) {
                    super(t, {
                        code: u.code,
                        shortMessage: "Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ParseRpcError"
                    })
                }
            }
            Object.defineProperty(u, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32700
            });
            class c extends s {
                constructor(t) {
                    super(t, {
                        code: c.code,
                        shortMessage: "JSON is not a valid request object."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidRequestRpcError"
                    })
                }
            }
            Object.defineProperty(c, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32600
            });
            class l extends s {
                constructor(t) {
                    super(t, {
                        code: l.code,
                        shortMessage: "The method does not exist / is not available."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "MethodNotFoundRpcError"
                    })
                }
            }
            Object.defineProperty(l, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32601
            });
            class h extends s {
                constructor(t) {
                    super(t, {
                        code: h.code,
                        shortMessage: "Invalid parameters were provided to the RPC method.\nDouble check you have provided the correct parameters."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidParamsRpcError"
                    })
                }
            }
            Object.defineProperty(h, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32602
            });
            class f extends s {
                constructor(t) {
                    super(t, {
                        code: f.code,
                        shortMessage: "An internal error was received."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InternalRpcError"
                    })
                }
            }
            Object.defineProperty(f, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32603
            });
            class d extends s {
                constructor(t) {
                    super(t, {
                        code: d.code,
                        shortMessage: "Missing or invalid parameters.\nDouble check you have provided the correct parameters."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidInputRpcError"
                    })
                }
            }
            Object.defineProperty(d, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32e3
            });
            class p extends s {
                constructor(t) {
                    super(t, {
                        code: p.code,
                        shortMessage: "Requested resource not found."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ResourceNotFoundRpcError"
                    })
                }
            }
            Object.defineProperty(p, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32001
            });
            class y extends s {
                constructor(t) {
                    super(t, {
                        code: y.code,
                        shortMessage: "Requested resource not available."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ResourceUnavailableRpcError"
                    })
                }
            }
            Object.defineProperty(y, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32002
            });
            class m extends s {
                constructor(t) {
                    super(t, {
                        code: m.code,
                        shortMessage: "Transaction creation failed."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "TransactionRejectedRpcError"
                    })
                }
            }
            Object.defineProperty(m, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32003
            });
            class b extends s {
                constructor(t) {
                    super(t, {
                        code: b.code,
                        shortMessage: "Method is not implemented."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "MethodNotSupportedRpcError"
                    })
                }
            }
            Object.defineProperty(b, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32004
            });
            class g extends s {
                constructor(t) {
                    super(t, {
                        code: g.code,
                        shortMessage: "Request exceeds defined limit."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "LimitExceededRpcError"
                    })
                }
            }
            Object.defineProperty(g, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32005
            });
            class w extends s {
                constructor(t) {
                    super(t, {
                        code: w.code,
                        shortMessage: "Version of JSON-RPC protocol is not supported."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "JsonRpcVersionUnsupportedError"
                    })
                }
            }
            Object.defineProperty(w, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32006
            });
            class v extends a {
                constructor(t) {
                    super(t, {
                        code: v.code,
                        shortMessage: "User rejected the request."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "UserRejectedRequestError"
                    })
                }
            }
            Object.defineProperty(v, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: 4001
            });
            class E extends a {
                constructor(t) {
                    super(t, {
                        code: E.code,
                        shortMessage: "The requested method and/or account has not been authorized by the user."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "UnauthorizedProviderError"
                    })
                }
            }
            Object.defineProperty(E, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: 4100
            });
            class x extends a {
                constructor(t) {
                    super(t, {
                        code: x.code,
                        shortMessage: "The Provider does not support the requested method."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "UnsupportedProviderMethodError"
                    })
                }
            }
            Object.defineProperty(x, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: 4200
            });
            class S extends a {
                constructor(t) {
                    super(t, {
                        code: S.code,
                        shortMessage: "The Provider is disconnected from all chains."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ProviderDisconnectedError"
                    })
                }
            }
            Object.defineProperty(S, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: 4900
            });
            class O extends a {
                constructor(t) {
                    super(t, {
                        code: O.code,
                        shortMessage: "The Provider is not connected to the requested chain."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ChainDisconnectedError"
                    })
                }
            }
            Object.defineProperty(O, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: 4901
            });
            class C extends a {
                constructor(t) {
                    super(t, {
                        code: C.code,
                        shortMessage: "An error occurred when attempting to switch chain."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "SwitchChainError"
                    })
                }
            }
            Object.defineProperty(C, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: 4902
            });
            class _ extends s {
                constructor(t) {
                    super(t, {
                        shortMessage: "An unknown RPC error occurred."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "UnknownRpcError"
                    })
                }
            }
        },
        63228: function(t, e, r) {
            "use strict";
            r.d(e, {
                Bh: function() {
                    return l
                },
                Yb: function() {
                    return h
                },
                j3: function() {
                    return u
                },
                mc: function() {
                    return f
                },
                mk: function() {
                    return c
                },
                xY: function() {
                    return a
                },
                xr: function() {
                    return s
                }
            });
            var n = r(71282),
                i = r(29707),
                o = r(75921);

            function s(t) {
                let e = Object.entries(t).map(([t, e]) => void 0 === e || !1 === e ? null : [t, e]).filter(Boolean),
                    r = e.reduce((t, [e]) => Math.max(t, e.length), 0);
                return e.map(([t, e]) => `  ${`${t}:`.padEnd(r+1)}  ${e}`).join("\n")
            }
            class a extends o.G {
                constructor() {
                    super("Cannot specify both a `gasPrice` and a `maxFeePerGas`/`maxPriorityFeePerGas`.\nUse `maxFeePerGas`/`maxPriorityFeePerGas` for EIP-1559 compatible networks, and `gasPrice` for others."), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "FeeConflictError"
                    })
                }
            }
            class u extends o.G {
                constructor({
                    transaction: t
                }) {
                    super("Cannot infer a transaction type from provided transaction.", {
                        metaMessages: ["Provided Transaction:", "{", s(t), "}", "", "To infer the type, either provide:", "- a `type` to the Transaction, or", "- an EIP-1559 Transaction with `maxFeePerGas`, or", "- an EIP-2930 Transaction with `gasPrice` & `accessList`, or", "- a Legacy Transaction with `gasPrice`"]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidSerializableTransactionError"
                    })
                }
            }
            class c extends o.G {
                constructor(t, {
                    account: e,
                    docsPath: r,
                    chain: o,
                    data: a,
                    gas: u,
                    gasPrice: c,
                    maxFeePerGas: l,
                    maxPriorityFeePerGas: h,
                    nonce: f,
                    to: d,
                    value: p
                }) {
                    super(t.shortMessage, {
                        cause: t,
                        docsPath: r,
                        metaMessages: [...t.metaMessages ? [...t.metaMessages, " "] : [], "Request Arguments:", s({
                            chain: o && `${o?.name} (id: ${o?.id})`,
                            from: e ? .address,
                            to: d,
                            value: void 0 !== p && `${(0,n.d)(p)} ${o?.nativeCurrency?.symbol||"ETH"}`,
                            data: a,
                            gas: u,
                            gasPrice: void 0 !== c && `${(0,i.o)(c)} gwei`,
                            maxFeePerGas: void 0 !== l && `${(0,i.o)(l)} gwei`,
                            maxPriorityFeePerGas: void 0 !== h && `${(0,i.o)(h)} gwei`,
                            nonce: f
                        })].filter(Boolean)
                    }), Object.defineProperty(this, "cause", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "TransactionExecutionError"
                    }), this.cause = t
                }
            }
            class l extends o.G {
                constructor({
                    blockHash: t,
                    blockNumber: e,
                    blockTag: r,
                    hash: n,
                    index: i
                }) {
                    let o = "Transaction";
                    r && void 0 !== i && (o = `Transaction at block time "${r}" at index "${i}"`), t && void 0 !== i && (o = `Transaction at block hash "${t}" at index "${i}"`), e && void 0 !== i && (o = `Transaction at block number "${e}" at index "${i}"`), n && (o = `Transaction with hash "${n}"`), super(`${o} could not be found.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "TransactionNotFoundError"
                    })
                }
            }
            class h extends o.G {
                constructor({
                    hash: t
                }) {
                    super(`Transaction receipt with hash "${t}" could not be found. The Transaction may not be processed on a block yet.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "TransactionReceiptNotFoundError"
                    })
                }
            }
            class f extends o.G {
                constructor({
                    hash: t
                }) {
                    super(`Timed out while waiting for transaction with hash "${t}" to be confirmed.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "WaitForTransactionReceiptTimeoutError"
                    })
                }
            }
        },
        94791: function(t, e, r) {
            "use strict";
            r.d(e, {
                CR: function() {
                    return i
                },
                Gr: function() {
                    return o
                },
                bo: function() {
                    return s
                }
            });
            let n = "1.20.3",
                i = t => t,
                o = t => t,
                s = () => `viem@${n}`
        },
        28917: function(t, e, r) {
            "use strict";
            r.d(e, {
                r: function() {
                    return l
                }
            });
            var n = r(65531),
                i = r(31669),
                o = r(20556),
                s = r(69921),
                a = r(36826),
                u = r(72932),
                c = r(30056);

            function l(t, e) {
                if ("0x" === e && t.length > 0) throw new n.wb;
                if ((0, o.d)(e) && 32 > (0, o.d)(e)) throw new n.xB({
                    data: e,
                    params: t,
                    size: (0, o.d)(e)
                });
                return h({
                    data: e,
                    params: t
                })
            }

            function h({
                data: t,
                params: e
            }) {
                let r = [],
                    i = 0;
                for (let s = 0; s < e.length; s++) {
                    if (i >= (0, o.d)(t)) throw new n.xB({
                        data: t,
                        params: e,
                        size: (0, o.d)(t)
                    });
                    let {
                        consumed: a,
                        value: u
                    } = f({
                        data: t,
                        param: e[s],
                        position: i
                    });
                    r.push(u), i += a
                }
                return r
            }

            function f({
                data: t,
                param: e,
                position: r
            }) {
                let i = (0, c.S)(e.type);
                if (i) {
                    let [n, o] = i;
                    return p(t, {
                        length: n,
                        param: { ...e,
                            type: o
                        },
                        position: r
                    })
                }
                if ("tuple" === e.type) return w(t, {
                    param: e,
                    position: r
                });
                if ("string" === e.type) return g(t, {
                    position: r
                });
                if (e.type.startsWith("bytes")) return m(t, {
                    param: e,
                    position: r
                });
                let o = (0, s.tP)(t, r, r + 32, {
                    strict: !0
                });
                if (e.type.startsWith("uint") || e.type.startsWith("int")) return b(o, {
                    param: e
                });
                if ("address" === e.type) return d(o);
                if ("bool" === e.type) return y(o);
                throw new n.CI(e.type, {
                    docsPath: "/docs/contract/decodeAbiParameters"
                })
            }

            function d(t) {
                return {
                    consumed: 32,
                    value: (0, i.x)((0, s.tP)(t, -20))
                }
            }

            function p(t, {
                param: e,
                length: r,
                position: n
            }) {
                if (!r) {
                    let r = (0, u.ly)((0, s.tP)(t, n, n + 32, {
                            strict: !0
                        })),
                        i = (0, u.ly)((0, s.tP)(t, r, r + 32, {
                            strict: !0
                        })),
                        o = 0,
                        a = [];
                    for (let n = 0; n < i; ++n) {
                        let n = f({
                            data: (0, s.tP)(t, r + 32),
                            param: e,
                            position: o
                        });
                        o += n.consumed, a.push(n.value)
                    }
                    return {
                        value: a,
                        consumed: 32
                    }
                }
                if (v(e)) {
                    let i = (0, c.S)(e.type),
                        o = !i ? .[0],
                        a = 0,
                        l = [];
                    for (let i = 0; i < r; ++i) {
                        let r = (0, u.ly)((0, s.tP)(t, n, n + 32, {
                                strict: !0
                            })),
                            c = f({
                                data: (0, s.tP)(t, r),
                                param: e,
                                position: o ? a : 32 * i
                            });
                        a += c.consumed, l.push(c.value)
                    }
                    return {
                        value: l,
                        consumed: 32
                    }
                }
                let i = 0,
                    o = [];
                for (let s = 0; s < r; ++s) {
                    let r = f({
                        data: t,
                        param: e,
                        position: n + i
                    });
                    i += r.consumed, o.push(r.value)
                }
                return {
                    value: o,
                    consumed: i
                }
            }

            function y(t) {
                return {
                    consumed: 32,
                    value: (0, u.XA)(t)
                }
            }

            function m(t, {
                param: e,
                position: r
            }) {
                let [n, i] = e.type.split("bytes");
                if (!i) {
                    let e = (0, u.ly)((0, s.tP)(t, r, r + 32, {
                            strict: !0
                        })),
                        n = (0, u.ly)((0, s.tP)(t, e, e + 32, {
                            strict: !0
                        }));
                    return 0 === n ? {
                        consumed: 32,
                        value: "0x"
                    } : {
                        consumed: 32,
                        value: (0, s.tP)(t, e + 32, e + 32 + n, {
                            strict: !0
                        })
                    }
                }
                return {
                    consumed: 32,
                    value: (0, s.tP)(t, r, r + parseInt(i), {
                        strict: !0
                    })
                }
            }

            function b(t, {
                param: e
            }) {
                let r = e.type.startsWith("int");
                return {
                    consumed: 32,
                    value: parseInt(e.type.split("int")[1] || "256") > 48 ? (0, u.y_)(t, {
                        signed: r
                    }) : (0, u.ly)(t, {
                        signed: r
                    })
                }
            }

            function g(t, {
                position: e
            }) {
                let r = (0, u.ly)((0, s.tP)(t, e, e + 32, {
                        strict: !0
                    })),
                    n = (0, u.ly)((0, s.tP)(t, r, r + 32, {
                        strict: !0
                    }));
                return 0 === n ? {
                    consumed: 32,
                    value: ""
                } : {
                    consumed: 32,
                    value: (0, u.rR)((0, a.f)((0, s.tP)(t, r + 32, r + 32 + n, {
                        strict: !0
                    })))
                }
            }

            function w(t, {
                param: e,
                position: r
            }) {
                let n = 0 === e.components.length || e.components.some(({
                        name: t
                    }) => !t),
                    i = n ? [] : {},
                    o = 0;
                if (v(e)) {
                    let a = (0, u.ly)((0, s.tP)(t, r, r + 32, {
                        strict: !0
                    }));
                    for (let r = 0; r < e.components.length; ++r) {
                        let u = e.components[r],
                            c = f({
                                data: (0, s.tP)(t, a),
                                param: u,
                                position: o
                            });
                        o += c.consumed, i[n ? r : u ? .name] = c.value
                    }
                    return {
                        consumed: 32,
                        value: i
                    }
                }
                for (let s = 0; s < e.components.length; ++s) {
                    let a = e.components[s],
                        u = f({
                            data: t,
                            param: a,
                            position: r + o
                        });
                    o += u.consumed, i[n ? s : a ? .name] = u.value
                }
                return {
                    consumed: o,
                    value: i
                }
            }

            function v(t) {
                let {
                    type: e
                } = t;
                if ("string" === e || "bytes" === e || e.endsWith("[]")) return !0;
                if ("tuple" === e) return t.components ? .some(v);
                let r = (0, c.S)(t.type);
                return !!(r && v({ ...t,
                    type: r[1]
                }))
            }
        },
        33591: function(t, e, r) {
            "use strict";
            r.d(e, {
                p: function() {
                    return c
                }
            });
            var n = r(55246),
                i = r(65531),
                o = r(69921),
                s = r(11223),
                a = r(28917),
                u = r(7275);

            function c({
                abi: t,
                data: e
            }) {
                let r = (0, o.tP)(e, 0, 4);
                if ("0x" === r) throw new i.wb;
                let c = [...t || [], n.Up, n.hZ].find(t => "error" === t.type && r === (0, s.o)((0, u.t)(t)));
                if (!c) throw new i.yP(r, {
                    docsPath: "/docs/contract/decodeErrorResult"
                });
                return {
                    abiItem: c,
                    args: "inputs" in c && c.inputs && c.inputs.length > 0 ? (0, a.r)(c.inputs, (0, o.tP)(e, 4)) : void 0,
                    errorName: c.name
                }
            }
        },
        27964: function(t, e, r) {
            "use strict";
            r.d(e, {
                F: function() {
                    return u
                }
            });
            var n = r(65531),
                i = r(10683),
                o = r(28917),
                s = r(7275);
            let a = "/docs/contract/decodeEventLog";

            function u({
                abi: t,
                data: e,
                strict: r,
                topics: u
            }) {
                let l = r ? ? !0,
                    [h, ...f] = u;
                if (!h) throw new n.FM({
                    docsPath: a
                });
                let d = t.find(t => "event" === t.type && h === (0, i.e)((0, s.t)(t)));
                if (!(d && "name" in d) || "event" !== d.type) throw new n.lC(h, {
                    docsPath: a
                });
                let {
                    name: p,
                    inputs: y
                } = d, m = y ? .some(t => !("name" in t && t.name)), b = m ? [] : {}, g = y.filter(t => "indexed" in t && t.indexed);
                for (let t = 0; t < g.length; t++) {
                    let e = g[t],
                        r = f[t];
                    if (!r) throw new n.Gy({
                        abiItem: d,
                        param: e
                    });
                    b[e.name || t] = c({
                        param: e,
                        value: r
                    })
                }
                let w = y.filter(t => !("indexed" in t && t.indexed));
                if (w.length > 0) {
                    if (e && "0x" !== e) try {
                        let t = (0, o.r)(w, e);
                        if (t) {
                            if (m) b = [...b, ...t];
                            else
                                for (let e = 0; e < w.length; e++) b[w[e].name] = t[e]
                        }
                    } catch (t) {
                        if (l) {
                            if (t instanceof n.xB) throw new n.SM({
                                abiItem: d,
                                data: t.data,
                                params: t.params,
                                size: t.size
                            });
                            throw t
                        }
                    } else if (l) throw new n.SM({
                        abiItem: d,
                        data: "0x",
                        params: w,
                        size: 0
                    })
                }
                return {
                    eventName: p,
                    args: Object.values(b).length > 0 ? b : void 0
                }
            }

            function c({
                param: t,
                value: e
            }) {
                return "string" === t.type || "bytes" === t.type || "tuple" === t.type || t.type.match(/^(.*)\[(\d+)?\]$/) ? e : ((0, o.r)([t], e) || [])[0]
            }
        },
        65436: function(t, e, r) {
            "use strict";
            r.d(e, {
                k: function() {
                    return a
                }
            });
            var n = r(65531),
                i = r(28917),
                o = r(64043);
            let s = "/docs/contract/decodeFunctionResult";

            function a({
                abi: t,
                args: e,
                functionName: r,
                data: a
            }) {
                let u = t[0];
                if (r && !(u = (0, o.mE)({
                        abi: t,
                        args: e,
                        name: r
                    }))) throw new n.xL(r, {
                    docsPath: s
                });
                if ("function" !== u.type) throw new n.xL(void 0, {
                    docsPath: s
                });
                if (!u.outputs) throw new n.MX(u.name, {
                    docsPath: s
                });
                let c = (0, i.r)(u.outputs, a);
                return c && c.length > 1 ? c : c && 1 === c.length ? c[0] : void 0
            }
        },
        30056: function(t, e, r) {
            "use strict";
            r.d(e, {
                E: function() {
                    return h
                },
                S: function() {
                    return x
                }
            });
            var n = r(65531),
                i = r(10052),
                o = r(4012),
                s = r(89256),
                a = r(8796),
                u = r(20556),
                c = r(69921),
                l = r(59455);

            function h(t, e) {
                if (t.length !== e.length) throw new n.fs({
                    expectedLength: t.length,
                    givenLength: e.length
                });
                let r = p(f({
                    params: t,
                    values: e
                }));
                return 0 === r.length ? "0x" : r
            }

            function f({
                params: t,
                values: e
            }) {
                let r = [];
                for (let n = 0; n < t.length; n++) r.push(d({
                    param: t[n],
                    value: e[n]
                }));
                return r
            }

            function d({
                param: t,
                value: e
            }) {
                let r = x(t.type);
                if (r) {
                    let [n, i] = r;
                    return m(e, {
                        length: n,
                        param: { ...t,
                            type: i
                        }
                    })
                }
                if ("tuple" === t.type) return E(e, {
                    param: t
                });
                if ("address" === t.type) return y(e);
                if ("bool" === t.type) return g(e);
                if (t.type.startsWith("uint") || t.type.startsWith("int")) return w(e, {
                    signed: t.type.startsWith("int")
                });
                if (t.type.startsWith("bytes")) return b(e, {
                    param: t
                });
                if ("string" === t.type) return v(e);
                throw new n.dh(t.type, {
                    docsPath: "/docs/contract/encodeAbiParameters"
                })
            }

            function p(t) {
                let e = 0;
                for (let r = 0; r < t.length; r++) {
                    let {
                        dynamic: n,
                        encoded: i
                    } = t[r];
                    n ? e += 32 : e += (0, u.d)(i)
                }
                let r = [],
                    n = [],
                    i = 0;
                for (let o = 0; o < t.length; o++) {
                    let {
                        dynamic: s,
                        encoded: a
                    } = t[o];
                    s ? (r.push((0, l.eC)(e + i, {
                        size: 32
                    })), n.push(a), i += (0, u.d)(a)) : r.push(a)
                }
                return (0, s.zo)([...r, ...n])
            }

            function y(t) {
                if (!(0, o.U)(t)) throw new i.b({
                    address: t
                });
                return {
                    dynamic: !1,
                    encoded: (0, a.gc)(t.toLowerCase())
                }
            }

            function m(t, {
                length: e,
                param: r
            }) {
                let i = null === e;
                if (!Array.isArray(t)) throw new n.hn(t);
                if (!i && t.length !== e) throw new n.gr({
                    expectedLength: e,
                    givenLength: t.length,
                    type: `${r.type}[${e}]`
                });
                let o = !1,
                    a = [];
                for (let e = 0; e < t.length; e++) {
                    let n = d({
                        param: r,
                        value: t[e]
                    });
                    n.dynamic && (o = !0), a.push(n)
                }
                if (i || o) {
                    let t = p(a);
                    if (i) {
                        let e = (0, l.eC)(a.length, {
                            size: 32
                        });
                        return {
                            dynamic: !0,
                            encoded: a.length > 0 ? (0, s.zo)([e, t]) : e
                        }
                    }
                    if (o) return {
                        dynamic: !0,
                        encoded: t
                    }
                }
                return {
                    dynamic: !1,
                    encoded: (0, s.zo)(a.map(({
                        encoded: t
                    }) => t))
                }
            }

            function b(t, {
                param: e
            }) {
                let [, r] = e.type.split("bytes"), i = (0, u.d)(t);
                if (!r) {
                    let e = t;
                    return i % 32 != 0 && (e = (0, a.gc)(e, {
                        dir: "right",
                        size: 32 * Math.ceil((t.length - 2) / 2 / 32)
                    })), {
                        dynamic: !0,
                        encoded: (0, s.zo)([(0, a.gc)((0, l.eC)(i, {
                            size: 32
                        })), e])
                    }
                }
                if (i !== parseInt(r)) throw new n.M4({
                    expectedSize: parseInt(r),
                    value: t
                });
                return {
                    dynamic: !1,
                    encoded: (0, a.gc)(t, {
                        dir: "right"
                    })
                }
            }

            function g(t) {
                return {
                    dynamic: !1,
                    encoded: (0, a.gc)((0, l.C4)(t))
                }
            }

            function w(t, {
                signed: e
            }) {
                return {
                    dynamic: !1,
                    encoded: (0, l.eC)(t, {
                        size: 32,
                        signed: e
                    })
                }
            }

            function v(t) {
                let e = (0, l.$G)(t),
                    r = Math.ceil((0, u.d)(e) / 32),
                    n = [];
                for (let t = 0; t < r; t++) n.push((0, a.gc)((0, c.tP)(e, 32 * t, (t + 1) * 32), {
                    dir: "right"
                }));
                return {
                    dynamic: !0,
                    encoded: (0, s.zo)([(0, a.gc)((0, l.eC)((0, u.d)(e), {
                        size: 32
                    })), ...n])
                }
            }

            function E(t, {
                param: e
            }) {
                let r = !1,
                    n = [];
                for (let i = 0; i < e.components.length; i++) {
                    let o = e.components[i],
                        s = Array.isArray(t) ? i : o.name,
                        a = d({
                            param: o,
                            value: t[s]
                        });
                    n.push(a), a.dynamic && (r = !0)
                }
                return {
                    dynamic: r,
                    encoded: r ? p(n) : (0, s.zo)(n.map(({
                        encoded: t
                    }) => t))
                }
            }

            function x(t) {
                let e = t.match(/^(.*)\[(\d+)?\]$/);
                return e ? [e[2] ? Number(e[2]) : null, e[1]] : void 0
            }
        },
        23010: function(t, e, r) {
            "use strict";
            r.d(e, {
                w: function() {
                    return a
                }
            });
            var n = r(65531),
                i = r(89256),
                o = r(30056);
            let s = "/docs/contract/encodeDeployData";

            function a({
                abi: t,
                args: e,
                bytecode: r
            }) {
                if (!e || 0 === e.length) return r;
                let a = t.find(t => "type" in t && "constructor" === t.type);
                if (!a) throw new n.fM({
                    docsPath: s
                });
                if (!("inputs" in a) || !a.inputs || 0 === a.inputs.length) throw new n.cO({
                    docsPath: s
                });
                let u = (0, o.E)(a.inputs, e);
                return (0, i.SM)([r, u])
            }
        },
        93182: function(t, e, r) {
            "use strict";
            r.d(e, {
                R: function() {
                    return c
                }
            });
            var n = r(65531),
                i = r(89256),
                o = r(11223),
                s = r(30056),
                a = r(7275),
                u = r(64043);

            function c({
                abi: t,
                args: e,
                functionName: r
            }) {
                let c = t[0];
                if (r && !(c = (0, u.mE)({
                        abi: t,
                        args: e,
                        name: r
                    }))) throw new n.xL(r, {
                    docsPath: "/docs/contract/encodeFunctionData"
                });
                if ("function" !== c.type) throw new n.xL(void 0, {
                    docsPath: "/docs/contract/encodeFunctionData"
                });
                let l = (0, a.t)(c),
                    h = (0, o.o)(l),
                    f = "inputs" in c && c.inputs ? (0, s.E)(c.inputs, e ? ? []) : void 0;
                return (0, i.SM)([h, f ? ? "0x"])
            }
        },
        7275: function(t, e, r) {
            "use strict";
            r.d(e, {
                h: function() {
                    return o
                },
                t: function() {
                    return i
                }
            });
            var n = r(65531);

            function i(t, {
                includeName: e = !1
            } = {}) {
                if ("function" !== t.type && "event" !== t.type && "error" !== t.type) throw new n.wM(t.type);
                return `${t.name}(${o(t.inputs,{includeName:e})})`
            }

            function o(t, {
                includeName: e = !1
            } = {}) {
                return t ? t.map(t => s(t, {
                    includeName: e
                })).join(e ? ", " : ",") : ""
            }

            function s(t, {
                includeName: e
            }) {
                return t.type.startsWith("tuple") ? `(${o(t.components,{includeName:e})})${t.type.slice(5)}` : t.type + (e && t.name ? ` ${t.name}` : "")
            }
        },
        64043: function(t, e, r) {
            "use strict";
            r.d(e, {
                mE: function() {
                    return u
                }
            });
            var n = r(65531),
                i = r(93610),
                o = r(10683),
                s = r(11223),
                a = r(4012);

            function u({
                abi: t,
                args: e = [],
                name: r
            }) {
                let a;
                let u = (0, i.v)(r, {
                        strict: !1
                    }),
                    h = t.filter(t => u ? "function" === t.type ? (0, s.o)(t) === r : "event" === t.type && (0, o.e)(t) === r : "name" in t && t.name === r);
                if (0 !== h.length) {
                    if (1 === h.length) return h[0];
                    for (let t of h)
                        if ("inputs" in t) {
                            if (!e || 0 === e.length) {
                                if (!t.inputs || 0 === t.inputs.length) return t;
                                continue
                            }
                            if (t.inputs && 0 !== t.inputs.length && t.inputs.length === e.length && e.every((e, r) => {
                                    let n = "inputs" in t && t.inputs[r];
                                    return !!n && c(e, n)
                                })) {
                                if (a && "inputs" in a && a.inputs) {
                                    let r = l(t.inputs, a.inputs, e);
                                    if (r) throw new n.S4({
                                        abiItem: t,
                                        type: r[0]
                                    }, {
                                        abiItem: a,
                                        type: r[1]
                                    })
                                }
                                a = t
                            }
                        }
                    return a || h[0]
                }
            }

            function c(t, e) {
                let r = typeof t,
                    n = e.type;
                switch (n) {
                    case "address":
                        return (0, a.U)(t);
                    case "bool":
                        return "boolean" === r;
                    case "function":
                    case "string":
                        return "string" === r;
                    default:
                        if ("tuple" === n && "components" in e) return Object.values(e.components).every((e, r) => c(Object.values(t)[r], e));
                        if (/^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/.test(n)) return "number" === r || "bigint" === r;
                        if (/^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/.test(n)) return "string" === r || t instanceof Uint8Array;
                        if (/[a-z]+[1-9]{0,3}(\[[0-9]{0,}\])+$/.test(n)) return Array.isArray(t) && t.every(t => c(t, { ...e,
                            type: n.replace(/(\[[0-9]{0,}\])$/, "")
                        }));
                        return !1
                }
            }

            function l(t, e, r) {
                for (let n in t) {
                    let i = t[n],
                        o = e[n];
                    if ("tuple" === i.type && "tuple" === o.type && "components" in i && "components" in o) return l(i.components, o.components, r[n]);
                    let s = [i.type, o.type];
                    if (s.includes("address") && s.includes("bytes20") || (s.includes("address") && s.includes("string") || s.includes("address") && s.includes("bytes")) && (0, a.U)(r[n])) return s
                }
            }
        },
        31669: function(t, e, r) {
            "use strict";
            r.d(e, {
                K: function() {
                    return u
                },
                x: function() {
                    return a
                }
            });
            var n = r(10052),
                i = r(44659),
                o = r(10208),
                s = r(4012);

            function a(t, e) {
                let r = e ? `${e}${t.toLowerCase()}` : t.substring(2).toLowerCase(),
                    n = (0, o.w)((0, i.qX)(r), "bytes"),
                    s = (e ? r.substring(`${e}0x`.length) : r).split("");
                for (let t = 0; t < 40; t += 2) n[t >> 1] >> 4 >= 8 && s[t] && (s[t] = s[t].toUpperCase()), (15 & n[t >> 1]) >= 8 && s[t + 1] && (s[t + 1] = s[t + 1].toUpperCase());
                return `0x${s.join("")}`
            }

            function u(t, e) {
                if (!(0, s.U)(t)) throw new n.b({
                    address: t
                });
                return a(t, e)
            }
        },
        4012: function(t, e, r) {
            "use strict";
            r.d(e, {
                U: function() {
                    return i
                }
            });
            let n = /^0x[a-fA-F0-9]{40}$/;

            function i(t) {
                return n.test(t)
            }
        },
        11337: function(t, e, r) {
            "use strict";
            r.d(e, {
                n: function() {
                    return u
                },
                y: function() {
                    return a
                }
            });
            var n = r(75921),
                i = r(17057),
                o = r(77014),
                s = r(49287);
            let a = t => "code" in t ? -1 !== t.code && -32004 !== t.code && -32005 !== t.code && -32042 !== t.code && -32603 !== t.code : t instanceof i.Gg && !!t.status && 403 !== t.status && 408 !== t.status && 413 !== t.status && 429 !== t.status && 500 !== t.status && 502 !== t.status && 503 !== t.status && 504 !== t.status;

            function u(t, {
                retryDelay: e = 150,
                retryCount: r = 3
            } = {}) {
                return async u => (0, s.J)(async () => {
                    try {
                        return await t(u)
                    } catch (e) {
                        let t = e;
                        switch (t.code) {
                            case o.s7.code:
                                throw new o.s7(t);
                            case o.B.code:
                                throw new o.B(t);
                            case o.LX.code:
                                throw new o.LX(t);
                            case o.nY.code:
                                throw new o.nY(t);
                            case o.XS.code:
                                throw new o.XS(t);
                            case o.yR.code:
                                throw new o.yR(t);
                            case o.Og.code:
                                throw new o.Og(t);
                            case o.pT.code:
                                throw new o.pT(t);
                            case o.KB.code:
                                throw new o.KB(t);
                            case o.gS.code:
                                throw new o.gS(t);
                            case o.Pv.code:
                                throw new o.Pv(t);
                            case o.GD.code:
                                throw new o.GD(t);
                            case o.ab.code:
                                throw new o.ab(t);
                            case o.PE.code:
                                throw new o.PE(t);
                            case o.Ts.code:
                                throw new o.Ts(t);
                            case o.u5.code:
                                throw new o.u5(t);
                            case o.I0.code:
                                throw new o.I0(t);
                            case o.x3.code:
                                throw new o.x3(t);
                            case 5e3:
                                throw new o.ab(t);
                            default:
                                if (e instanceof n.G) throw e;
                                throw new o.ir(t)
                        }
                    }
                }, {
                    delay: ({
                        count: t,
                        error: r
                    }) => {
                        if (r && r instanceof i.Gg) {
                            let t = r ? .headers ? .get("Retry-After");
                            if (t ? .match(/\d/)) return 1e3 * parseInt(t)
                        }
                        return ~~(1 << t) * e
                    },
                    retryCount: r,
                    shouldRetry: ({
                        error: t
                    }) => !a(t)
                })
            }
        },
        90328: function(t, e, r) {
            "use strict";

            function n(t, e = {}) {
                let {
                    fees: r = t.fees,
                    formatters: n = t.formatters,
                    serializers: i = t.serializers
                } = e;
                return { ...t,
                    fees: r,
                    formatters: n,
                    serializers: i
                }
            }
            r.d(e, {
                a: function() {
                    return n
                }
            })
        },
        93627: function(t, e, r) {
            "use strict";
            r.d(e, {
                L: function() {
                    return i
                }
            });
            var n = r(35586);

            function i({
                blockNumber: t,
                chain: e,
                contract: r
            }) {
                let i = e ? .contracts ? .[r];
                if (!i) throw new n.mm({
                    chain: e,
                    contract: {
                        name: r
                    }
                });
                if (t && i.blockCreated && i.blockCreated > t) throw new n.mm({
                    blockNumber: t,
                    chain: e,
                    contract: {
                        name: r,
                        blockCreated: i.blockCreated
                    }
                });
                return i.address
            }
        },
        89256: function(t, e, r) {
            "use strict";

            function n(t) {
                return "string" == typeof t[0] ? o(t) : i(t)
            }

            function i(t) {
                let e = 0;
                for (let r of t) e += r.length;
                let r = new Uint8Array(e),
                    n = 0;
                for (let e of t) r.set(e, n), n += e.length;
                return r
            }

            function o(t) {
                return `0x${t.reduce((t,e)=>t+e.replace("0x",""),"")}`
            }
            r.d(e, {
                SM: function() {
                    return o
                },
                zo: function() {
                    return n
                }
            })
        },
        93610: function(t, e, r) {
            "use strict";

            function n(t, {
                strict: e = !0
            } = {}) {
                return !!t && "string" == typeof t && (e ? /^0x[0-9a-fA-F]*$/.test(t) : t.startsWith("0x"))
            }
            r.d(e, {
                v: function() {
                    return n
                }
            })
        },
        8796: function(t, e, r) {
            "use strict";
            r.d(e, {
                gc: function() {
                    return o
                },
                vk: function() {
                    return i
                }
            });
            var n = r(47116);

            function i(t, {
                dir: e,
                size: r = 32
            } = {}) {
                return "string" == typeof t ? o(t, {
                    dir: e,
                    size: r
                }) : s(t, {
                    dir: e,
                    size: r
                })
            }

            function o(t, {
                dir: e,
                size: r = 32
            } = {}) {
                if (null === r) return t;
                let i = t.replace("0x", "");
                if (i.length > 2 * r) throw new n.$({
                    size: Math.ceil(i.length / 2),
                    targetSize: r,
                    type: "hex"
                });
                return `0x${i["right"===e?"padEnd":"padStart"](2*r,"0")}`
            }

            function s(t, {
                dir: e,
                size: r = 32
            } = {}) {
                if (null === r) return t;
                if (t.length > r) throw new n.$({
                    size: t.length,
                    targetSize: r,
                    type: "bytes"
                });
                let i = new Uint8Array(r);
                for (let n = 0; n < r; n++) {
                    let o = "right" === e;
                    i[o ? n : r - n - 1] = t[o ? n : t.length - n - 1]
                }
                return i
            }
        },
        20556: function(t, e, r) {
            "use strict";
            r.d(e, {
                d: function() {
                    return i
                }
            });
            var n = r(93610);

            function i(t) {
                return (0, n.v)(t, {
                    strict: !1
                }) ? Math.ceil((t.length - 2) / 2) : t.length
            }
        },
        69921: function(t, e, r) {
            "use strict";
            r.d(e, {
                tP: function() {
                    return s
                }
            });
            var n = r(47116),
                i = r(93610),
                o = r(20556);

            function s(t, e, r, {
                strict: n
            } = {}) {
                return (0, i.v)(t, {
                    strict: !1
                }) ? l(t, e, r, {
                    strict: n
                }) : c(t, e, r, {
                    strict: n
                })
            }

            function a(t, e) {
                if ("number" == typeof e && e > 0 && e > (0, o.d)(t) - 1) throw new n.m({
                    offset: e,
                    position: "start",
                    size: (0, o.d)(t)
                })
            }

            function u(t, e, r) {
                if ("number" == typeof e && "number" == typeof r && (0, o.d)(t) !== r - e) throw new n.m({
                    offset: r,
                    position: "end",
                    size: (0, o.d)(t)
                })
            }

            function c(t, e, r, {
                strict: n
            } = {}) {
                a(t, e);
                let i = t.slice(e, r);
                return n && u(i, e, r), i
            }

            function l(t, e, r, {
                strict: n
            } = {}) {
                a(t, e);
                let i = `0x${t.replace("0x","").slice((e??0)*2,(r??t.length)*2)}`;
                return n && u(i, e, r), i
            }
        },
        36826: function(t, e, r) {
            "use strict";

            function n(t, {
                dir: e = "left"
            } = {}) {
                let r = "string" == typeof t ? t.replace("0x", "") : t,
                    n = 0;
                for (let t = 0; t < r.length - 1 && "0" === r["left" === e ? t : r.length - t - 1].toString(); t++) n++;
                return (r = "left" === e ? r.slice(n) : r.slice(0, r.length - n), "string" == typeof t) ? (1 === r.length && "right" === e && (r = `${r}0`), `0x${r.length%2==1?`0${r}`:r}`) : r
            }
            r.d(e, {
                f: function() {
                    return n
                }
            })
        },
        72932: function(t, e, r) {
            "use strict";
            r.d(e, {
                H_: function() {
                    return u
                },
                XA: function() {
                    return l
                },
                Yf: function() {
                    return a
                },
                ly: function() {
                    return h
                },
                rR: function() {
                    return f
                },
                y_: function() {
                    return c
                }
            });
            var n = r(63152),
                i = r(20556),
                o = r(36826),
                s = r(44659);

            function a(t, {
                size: e
            }) {
                if ((0, i.d)(t) > e) throw new n.M6({
                    givenSize: (0, i.d)(t),
                    maxSize: e
                })
            }

            function u(t, e) {
                let r = "string" == typeof e ? {
                        to: e
                    } : e,
                    n = r.to;
                return "number" === n ? h(t, r) : "bigint" === n ? c(t, r) : "string" === n ? f(t, r) : "boolean" === n ? l(t, r) : (0, s.nr)(t, r)
            }

            function c(t, e = {}) {
                let {
                    signed: r
                } = e;
                e.size && a(t, {
                    size: e.size
                });
                let n = BigInt(t);
                if (!r) return n;
                let i = (t.length - 2) / 2;
                return n <= (1 n << 8 n * BigInt(i) - 1 n) - 1 n ? n : n - BigInt(`0x${"f".padStart(2*i,"f")}`) - 1 n
            }

            function l(t, e = {}) {
                let r = t;
                if (e.size && (a(r, {
                        size: e.size
                    }), r = (0, o.f)(r)), "0x00" === (0, o.f)(r)) return !1;
                if ("0x01" === (0, o.f)(r)) return !0;
                throw new n.Cd(r)
            }

            function h(t, e = {}) {
                return Number(c(t, e))
            }

            function f(t, e = {}) {
                let r = (0, s.nr)(t);
                return e.size && (a(r, {
                    size: e.size
                }), r = (0, o.f)(r, {
                    dir: "right"
                })), new TextDecoder().decode(r)
            }
        },
        44659: function(t, e, r) {
            "use strict";
            r.d(e, {
                O0: function() {
                    return c
                },
                nr: function() {
                    return d
                },
                qX: function() {
                    return y
                }
            });
            var n = r(75921),
                i = r(93610),
                o = r(8796),
                s = r(72932),
                a = r(59455);
            let u = new TextEncoder;

            function c(t, e = {}) {
                return "number" == typeof t || "bigint" == typeof t ? p(t, e) : "boolean" == typeof t ? l(t, e) : (0, i.v)(t) ? d(t, e) : y(t, e)
            }

            function l(t, e = {}) {
                let r = new Uint8Array(1);
                return (r[0] = Number(t), "number" == typeof e.size) ? ((0, s.Yf)(r, {
                    size: e.size
                }), (0, o.vk)(r, {
                    size: e.size
                })) : r
            }
            let h = {
                zero: 48,
                nine: 57,
                A: 65,
                F: 70,
                a: 97,
                f: 102
            };

            function f(t) {
                return t >= h.zero && t <= h.nine ? t - h.zero : t >= h.A && t <= h.F ? t - (h.A - 10) : t >= h.a && t <= h.f ? t - (h.a - 10) : void 0
            }

            function d(t, e = {}) {
                let r = t;
                e.size && ((0, s.Yf)(r, {
                    size: e.size
                }), r = (0, o.vk)(r, {
                    dir: "right",
                    size: e.size
                }));
                let i = r.slice(2);
                i.length % 2 && (i = `0${i}`);
                let a = i.length / 2,
                    u = new Uint8Array(a);
                for (let t = 0, e = 0; t < a; t++) {
                    let r = f(i.charCodeAt(e++)),
                        o = f(i.charCodeAt(e++));
                    if (void 0 === r || void 0 === o) throw new n.G(`Invalid byte sequence ("${i[e-2]}${i[e-1]}" in "${i}").`);
                    u[t] = 16 * r + o
                }
                return u
            }

            function p(t, e) {
                return d((0, a.eC)(t, e))
            }

            function y(t, e = {}) {
                let r = u.encode(t);
                return "number" == typeof e.size ? ((0, s.Yf)(r, {
                    size: e.size
                }), (0, o.vk)(r, {
                    dir: "right",
                    size: e.size
                })) : r
            }
        },
        59455: function(t, e, r) {
            "use strict";
            r.d(e, {
                $G: function() {
                    return f
                },
                C4: function() {
                    return u
                },
                NC: function() {
                    return a
                },
                ci: function() {
                    return c
                },
                eC: function() {
                    return l
                }
            });
            var n = r(63152),
                i = r(8796),
                o = r(72932);
            let s = Array.from({
                length: 256
            }, (t, e) => e.toString(16).padStart(2, "0"));

            function a(t, e = {}) {
                return "number" == typeof t || "bigint" == typeof t ? l(t, e) : "string" == typeof t ? f(t, e) : "boolean" == typeof t ? u(t, e) : c(t, e)
            }

            function u(t, e = {}) {
                let r = `0x${Number(t)}`;
                return "number" == typeof e.size ? ((0, o.Yf)(r, {
                    size: e.size
                }), (0, i.vk)(r, {
                    size: e.size
                })) : r
            }

            function c(t, e = {}) {
                let r = "";
                for (let e = 0; e < t.length; e++) r += s[t[e]];
                let n = `0x${r}`;
                return "number" == typeof e.size ? ((0, o.Yf)(n, {
                    size: e.size
                }), (0, i.vk)(n, {
                    dir: "right",
                    size: e.size
                })) : n
            }

            function l(t, e = {}) {
                let r;
                let {
                    signed: o,
                    size: s
                } = e, a = BigInt(t);
                s ? r = o ? (1 n << 8 n * BigInt(s) - 1 n) - 1 n : 2 n ** (8 n * BigInt(s)) - 1 n : "number" == typeof t && (r = BigInt(Number.MAX_SAFE_INTEGER));
                let u = "bigint" == typeof r && o ? -r - 1 n : 0;
                if (r && a > r || a < u) {
                    let e = "bigint" == typeof t ? "n" : "";
                    throw new n.J5({
                        max: r ? `${r}${e}` : void 0,
                        min: `${u}${e}`,
                        signed: o,
                        size: s,
                        value: `${t}${e}`
                    })
                }
                let c = `0x${(o&&a<0?(1n<<BigInt(8*s))+BigInt(a):a).toString(16)}`;
                return s ? (0, i.vk)(c, {
                    size: s
                }) : c
            }
            let h = new TextEncoder;

            function f(t, e = {}) {
                return c(h.encode(t), e)
            }
        },
        18856: function(t, e, r) {
            "use strict";
            r.d(e, {
                k: function() {
                    return o
                }
            });
            var n = r(75921),
                i = r(78125);

            function o(t, e) {
                let r = (t.details || "").toLowerCase(),
                    o = t.walk(t => t.code === i.M_.code);
                return o instanceof n.G ? new i.M_({
                    cause: t,
                    message: o.details
                }) : i.M_.nodeMessage.test(r) ? new i.M_({
                    cause: t,
                    message: t.details
                }) : i.Hh.nodeMessage.test(r) ? new i.Hh({
                    cause: t,
                    maxFeePerGas: e ? .maxFeePerGas
                }) : i.G$.nodeMessage.test(r) ? new i.G$({
                    cause: t,
                    maxFeePerGas: e ? .maxFeePerGas
                }) : i.ZI.nodeMessage.test(r) ? new i.ZI({
                    cause: t,
                    nonce: e ? .nonce
                }) : i.vU.nodeMessage.test(r) ? new i.vU({
                    cause: t,
                    nonce: e ? .nonce
                }) : i.se.nodeMessage.test(r) ? new i.se({
                    cause: t,
                    nonce: e ? .nonce
                }) : i.C_.nodeMessage.test(r) ? new i.C_({
                    cause: t
                }) : i.WF.nodeMessage.test(r) ? new i.WF({
                    cause: t,
                    gas: e ? .gas
                }) : i.dR.nodeMessage.test(r) ? new i.dR({
                    cause: t,
                    gas: e ? .gas
                }) : i.pZ.nodeMessage.test(r) ? new i.pZ({
                    cause: t
                }) : i.cs.nodeMessage.test(r) ? new i.cs({
                    cause: t,
                    maxFeePerGas: e ? .maxFeePerGas,
                    maxPriorityFeePerGas: e ? .maxPriorityFeePerGas
                }) : new i.cj({
                    cause: t
                })
            }
        },
        59069: function(t, e, r) {
            "use strict";
            r.d(e, {
                G: function() {
                    return s
                },
                Z: function() {
                    return o
                }
            });
            var n = r(94870),
                i = r(27481);

            function o(t) {
                let e = t.transactions ? .map(t => "string" == typeof t ? t : i.Tr(t));
                return { ...t,
                    baseFeePerGas: t.baseFeePerGas ? BigInt(t.baseFeePerGas) : null,
                    difficulty: t.difficulty ? BigInt(t.difficulty) : void 0,
                    gasLimit: t.gasLimit ? BigInt(t.gasLimit) : void 0,
                    gasUsed: t.gasUsed ? BigInt(t.gasUsed) : void 0,
                    hash: t.hash ? t.hash : null,
                    logsBloom: t.logsBloom ? t.logsBloom : null,
                    nonce: t.nonce ? t.nonce : null,
                    number: t.number ? BigInt(t.number) : null,
                    size: t.size ? BigInt(t.size) : void 0,
                    timestamp: t.timestamp ? BigInt(t.timestamp) : void 0,
                    transactions: e,
                    totalDifficulty: t.totalDifficulty ? BigInt(t.totalDifficulty) : null
                }
            }
            let s = (0, n.$)("block", o)
        },
        70878: function(t, e, r) {
            "use strict";

            function n(t, {
                format: e
            }) {
                if (!e) return {};
                let r = {};

                function n(e) {
                    for (let i of Object.keys(e)) i in t && (r[i] = t[i]), e[i] && "object" == typeof e[i] && !Array.isArray(e[i]) && n(e[i])
                }
                return n(e(t || {})), r
            }
            r.d(e, {
                K: function() {
                    return n
                }
            })
        },
        94870: function(t, e, r) {
            "use strict";

            function n(t, e) {
                return ({
                    exclude: r,
                    format: n
                }) => ({
                    exclude: r,
                    format: t => {
                        let i = e(t);
                        if (r)
                            for (let t of r) delete i[t];
                        return { ...i,
                            ...n(t)
                        }
                    },
                    type: t
                })
            }
            r.d(e, {
                $: function() {
                    return n
                }
            })
        },
        55668: function(t, e, r) {
            "use strict";

            function n(t, {
                args: e,
                eventName: r
            } = {}) {
                return { ...t,
                    blockHash: t.blockHash ? t.blockHash : null,
                    blockNumber: t.blockNumber ? BigInt(t.blockNumber) : null,
                    logIndex: t.logIndex ? Number(t.logIndex) : null,
                    transactionHash: t.transactionHash ? t.transactionHash : null,
                    transactionIndex: t.transactionIndex ? Number(t.transactionIndex) : null,
                    ...r ? {
                        args: e,
                        eventName: r
                    } : {}
                }
            }
            r.d(e, {
                U: function() {
                    return n
                }
            })
        },
        27481: function(t, e, r) {
            "use strict";
            r.d(e, {
                Tr: function() {
                    return s
                },
                c8: function() {
                    return o
                },
                y_: function() {
                    return a
                }
            });
            var n = r(72932),
                i = r(94870);
            let o = {
                "0x0": "legacy",
                "0x1": "eip2930",
                "0x2": "eip1559"
            };

            function s(t) {
                let e = { ...t,
                    blockHash: t.blockHash ? t.blockHash : null,
                    blockNumber: t.blockNumber ? BigInt(t.blockNumber) : null,
                    chainId: t.chainId ? (0, n.ly)(t.chainId) : void 0,
                    gas: t.gas ? BigInt(t.gas) : void 0,
                    gasPrice: t.gasPrice ? BigInt(t.gasPrice) : void 0,
                    maxFeePerGas: t.maxFeePerGas ? BigInt(t.maxFeePerGas) : void 0,
                    maxPriorityFeePerGas: t.maxPriorityFeePerGas ? BigInt(t.maxPriorityFeePerGas) : void 0,
                    nonce: t.nonce ? (0, n.ly)(t.nonce) : void 0,
                    to: t.to ? t.to : null,
                    transactionIndex: t.transactionIndex ? Number(t.transactionIndex) : null,
                    type: t.type ? o[t.type] : void 0,
                    typeHex: t.type ? t.type : void 0,
                    value: t.value ? BigInt(t.value) : void 0,
                    v: t.v ? BigInt(t.v) : void 0
                };
                return e.yParity = (() => {
                    if (t.yParity) return Number(t.yParity);
                    if ("bigint" == typeof e.v) {
                        if (0 n === e.v || 27 n === e.v) return 0;
                        if (1 n === e.v || 28 n === e.v) return 1;
                        if (e.v >= 35 n) return e.v % 2 n === 0 n ? 1 : 0
                    }
                })(), "legacy" === e.type && (delete e.accessList, delete e.maxFeePerGas, delete e.maxPriorityFeePerGas, delete e.yParity), "eip2930" === e.type && (delete e.maxFeePerGas, delete e.maxPriorityFeePerGas), e
            }
            let a = (0, i.$)("transaction", s)
        },
        13550: function(t, e, r) {
            "use strict";
            r.d(e, {
                d: function() {
                    return c
                },
                f: function() {
                    return u
                }
            });
            var n = r(72932),
                i = r(94870),
                o = r(55668),
                s = r(27481);
            let a = {
                "0x0": "reverted",
                "0x1": "success"
            };

            function u(t) {
                return { ...t,
                    blockNumber: t.blockNumber ? BigInt(t.blockNumber) : null,
                    contractAddress: t.contractAddress ? t.contractAddress : null,
                    cumulativeGasUsed: t.cumulativeGasUsed ? BigInt(t.cumulativeGasUsed) : null,
                    effectiveGasPrice: t.effectiveGasPrice ? BigInt(t.effectiveGasPrice) : null,
                    gasUsed: t.gasUsed ? BigInt(t.gasUsed) : null,
                    logs: t.logs ? t.logs.map(t => (0, o.U)(t)) : null,
                    to: t.to ? t.to : null,
                    transactionIndex: t.transactionIndex ? (0, n.ly)(t.transactionIndex) : null,
                    status: t.status ? a[t.status] : null,
                    type: t.type ? s.c8[t.type] || t.type : null
                }
            }
            let c = (0, i.$)("transactionReceipt", u)
        },
        92614: function(t, e, r) {
            "use strict";
            r.d(e, {
                tG: function() {
                    return o
                }
            });
            var n = r(59455);
            let i = {
                legacy: "0x0",
                eip2930: "0x1",
                eip1559: "0x2"
            };

            function o(t) {
                return { ...t,
                    gas: void 0 !== t.gas ? (0, n.eC)(t.gas) : void 0,
                    gasPrice: void 0 !== t.gasPrice ? (0, n.eC)(t.gasPrice) : void 0,
                    maxFeePerGas: void 0 !== t.maxFeePerGas ? (0, n.eC)(t.maxFeePerGas) : void 0,
                    maxPriorityFeePerGas: void 0 !== t.maxPriorityFeePerGas ? (0, n.eC)(t.maxPriorityFeePerGas) : void 0,
                    nonce: void 0 !== t.nonce ? (0, n.eC)(t.nonce) : void 0,
                    type: void 0 !== t.type ? i[t.type] : void 0,
                    value: void 0 !== t.value ? (0, n.eC)(t.value) : void 0
                }
            }
        },
        82645: function(t, e, r) {
            "use strict";

            function n(t, e, r) {
                return n => t[e.name || r] ? .(n) ? ? e(t, n)
            }
            r.d(e, {
                s: function() {
                    return n
                }
            })
        },
        10683: function(t, e, r) {
            "use strict";
            r.d(e, {
                e: function() {
                    return u
                }
            });
            var n = r(44659),
                i = r(26373);
            let o = t => (0, i.r)(t);
            var s = r(10208);
            let a = t => (0, s.w)((0, n.O0)(t)),
                u = t => a(o(t))
        },
        11223: function(t, e, r) {
            "use strict";
            r.d(e, {
                o: function() {
                    return u
                }
            });
            var n = r(69921),
                i = r(44659),
                o = r(26373),
                s = r(10208);
            let a = t => (0, s.w)((0, i.O0)(t)),
                u = t => (0, n.tP)(a((0, o.r)(t)), 0, 4)
        },
        26373: function(t, e, r) {
            "use strict";

            function n(t, e) {
                let r = t.exec(e);
                return r ? .groups
            }
            r.d(e, {
                r: function() {
                    return l
                }
            });
            let i = /^tuple(?<array>(\[(\d*)\])*)$/;

            function o(t) {
                let e = t.type;
                if (i.test(t.type) && "components" in t) {
                    e = "(";
                    let r = t.components.length;
                    for (let n = 0; n < r; n++) e += o(t.components[n]), n < r - 1 && (e += ", ");
                    let s = n(i, t.type);
                    return e += `)${s?.array??""}`, o({ ...t,
                        type: e
                    })
                }
                return ("indexed" in t && t.indexed && (e = `${e} indexed`), t.name) ? `${e} ${t.name}` : e
            }

            function s(t) {
                let e = "",
                    r = t.length;
                for (let n = 0; n < r; n++) e += o(t[n]), n !== r - 1 && (e += ", ");
                return e
            }

            function a(t) {
                return "function" === t.type ? `function ${t.name}(${s(t.inputs)})${t.stateMutability&&"nonpayable"!==t.stateMutability?` ${t.stateMutability}`:""}${t.outputs.length?` returns (${s(t.outputs)})`:""}` : "event" === t.type ? `event ${t.name}(${s(t.inputs)})` : "error" === t.type ? `error ${t.name}(${s(t.inputs)})` : "constructor" === t.type ? `constructor(${s(t.inputs)})${"payable"===t.stateMutability?" payable":""}` : "fallback" === t.type ? "fallback()" : "receive() external payable"
            }
            var u = r(75921);

            function c(t) {
                let e = !0,
                    r = "",
                    n = 0,
                    i = "",
                    o = !1;
                for (let s = 0; s < t.length; s++) {
                    let a = t[s];
                    if (["(", ")", ","].includes(a) && (e = !0), "(" === a && n++, ")" === a && n--, e) {
                        if (0 === n) {
                            if (" " === a && ["event", "function", ""].includes(i)) i = "";
                            else if (i += a, ")" === a) {
                                o = !0;
                                break
                            }
                            continue
                        }
                        if (" " === a) {
                            "," !== t[s - 1] && "," !== r && ",(" !== r && (r = "", e = !1);
                            continue
                        }
                        i += a, r += a
                    }
                }
                if (!o) throw new u.G("Unable to normalize signature.");
                return i
            }
            let l = t => c("string" == typeof t ? t : a(t))
        },
        10208: function(t, e, r) {
            "use strict";
            let n, i, o;

            function s(t) {
                if (!Number.isSafeInteger(t) || t < 0) throw Error(`Wrong positive integer: ${t}`)
            }

            function a(t, ...e) {
                if (!(t instanceof Uint8Array)) throw Error("Expected Uint8Array");
                if (e.length > 0 && !e.includes(t.length)) throw Error(`Expected Uint8Array of length ${e}, not of length=${t.length}`)
            }

            function u(t, e = !0) {
                if (t.destroyed) throw Error("Hash instance has been destroyed");
                if (e && t.finished) throw Error("Hash#digest() has already been called")
            }

            function c(t, e) {
                a(t);
                let r = e.outputLen;
                if (t.length < r) throw Error(`digestInto() expects output buffer of length at least ${r}`)
            }
            r.d(e, {
                w: function() {
                    return W
                }
            });
            let l = BigInt(4294967296 - 1),
                h = BigInt(32);

            function f(t, e = !1) {
                return e ? {
                    h: Number(t & l),
                    l: Number(t >> h & l)
                } : {
                    h: 0 | Number(t >> h & l),
                    l: 0 | Number(t & l)
                }
            }

            function d(t, e = !1) {
                let r = new Uint32Array(t.length),
                    n = new Uint32Array(t.length);
                for (let i = 0; i < t.length; i++) {
                    let {
                        h: o,
                        l: s
                    } = f(t[i], e);
                    [r[i], n[i]] = [o, s]
                }
                return [r, n]
            }
            let p = (t, e, r) => t << r | e >>> 32 - r,
                y = (t, e, r) => e << r | t >>> 32 - r,
                m = (t, e, r) => e << r - 32 | t >>> 64 - r,
                b = (t, e, r) => t << r - 32 | e >>> 64 - r,
                g = t => t instanceof Uint8Array,
                w = t => new Uint32Array(t.buffer, t.byteOffset, Math.floor(t.byteLength / 4));
            if (68 !== new Uint8Array(new Uint32Array([287454020]).buffer)[0]) throw Error("Non little-endian hardware is not supported");

            function v(t) {
                if ("string" != typeof t) throw Error(`utf8ToBytes expected string, got ${typeof t}`);
                return new Uint8Array(new TextEncoder().encode(t))
            }

            function E(t) {
                if ("string" == typeof t && (t = v(t)), !g(t)) throw Error(`expected Uint8Array, got ${typeof t}`);
                return t
            }
            class x {
                clone() {
                    return this._cloneInto()
                }
            }

            function S(t) {
                let e = e => t().update(E(e)).digest(),
                    r = t();
                return e.outputLen = r.outputLen, e.blockLen = r.blockLen, e.create = () => t(), e
            }
            let [O, C, _] = [
                [],
                [],
                []
            ], A = BigInt(0), P = BigInt(1), k = BigInt(2), D = BigInt(7), I = BigInt(256), M = BigInt(113);
            for (let t = 0, e = P, r = 1, n = 0; t < 24; t++) {
                [r, n] = [n, (2 * r + 3 * n) % 5], O.push(2 * (5 * n + r)), C.push((t + 1) * (t + 2) / 2 % 64);
                let i = A;
                for (let t = 0; t < 7; t++)(e = (e << P ^ (e >> D) * M) % I) & k && (i ^= P << (P << BigInt(t)) - P);
                _.push(i)
            }
            let [B, R] = d(_, !0), T = (t, e, r) => r > 32 ? m(t, e, r) : p(t, e, r), j = (t, e, r) => r > 32 ? b(t, e, r) : y(t, e, r);

            function U(t, e = 24) {
                let r = new Uint32Array(10);
                for (let n = 24 - e; n < 24; n++) {
                    for (let e = 0; e < 10; e++) r[e] = t[e] ^ t[e + 10] ^ t[e + 20] ^ t[e + 30] ^ t[e + 40];
                    for (let e = 0; e < 10; e += 2) {
                        let n = (e + 8) % 10,
                            i = (e + 2) % 10,
                            o = r[i],
                            s = r[i + 1],
                            a = T(o, s, 1) ^ r[n],
                            u = j(o, s, 1) ^ r[n + 1];
                        for (let r = 0; r < 50; r += 10) t[e + r] ^= a, t[e + r + 1] ^= u
                    }
                    let e = t[2],
                        i = t[3];
                    for (let r = 0; r < 24; r++) {
                        let n = C[r],
                            o = T(e, i, n),
                            s = j(e, i, n),
                            a = O[r];
                        e = t[a], i = t[a + 1], t[a] = o, t[a + 1] = s
                    }
                    for (let e = 0; e < 50; e += 10) {
                        for (let n = 0; n < 10; n++) r[n] = t[e + n];
                        for (let n = 0; n < 10; n++) t[e + n] ^= ~r[(n + 2) % 10] & r[(n + 4) % 10]
                    }
                    t[0] ^= B[n], t[1] ^= R[n]
                }
                r.fill(0)
            }
            class N extends x {
                constructor(t, e, r, n = !1, i = 24) {
                    if (super(), this.blockLen = t, this.suffix = e, this.outputLen = r, this.enableXOF = n, this.rounds = i, this.pos = 0, this.posOut = 0, this.finished = !1, this.destroyed = !1, s(r), 0 >= this.blockLen || this.blockLen >= 200) throw Error("Sha3 supports only keccak-f1600 function");
                    this.state = new Uint8Array(200), this.state32 = w(this.state)
                }
                keccak() {
                    U(this.state32, this.rounds), this.posOut = 0, this.pos = 0
                }
                update(t) {
                    u(this);
                    let {
                        blockLen: e,
                        state: r
                    } = this, n = (t = E(t)).length;
                    for (let i = 0; i < n;) {
                        let o = Math.min(e - this.pos, n - i);
                        for (let e = 0; e < o; e++) r[this.pos++] ^= t[i++];
                        this.pos === e && this.keccak()
                    }
                    return this
                }
                finish() {
                    if (this.finished) return;
                    this.finished = !0;
                    let {
                        state: t,
                        suffix: e,
                        pos: r,
                        blockLen: n
                    } = this;
                    t[r] ^= e, (128 & e) != 0 && r === n - 1 && this.keccak(), t[n - 1] ^= 128, this.keccak()
                }
                writeInto(t) {
                    u(this, !1), a(t), this.finish();
                    let e = this.state,
                        {
                            blockLen: r
                        } = this;
                    for (let n = 0, i = t.length; n < i;) {
                        this.posOut >= r && this.keccak();
                        let o = Math.min(r - this.posOut, i - n);
                        t.set(e.subarray(this.posOut, this.posOut + o), n), this.posOut += o, n += o
                    }
                    return t
                }
                xofInto(t) {
                    if (!this.enableXOF) throw Error("XOF is not possible for this instance");
                    return this.writeInto(t)
                }
                xof(t) {
                    return s(t), this.xofInto(new Uint8Array(t))
                }
                digestInto(t) {
                    if (c(t, this), this.finished) throw Error("digest() was already called");
                    return this.writeInto(t), this.destroy(), t
                }
                digest() {
                    return this.digestInto(new Uint8Array(this.outputLen))
                }
                destroy() {
                    this.destroyed = !0, this.state.fill(0)
                }
                _cloneInto(t) {
                    let {
                        blockLen: e,
                        suffix: r,
                        outputLen: n,
                        rounds: i,
                        enableXOF: o
                    } = this;
                    return t || (t = new N(e, r, n, o, i)), t.state32.set(this.state32), t.pos = this.pos, t.posOut = this.posOut, t.finished = this.finished, t.rounds = i, t.suffix = r, t.outputLen = n, t.enableXOF = o, t.destroyed = this.destroyed, t
                }
            }
            let F = (n = 1, i = 136, o = 32, S(() => new N(i, n, o)));
            var L = r(93610),
                q = r(44659),
                $ = r(59455);

            function W(t, e) {
                let r = e || "hex",
                    n = F((0, L.v)(t, {
                        strict: !1
                    }) ? (0, q.O0)(t) : t);
                return "bytes" === r ? n : (0, $.NC)(n)
            }
        },
        43226: function(t, e, r) {
            "use strict";
            r.d(e, {
                S: function() {
                    return i
                }
            });
            let n = new Map;

            function i({
                fn: t,
                id: e,
                shouldSplitBatch: r,
                wait: i = 0,
                sort: o
            }) {
                let s = async () => {
                        let e = c();
                        a();
                        let r = e.map(({
                            args: t
                        }) => t);
                        0 !== r.length && t(r).then(t => {
                            o && Array.isArray(t) && t.sort(o);
                            for (let r = 0; r < e.length; r++) {
                                let {
                                    pendingPromise: n
                                } = e[r];
                                n.resolve ? .([t[r], t])
                            }
                        }).catch(t => {
                            for (let r = 0; r < e.length; r++) {
                                let {
                                    pendingPromise: n
                                } = e[r];
                                n.reject ? .(t)
                            }
                        })
                    },
                    a = () => n.delete(e),
                    u = () => c().map(({
                        args: t
                    }) => t),
                    c = () => n.get(e) || [],
                    l = t => n.set(e, [...c(), t]);
                return {
                    flush: a,
                    async schedule(t) {
                        let e = {},
                            n = new Promise((t, r) => {
                                e.resolve = t, e.reject = r
                            });
                        return (r ? .([...u(), t]) && s(), c().length > 0) ? l({
                            args: t,
                            pendingPromise: e
                        }) : (l({
                            args: t,
                            pendingPromise: e
                        }), setTimeout(s, i)), n
                    }
                }
            }
        },
        49287: function(t, e, r) {
            "use strict";
            r.d(e, {
                J: function() {
                    return i
                }
            });
            var n = r(33457);

            function i(t, {
                delay: e = 100,
                retryCount: r = 2,
                shouldRetry: i = () => !0
            } = {}) {
                return new Promise((o, s) => {
                    let a = async ({
                        count: u = 0
                    } = {}) => {
                        let c = async ({
                            error: t
                        }) => {
                            let r = "function" == typeof e ? e({
                                count: u,
                                error: t
                            }) : e;
                            r && await (0, n.D)(r), a({
                                count: u + 1
                            })
                        };
                        try {
                            let e = await t();
                            o(e)
                        } catch (t) {
                            if (u < r && await i({
                                    count: u,
                                    error: t
                                })) return c({
                                error: t
                            });
                            s(t)
                        }
                    };
                    a()
                })
            }
        },
        31853: function(t, e, r) {
            "use strict";
            r.d(e, {
                P: function() {
                    return n
                }
            });
            let n = (t, e, r) => JSON.stringify(t, (t, r) => {
                let n = "bigint" == typeof r ? r.toString() : r;
                return "function" == typeof e ? e(t, n) : n
            }, r)
        },
        54605: function(t, e, r) {
            "use strict";
            r.d(e, {
                F: function() {
                    return u
                }
            });
            var n = r(19775),
                i = r(10052),
                o = r(78125),
                s = r(63228),
                a = r(4012);

            function u(t) {
                let {
                    account: e,
                    gasPrice: r,
                    maxFeePerGas: u,
                    maxPriorityFeePerGas: c,
                    to: l
                } = t, h = e ? (0, n.T)(e) : void 0;
                if (h && !(0, a.U)(h.address)) throw new i.b({
                    address: h.address
                });
                if (l && !(0, a.U)(l)) throw new i.b({
                    address: l
                });
                if (void 0 !== r && (void 0 !== u || void 0 !== c)) throw new s.xY;
                if (u && u > 2 n ** 256 n - 1 n) throw new o.Hh({
                    maxFeePerGas: u
                });
                if (c && u && c > u) throw new o.cs({
                    maxFeePerGas: u,
                    maxPriorityFeePerGas: c
                })
            }
        },
        15209: function(t, e, r) {
            "use strict";
            r.d(e, {
                cj: function() {
                    return h
                },
                iC: function() {
                    return l
                }
            });
            var n = r(65531),
                i = r(10052),
                o = r(4012),
                s = r(20556),
                a = r(59455);
            let u = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/,
                c = /^(u?int)(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/;

            function l({
                domain: t,
                message: e,
                primaryType: r,
                types: l
            }) {
                let h = l,
                    f = (t, e) => {
                        for (let r of t) {
                            let {
                                name: t,
                                type: l
                            } = r, d = l, p = e[t], y = d.match(c);
                            if (y && ("number" == typeof p || "bigint" == typeof p)) {
                                let [t, e, r] = y;
                                (0, a.eC)(p, {
                                    signed: "int" === e,
                                    size: parseInt(r) / 8
                                })
                            }
                            if ("address" === d && "string" == typeof p && !(0, o.U)(p)) throw new i.b({
                                address: p
                            });
                            let m = d.match(u);
                            if (m) {
                                let [t, e] = m;
                                if (e && (0, s.d)(p) !== parseInt(e)) throw new n.KY({
                                    expectedSize: parseInt(e),
                                    givenSize: (0, s.d)(p)
                                })
                            }
                            let b = h[d];
                            b && f(b, p)
                        }
                    };
                h.EIP712Domain && t && f(h.EIP712Domain, t), "EIP712Domain" !== r && f(h[r], e)
            }

            function h({
                domain: t
            }) {
                return ["string" == typeof t ? .name && {
                    name: "name",
                    type: "string"
                }, t ? .version && {
                    name: "version",
                    type: "string"
                }, "number" == typeof t ? .chainId && {
                    name: "chainId",
                    type: "uint256"
                }, t ? .verifyingContract && {
                    name: "verifyingContract",
                    type: "address"
                }, t ? .salt && {
                    name: "salt",
                    type: "bytes32"
                }].filter(Boolean)
            }
        },
        71282: function(t, e, r) {
            "use strict";
            r.d(e, {
                d: function() {
                    return o
                }
            });
            var n = r(98173),
                i = r(39502);

            function o(t, e = "wei") {
                return (0, i.b)(t, n.ez[e])
            }
        },
        29707: function(t, e, r) {
            "use strict";
            r.d(e, {
                o: function() {
                    return o
                }
            });
            var n = r(98173),
                i = r(39502);

            function o(t, e = "wei") {
                return (0, i.b)(t, n.Zn[e])
            }
        },
        39502: function(t, e, r) {
            "use strict";

            function n(t, e) {
                let r = t.toString(),
                    n = r.startsWith("-");
                n && (r = r.slice(1));
                let [i, o] = [(r = r.padStart(e, "0")).slice(0, r.length - e), r.slice(r.length - e)];
                return o = o.replace(/(0+)$/, ""), `${n?"-":""}${i||"0"}${o?`.${o}`:""}`
            }
            r.d(e, {
                b: function() {
                    return n
                }
            })
        },
        68768: function(t, e, r) {
            "use strict";

            function n(t, e) {
                let [r, n = "0"] = t.split("."), i = r.startsWith("-");
                if (i && (r = r.slice(1)), n = n.replace(/(0+)$/, ""), 0 === e) 1 === Math.round(Number(`.${n}`)) && (r = `${BigInt(r)+1n}`), n = "";
                else if (n.length > e) {
                    let [t, i, o] = [n.slice(0, e - 1), n.slice(e - 1, e), n.slice(e)], s = Math.round(Number(`${i}.${o}`));
                    (n = s > 9 ? `${BigInt(t)+BigInt(1)}0`.padStart(t.length + 1, "0") : `${t}${s}`).length > e && (n = n.slice(1), r = `${BigInt(r)+1n}`), n = n.slice(0, e)
                } else n = n.padEnd(e, "0");
                return BigInt(`${i?"-":""}${r}${n}`)
            }
            r.d(e, {
                v: function() {
                    return n
                }
            })
        },
        33457: function(t, e, r) {
            "use strict";
            async function n(t) {
                return new Promise(e => setTimeout(e, t))
            }
            r.d(e, {
                D: function() {
                    return n
                }
            })
        },
        43867: function(t, e, r) {
            "use strict";

            function n({
                storage: t,
                key: e = "REACT_QUERY_OFFLINE_CACHE",
                throttleTime: r = 1e3,
                serialize: n = JSON.stringify,
                deserialize: s = JSON.parse,
                retry: a
            }) {
                if (t) {
                    let o = r => {
                        try {
                            t.setItem(e, n(r));
                            return
                        } catch (t) {
                            return t
                        }
                    };
                    return {
                        persistClient: i(t => {
                            let e = t,
                                r = o(e),
                                n = 0;
                            for (; r && e;) n++, (e = null == a ? void 0 : a({
                                persistedClient: e,
                                error: r,
                                errorCount: n
                            })) && (r = o(e))
                        }, r),
                        restoreClient: () => {
                            let r = t.getItem(e);
                            if (r) return s(r)
                        },
                        removeClient: () => {
                            t.removeItem(e)
                        }
                    }
                }
                return {
                    persistClient: o,
                    restoreClient: () => void 0,
                    removeClient: o
                }
            }

            function i(t, e = 100) {
                let r, n = null;
                return function(...i) {
                    r = i, null === n && (n = setTimeout(() => {
                        t(...r), n = null
                    }, e))
                }
            }

            function o() {}
            r.d(e, {
                eM: function() {
                    return tq
                },
                _g: function() {
                    return tN
                },
                mA: function() {
                    return ei
                },
                KQ: function() {
                    return ea
                },
                $4: function() {
                    return el
                },
                do: function() {
                    return eS
                },
                Dm: function() {
                    return e_
                },
                GG: function() {
                    return ek
                },
                qL: function() {
                    return ed
                },
                c9: function() {
                    return eM
                },
                F6: function() {
                    return eT
                },
                LN: function() {
                    return ep
                },
                t_: function() {
                    return t1
                },
                aM: function() {
                    return tX
                },
                QW: function() {
                    return eb
                },
                g0: function() {
                    return ev
                },
                BX: function() {
                    return eN
                },
                py: function() {
                    return t3
                }
            });
            let s = "undefined" == typeof window || "Deno" in window;

            function a() {}

            function u(t, e) {
                return "function" == typeof t ? t(e) : t
            }

            function c(t) {
                return "number" == typeof t && t >= 0 && t !== 1 / 0
            }

            function l(t, e) {
                return Math.max(t + (e || 0) - Date.now(), 0)
            }

            function h(t, e, r) {
                return C(t) ? "function" == typeof e ? { ...r,
                    queryKey: t,
                    queryFn: e
                } : { ...e,
                    queryKey: t
                } : t
            }

            function f(t, e, r) {
                return C(t) ? "function" == typeof e ? { ...r,
                    mutationKey: t,
                    mutationFn: e
                } : { ...e,
                    mutationKey: t
                } : "function" == typeof t ? { ...e,
                    mutationFn: t
                } : { ...t
                }
            }

            function d(t, e, r) {
                return C(t) ? [{ ...e,
                    queryKey: t
                }, r] : [t || {}, e]
            }

            function p(t, e) {
                let {
                    type: r = "all",
                    exact: n,
                    fetchStatus: i,
                    predicate: o,
                    queryKey: s,
                    stale: a
                } = t;
                if (C(s)) {
                    if (n) {
                        if (e.queryHash !== m(s, e.options)) return !1
                    } else if (!g(e.queryKey, s)) return !1
                }
                if ("all" !== r) {
                    let t = e.isActive();
                    if ("active" === r && !t || "inactive" === r && t) return !1
                }
                return ("boolean" != typeof a || e.isStale() === a) && (void 0 === i || i === e.state.fetchStatus) && (!o || !!o(e))
            }

            function y(t, e) {
                let {
                    exact: r,
                    fetching: n,
                    predicate: i,
                    mutationKey: o
                } = t;
                if (C(o)) {
                    if (!e.options.mutationKey) return !1;
                    if (r) {
                        if (b(e.options.mutationKey) !== b(o)) return !1
                    } else if (!g(e.options.mutationKey, o)) return !1
                }
                return ("boolean" != typeof n || "loading" === e.state.status === n) && (!i || !!i(e))
            }

            function m(t, e) {
                return ((null == e ? void 0 : e.queryKeyHashFn) || b)(t)
            }

            function b(t) {
                return JSON.stringify(t, (t, e) => S(e) ? Object.keys(e).sort().reduce((t, r) => (t[r] = e[r], t), {}) : e)
            }

            function g(t, e) {
                return w(t, e)
            }

            function w(t, e) {
                return t === e || typeof t == typeof e && !!t && !!e && "object" == typeof t && "object" == typeof e && !Object.keys(e).some(r => !w(t[r], e[r]))
            }

            function v(t, e) {
                if (t === e) return t;
                let r = x(t) && x(e);
                if (r || S(t) && S(e)) {
                    let n = r ? t.length : Object.keys(t).length,
                        i = r ? e : Object.keys(e),
                        o = i.length,
                        s = r ? [] : {},
                        a = 0;
                    for (let n = 0; n < o; n++) {
                        let o = r ? n : i[n];
                        s[o] = v(t[o], e[o]), s[o] === t[o] && a++
                    }
                    return n === o && a === n ? t : s
                }
                return e
            }

            function E(t, e) {
                if (t && !e || e && !t) return !1;
                for (let r in t)
                    if (t[r] !== e[r]) return !1;
                return !0
            }

            function x(t) {
                return Array.isArray(t) && t.length === Object.keys(t).length
            }

            function S(t) {
                if (!O(t)) return !1;
                let e = t.constructor;
                if (void 0 === e) return !0;
                let r = e.prototype;
                return !!(O(r) && r.hasOwnProperty("isPrototypeOf"))
            }

            function O(t) {
                return "[object Object]" === Object.prototype.toString.call(t)
            }

            function C(t) {
                return Array.isArray(t)
            }

            function _(t) {
                return new Promise(e => {
                    setTimeout(e, t)
                })
            }

            function A(t) {
                _(0).then(t)
            }

            function P() {
                if ("function" == typeof AbortController) return new AbortController
            }

            function k(t, e, r) {
                return null != r.isDataEqual && r.isDataEqual(t, e) ? t : "function" == typeof r.structuralSharing ? r.structuralSharing(t, e) : !1 !== r.structuralSharing ? v(t, e) : e
            }
            let D = console,
                I = function() {
                    let t = [],
                        e = 0,
                        r = t => {
                            t()
                        },
                        n = t => {
                            t()
                        },
                        i = n => {
                            e ? t.push(n) : A(() => {
                                r(n)
                            })
                        },
                        o = () => {
                            let e = t;
                            t = [], e.length && A(() => {
                                n(() => {
                                    e.forEach(t => {
                                        r(t)
                                    })
                                })
                            })
                        };
                    return {
                        batch: t => {
                            let r;
                            e++;
                            try {
                                r = t()
                            } finally {
                                --e || o()
                            }
                            return r
                        },
                        batchCalls: t => (...e) => {
                            i(() => {
                                t(...e)
                            })
                        },
                        schedule: i,
                        setNotifyFunction: t => {
                            r = t
                        },
                        setBatchNotifyFunction: t => {
                            n = t
                        }
                    }
                }();
            class M {
                constructor() {
                    this.listeners = new Set, this.subscribe = this.subscribe.bind(this)
                }
                subscribe(t) {
                    let e = {
                        listener: t
                    };
                    return this.listeners.add(e), this.onSubscribe(), () => {
                        this.listeners.delete(e), this.onUnsubscribe()
                    }
                }
                hasListeners() {
                    return this.listeners.size > 0
                }
                onSubscribe() {}
                onUnsubscribe() {}
            }
            class B extends M {
                constructor() {
                    super(), this.setup = t => {
                        if (!s && window.addEventListener) {
                            let e = () => t();
                            return window.addEventListener("visibilitychange", e, !1), window.addEventListener("focus", e, !1), () => {
                                window.removeEventListener("visibilitychange", e), window.removeEventListener("focus", e)
                            }
                        }
                    }
                }
                onSubscribe() {
                    this.cleanup || this.setEventListener(this.setup)
                }
                onUnsubscribe() {
                    if (!this.hasListeners()) {
                        var t;
                        null == (t = this.cleanup) || t.call(this), this.cleanup = void 0
                    }
                }
                setEventListener(t) {
                    var e;
                    this.setup = t, null == (e = this.cleanup) || e.call(this), this.cleanup = t(t => {
                        "boolean" == typeof t ? this.setFocused(t) : this.onFocus()
                    })
                }
                setFocused(t) {
                    this.focused !== t && (this.focused = t, this.onFocus())
                }
                onFocus() {
                    this.listeners.forEach(({
                        listener: t
                    }) => {
                        t()
                    })
                }
                isFocused() {
                    return "boolean" == typeof this.focused ? this.focused : "undefined" == typeof document || [void 0, "visible", "prerender"].includes(document.visibilityState)
                }
            }
            let R = new B,
                T = ["online", "offline"];
            class j extends M {
                constructor() {
                    super(), this.setup = t => {
                        if (!s && window.addEventListener) {
                            let e = () => t();
                            return T.forEach(t => {
                                window.addEventListener(t, e, !1)
                            }), () => {
                                T.forEach(t => {
                                    window.removeEventListener(t, e)
                                })
                            }
                        }
                    }
                }
                onSubscribe() {
                    this.cleanup || this.setEventListener(this.setup)
                }
                onUnsubscribe() {
                    if (!this.hasListeners()) {
                        var t;
                        null == (t = this.cleanup) || t.call(this), this.cleanup = void 0
                    }
                }
                setEventListener(t) {
                    var e;
                    this.setup = t, null == (e = this.cleanup) || e.call(this), this.cleanup = t(t => {
                        "boolean" == typeof t ? this.setOnline(t) : this.onOnline()
                    })
                }
                setOnline(t) {
                    this.online !== t && (this.online = t, this.onOnline())
                }
                onOnline() {
                    this.listeners.forEach(({
                        listener: t
                    }) => {
                        t()
                    })
                }
                isOnline() {
                    return "boolean" == typeof this.online ? this.online : "undefined" == typeof navigator || void 0 === navigator.onLine || navigator.onLine
                }
            }
            let U = new j;

            function N(t) {
                return Math.min(1e3 * 2 ** t, 3e4)
            }

            function F(t) {
                return (null != t ? t : "online") !== "online" || U.isOnline()
            }
            class L {
                constructor(t) {
                    this.revert = null == t ? void 0 : t.revert, this.silent = null == t ? void 0 : t.silent
                }
            }

            function q(t) {
                return t instanceof L
            }

            function $(t) {
                let e, r, n, i = !1,
                    o = 0,
                    s = !1,
                    a = new Promise((t, e) => {
                        r = t, n = e
                    }),
                    u = e => {
                        s || (d(new L(e)), null == t.abort || t.abort())
                    },
                    c = () => {
                        i = !0
                    },
                    l = () => {
                        i = !1
                    },
                    h = () => !R.isFocused() || "always" !== t.networkMode && !U.isOnline(),
                    f = n => {
                        s || (s = !0, null == t.onSuccess || t.onSuccess(n), null == e || e(), r(n))
                    },
                    d = r => {
                        s || (s = !0, null == t.onError || t.onError(r), null == e || e(), n(r))
                    },
                    p = () => new Promise(r => {
                        e = t => {
                            let e = s || !h();
                            return e && r(t), e
                        }, null == t.onPause || t.onPause()
                    }).then(() => {
                        e = void 0, s || null == t.onContinue || t.onContinue()
                    }),
                    y = () => {
                        let e;
                        if (!s) {
                            try {
                                e = t.fn()
                            } catch (t) {
                                e = Promise.reject(t)
                            }
                            Promise.resolve(e).then(f).catch(e => {
                                var r, n;
                                if (s) return;
                                let a = null != (r = t.retry) ? r : 3,
                                    u = null != (n = t.retryDelay) ? n : N,
                                    c = "function" == typeof u ? u(o, e) : u,
                                    l = !0 === a || "number" == typeof a && o < a || "function" == typeof a && a(o, e);
                                if (i || !l) {
                                    d(e);
                                    return
                                }
                                o++, null == t.onFail || t.onFail(o, e), _(c).then(() => {
                                    if (h()) return p()
                                }).then(() => {
                                    i ? d(e) : y()
                                })
                            })
                        }
                    };
                return F(t.networkMode) ? y() : p().then(y), {
                    promise: a,
                    cancel: u,
                    continue: () => (null == e ? void 0 : e()) ? a : Promise.resolve(),
                    cancelRetry: c,
                    continueRetry: l
                }
            }
            class W {
                destroy() {
                    this.clearGcTimeout()
                }
                scheduleGc() {
                    this.clearGcTimeout(), c(this.cacheTime) && (this.gcTimeout = setTimeout(() => {
                        this.optionalRemove()
                    }, this.cacheTime))
                }
                updateCacheTime(t) {
                    this.cacheTime = Math.max(this.cacheTime || 0, null != t ? t : s ? 1 / 0 : 3e5)
                }
                clearGcTimeout() {
                    this.gcTimeout && (clearTimeout(this.gcTimeout), this.gcTimeout = void 0)
                }
            }
            class G extends W {
                constructor(t) {
                    super(), this.abortSignalConsumed = !1, this.defaultOptions = t.defaultOptions, this.setOptions(t.options), this.observers = [], this.cache = t.cache, this.logger = t.logger || D, this.queryKey = t.queryKey, this.queryHash = t.queryHash, this.initialState = t.state || z(this.options), this.state = this.initialState, this.scheduleGc()
                }
                get meta() {
                    return this.options.meta
                }
                setOptions(t) {
                    this.options = { ...this.defaultOptions,
                        ...t
                    }, this.updateCacheTime(this.options.cacheTime)
                }
                optionalRemove() {
                    this.observers.length || "idle" !== this.state.fetchStatus || this.cache.remove(this)
                }
                setData(t, e) {
                    let r = k(this.state.data, t, this.options);
                    return this.dispatch({
                        data: r,
                        type: "success",
                        dataUpdatedAt: null == e ? void 0 : e.updatedAt,
                        manual: null == e ? void 0 : e.manual
                    }), r
                }
                setState(t, e) {
                    this.dispatch({
                        type: "setState",
                        state: t,
                        setStateOptions: e
                    })
                }
                cancel(t) {
                    var e;
                    let r = this.promise;
                    return null == (e = this.retryer) || e.cancel(t), r ? r.then(a).catch(a) : Promise.resolve()
                }
                destroy() {
                    super.destroy(), this.cancel({
                        silent: !0
                    })
                }
                reset() {
                    this.destroy(), this.setState(this.initialState)
                }
                isActive() {
                    return this.observers.some(t => !1 !== t.options.enabled)
                }
                isDisabled() {
                    return this.getObserversCount() > 0 && !this.isActive()
                }
                isStale() {
                    return this.state.isInvalidated || !this.state.dataUpdatedAt || this.observers.some(t => t.getCurrentResult().isStale)
                }
                isStaleByTime(t = 0) {
                    return this.state.isInvalidated || !this.state.dataUpdatedAt || !l(this.state.dataUpdatedAt, t)
                }
                onFocus() {
                    var t;
                    let e = this.observers.find(t => t.shouldFetchOnWindowFocus());
                    e && e.refetch({
                        cancelRefetch: !1
                    }), null == (t = this.retryer) || t.continue()
                }
                onOnline() {
                    var t;
                    let e = this.observers.find(t => t.shouldFetchOnReconnect());
                    e && e.refetch({
                        cancelRefetch: !1
                    }), null == (t = this.retryer) || t.continue()
                }
                addObserver(t) {
                    this.observers.includes(t) || (this.observers.push(t), this.clearGcTimeout(), this.cache.notify({
                        type: "observerAdded",
                        query: this,
                        observer: t
                    }))
                }
                removeObserver(t) {
                    this.observers.includes(t) && (this.observers = this.observers.filter(e => e !== t), this.observers.length || (this.retryer && (this.abortSignalConsumed ? this.retryer.cancel({
                        revert: !0
                    }) : this.retryer.cancelRetry()), this.scheduleGc()), this.cache.notify({
                        type: "observerRemoved",
                        query: this,
                        observer: t
                    }))
                }
                getObserversCount() {
                    return this.observers.length
                }
                invalidate() {
                    this.state.isInvalidated || this.dispatch({
                        type: "invalidate"
                    })
                }
                fetch(t, e) {
                    var r, n, i, o;
                    if ("idle" !== this.state.fetchStatus) {
                        if (this.state.dataUpdatedAt && null != e && e.cancelRefetch) this.cancel({
                            silent: !0
                        });
                        else if (this.promise) return null == (i = this.retryer) || i.continueRetry(), this.promise
                    }
                    if (t && this.setOptions(t), !this.options.queryFn) {
                        let t = this.observers.find(t => t.options.queryFn);
                        t && this.setOptions(t.options)
                    }
                    let s = P(),
                        a = {
                            queryKey: this.queryKey,
                            pageParam: void 0,
                            meta: this.meta
                        },
                        u = t => {
                            Object.defineProperty(t, "signal", {
                                enumerable: !0,
                                get: () => {
                                    if (s) return this.abortSignalConsumed = !0, s.signal
                                }
                            })
                        };
                    u(a);
                    let c = () => this.options.queryFn ? (this.abortSignalConsumed = !1, this.options.queryFn(a)) : Promise.reject("Missing queryFn for queryKey '" + this.options.queryHash + "'"),
                        l = {
                            fetchOptions: e,
                            options: this.options,
                            queryKey: this.queryKey,
                            state: this.state,
                            fetchFn: c
                        };
                    u(l), null == (r = this.options.behavior) || r.onFetch(l), this.revertState = this.state, ("idle" === this.state.fetchStatus || this.state.fetchMeta !== (null == (n = l.fetchOptions) ? void 0 : n.meta)) && this.dispatch({
                        type: "fetch",
                        meta: null == (o = l.fetchOptions) ? void 0 : o.meta
                    });
                    let h = t => {
                        if (q(t) && t.silent || this.dispatch({
                                type: "error",
                                error: t
                            }), !q(t)) {
                            var e, r, n, i;
                            null == (e = (r = this.cache.config).onError) || e.call(r, t, this), null == (n = (i = this.cache.config).onSettled) || n.call(i, this.state.data, t, this)
                        }
                        this.isFetchingOptimistic || this.scheduleGc(), this.isFetchingOptimistic = !1
                    };
                    return this.retryer = $({
                        fn: l.fetchFn,
                        abort: null == s ? void 0 : s.abort.bind(s),
                        onSuccess: t => {
                            var e, r, n, i;
                            if (void 0 === t) {
                                h(Error(this.queryHash + " data is undefined"));
                                return
                            }
                            this.setData(t), null == (e = (r = this.cache.config).onSuccess) || e.call(r, t, this), null == (n = (i = this.cache.config).onSettled) || n.call(i, t, this.state.error, this), this.isFetchingOptimistic || this.scheduleGc(), this.isFetchingOptimistic = !1
                        },
                        onError: h,
                        onFail: (t, e) => {
                            this.dispatch({
                                type: "failed",
                                failureCount: t,
                                error: e
                            })
                        },
                        onPause: () => {
                            this.dispatch({
                                type: "pause"
                            })
                        },
                        onContinue: () => {
                            this.dispatch({
                                type: "continue"
                            })
                        },
                        retry: l.options.retry,
                        retryDelay: l.options.retryDelay,
                        networkMode: l.options.networkMode
                    }), this.promise = this.retryer.promise, this.promise
                }
                dispatch(t) {
                    let e = e => {
                        var r, n;
                        switch (t.type) {
                            case "failed":
                                return { ...e,
                                    fetchFailureCount: t.failureCount,
                                    fetchFailureReason: t.error
                                };
                            case "pause":
                                return { ...e,
                                    fetchStatus: "paused"
                                };
                            case "continue":
                                return { ...e,
                                    fetchStatus: "fetching"
                                };
                            case "fetch":
                                return { ...e,
                                    fetchFailureCount: 0,
                                    fetchFailureReason: null,
                                    fetchMeta: null != (r = t.meta) ? r : null,
                                    fetchStatus: F(this.options.networkMode) ? "fetching" : "paused",
                                    ...!e.dataUpdatedAt && {
                                        error: null,
                                        status: "loading"
                                    }
                                };
                            case "success":
                                return { ...e,
                                    data: t.data,
                                    dataUpdateCount: e.dataUpdateCount + 1,
                                    dataUpdatedAt: null != (n = t.dataUpdatedAt) ? n : Date.now(),
                                    error: null,
                                    isInvalidated: !1,
                                    status: "success",
                                    ...!t.manual && {
                                        fetchStatus: "idle",
                                        fetchFailureCount: 0,
                                        fetchFailureReason: null
                                    }
                                };
                            case "error":
                                let i = t.error;
                                if (q(i) && i.revert && this.revertState) return { ...this.revertState,
                                    fetchStatus: "idle"
                                };
                                return { ...e,
                                    error: i,
                                    errorUpdateCount: e.errorUpdateCount + 1,
                                    errorUpdatedAt: Date.now(),
                                    fetchFailureCount: e.fetchFailureCount + 1,
                                    fetchFailureReason: i,
                                    fetchStatus: "idle",
                                    status: "error"
                                };
                            case "invalidate":
                                return { ...e,
                                    isInvalidated: !0
                                };
                            case "setState":
                                return { ...e,
                                    ...t.state
                                }
                        }
                    };
                    this.state = e(this.state), I.batch(() => {
                        this.observers.forEach(e => {
                            e.onQueryUpdate(t)
                        }), this.cache.notify({
                            query: this,
                            type: "updated",
                            action: t
                        })
                    })
                }
            }

            function z(t) {
                let e = "function" == typeof t.initialData ? t.initialData() : t.initialData,
                    r = void 0 !== e,
                    n = r ? "function" == typeof t.initialDataUpdatedAt ? t.initialDataUpdatedAt() : t.initialDataUpdatedAt : 0;
                return {
                    data: e,
                    dataUpdateCount: 0,
                    dataUpdatedAt: r ? null != n ? n : Date.now() : 0,
                    error: null,
                    errorUpdateCount: 0,
                    errorUpdatedAt: 0,
                    fetchFailureCount: 0,
                    fetchFailureReason: null,
                    fetchMeta: null,
                    isInvalidated: !1,
                    status: r ? "success" : "loading",
                    fetchStatus: "idle"
                }
            }
            class H extends M {
                constructor(t) {
                    super(), this.config = t || {}, this.queries = [], this.queriesMap = {}
                }
                build(t, e, r) {
                    var n;
                    let i = e.queryKey,
                        o = null != (n = e.queryHash) ? n : m(i, e),
                        s = this.get(o);
                    return s || (s = new G({
                        cache: this,
                        logger: t.getLogger(),
                        queryKey: i,
                        queryHash: o,
                        options: t.defaultQueryOptions(e),
                        state: r,
                        defaultOptions: t.getQueryDefaults(i)
                    }), this.add(s)), s
                }
                add(t) {
                    this.queriesMap[t.queryHash] || (this.queriesMap[t.queryHash] = t, this.queries.push(t), this.notify({
                        type: "added",
                        query: t
                    }))
                }
                remove(t) {
                    let e = this.queriesMap[t.queryHash];
                    e && (t.destroy(), this.queries = this.queries.filter(e => e !== t), e === t && delete this.queriesMap[t.queryHash], this.notify({
                        type: "removed",
                        query: t
                    }))
                }
                clear() {
                    I.batch(() => {
                        this.queries.forEach(t => {
                            this.remove(t)
                        })
                    })
                }
                get(t) {
                    return this.queriesMap[t]
                }
                getAll() {
                    return this.queries
                }
                find(t, e) {
                    let [r] = d(t, e);
                    return void 0 === r.exact && (r.exact = !0), this.queries.find(t => p(r, t))
                }
                findAll(t, e) {
                    let [r] = d(t, e);
                    return Object.keys(r).length > 0 ? this.queries.filter(t => p(r, t)) : this.queries
                }
                notify(t) {
                    I.batch(() => {
                        this.listeners.forEach(({
                            listener: e
                        }) => {
                            e(t)
                        })
                    })
                }
                onFocus() {
                    I.batch(() => {
                        this.queries.forEach(t => {
                            t.onFocus()
                        })
                    })
                }
                onOnline() {
                    I.batch(() => {
                        this.queries.forEach(t => {
                            t.onOnline()
                        })
                    })
                }
            }
            class K extends W {
                constructor(t) {
                    super(), this.defaultOptions = t.defaultOptions, this.mutationId = t.mutationId, this.mutationCache = t.mutationCache, this.logger = t.logger || D, this.observers = [], this.state = t.state || V(), this.setOptions(t.options), this.scheduleGc()
                }
                setOptions(t) {
                    this.options = { ...this.defaultOptions,
                        ...t
                    }, this.updateCacheTime(this.options.cacheTime)
                }
                get meta() {
                    return this.options.meta
                }
                setState(t) {
                    this.dispatch({
                        type: "setState",
                        state: t
                    })
                }
                addObserver(t) {
                    this.observers.includes(t) || (this.observers.push(t), this.clearGcTimeout(), this.mutationCache.notify({
                        type: "observerAdded",
                        mutation: this,
                        observer: t
                    }))
                }
                removeObserver(t) {
                    this.observers = this.observers.filter(e => e !== t), this.scheduleGc(), this.mutationCache.notify({
                        type: "observerRemoved",
                        mutation: this,
                        observer: t
                    })
                }
                optionalRemove() {
                    this.observers.length || ("loading" === this.state.status ? this.scheduleGc() : this.mutationCache.remove(this))
                }
                continue () {
                    var t, e;
                    return null != (t = null == (e = this.retryer) ? void 0 : e.continue()) ? t : this.execute()
                }
                async execute() {
                    var t, e, r, n, i, o, s, a, u, c, l, h, f, d, p, y, m, b, g, w;
                    let v = () => {
                            var t;
                            return this.retryer = $({
                                fn: () => this.options.mutationFn ? this.options.mutationFn(this.state.variables) : Promise.reject("No mutationFn found"),
                                onFail: (t, e) => {
                                    this.dispatch({
                                        type: "failed",
                                        failureCount: t,
                                        error: e
                                    })
                                },
                                onPause: () => {
                                    this.dispatch({
                                        type: "pause"
                                    })
                                },
                                onContinue: () => {
                                    this.dispatch({
                                        type: "continue"
                                    })
                                },
                                retry: null != (t = this.options.retry) ? t : 0,
                                retryDelay: this.options.retryDelay,
                                networkMode: this.options.networkMode
                            }), this.retryer.promise
                        },
                        E = "loading" === this.state.status;
                    try {
                        if (!E) {
                            this.dispatch({
                                type: "loading",
                                variables: this.options.variables
                            }), await (null == (u = (c = this.mutationCache.config).onMutate) ? void 0 : u.call(c, this.state.variables, this));
                            let t = await (null == (l = (h = this.options).onMutate) ? void 0 : l.call(h, this.state.variables));
                            t !== this.state.context && this.dispatch({
                                type: "loading",
                                context: t,
                                variables: this.state.variables
                            })
                        }
                        let f = await v();
                        return await (null == (t = (e = this.mutationCache.config).onSuccess) ? void 0 : t.call(e, f, this.state.variables, this.state.context, this)), await (null == (r = (n = this.options).onSuccess) ? void 0 : r.call(n, f, this.state.variables, this.state.context)), await (null == (i = (o = this.mutationCache.config).onSettled) ? void 0 : i.call(o, f, null, this.state.variables, this.state.context, this)), await (null == (s = (a = this.options).onSettled) ? void 0 : s.call(a, f, null, this.state.variables, this.state.context)), this.dispatch({
                            type: "success",
                            data: f
                        }), f
                    } catch (t) {
                        try {
                            throw await (null == (f = (d = this.mutationCache.config).onError) ? void 0 : f.call(d, t, this.state.variables, this.state.context, this)), await (null == (p = (y = this.options).onError) ? void 0 : p.call(y, t, this.state.variables, this.state.context)), await (null == (m = (b = this.mutationCache.config).onSettled) ? void 0 : m.call(b, void 0, t, this.state.variables, this.state.context, this)), await (null == (g = (w = this.options).onSettled) ? void 0 : g.call(w, void 0, t, this.state.variables, this.state.context)), t
                        } finally {
                            this.dispatch({
                                type: "error",
                                error: t
                            })
                        }
                    }
                }
                dispatch(t) {
                    let e = e => {
                        switch (t.type) {
                            case "failed":
                                return { ...e,
                                    failureCount: t.failureCount,
                                    failureReason: t.error
                                };
                            case "pause":
                                return { ...e,
                                    isPaused: !0
                                };
                            case "continue":
                                return { ...e,
                                    isPaused: !1
                                };
                            case "loading":
                                return { ...e,
                                    context: t.context,
                                    data: void 0,
                                    failureCount: 0,
                                    failureReason: null,
                                    error: null,
                                    isPaused: !F(this.options.networkMode),
                                    status: "loading",
                                    variables: t.variables
                                };
                            case "success":
                                return { ...e,
                                    data: t.data,
                                    failureCount: 0,
                                    failureReason: null,
                                    error: null,
                                    status: "success",
                                    isPaused: !1
                                };
                            case "error":
                                return { ...e,
                                    data: void 0,
                                    error: t.error,
                                    failureCount: e.failureCount + 1,
                                    failureReason: t.error,
                                    isPaused: !1,
                                    status: "error"
                                };
                            case "setState":
                                return { ...e,
                                    ...t.state
                                }
                        }
                    };
                    this.state = e(this.state), I.batch(() => {
                        this.observers.forEach(e => {
                            e.onMutationUpdate(t)
                        }), this.mutationCache.notify({
                            mutation: this,
                            type: "updated",
                            action: t
                        })
                    })
                }
            }

            function V() {
                return {
                    context: void 0,
                    data: void 0,
                    error: null,
                    failureCount: 0,
                    failureReason: null,
                    isPaused: !1,
                    status: "idle",
                    variables: void 0
                }
            }
            class Q extends M {
                constructor(t) {
                    super(), this.config = t || {}, this.mutations = [], this.mutationId = 0
                }
                build(t, e, r) {
                    let n = new K({
                        mutationCache: this,
                        logger: t.getLogger(),
                        mutationId: ++this.mutationId,
                        options: t.defaultMutationOptions(e),
                        state: r,
                        defaultOptions: e.mutationKey ? t.getMutationDefaults(e.mutationKey) : void 0
                    });
                    return this.add(n), n
                }
                add(t) {
                    this.mutations.push(t), this.notify({
                        type: "added",
                        mutation: t
                    })
                }
                remove(t) {
                    this.mutations = this.mutations.filter(e => e !== t), this.notify({
                        type: "removed",
                        mutation: t
                    })
                }
                clear() {
                    I.batch(() => {
                        this.mutations.forEach(t => {
                            this.remove(t)
                        })
                    })
                }
                getAll() {
                    return this.mutations
                }
                find(t) {
                    return void 0 === t.exact && (t.exact = !0), this.mutations.find(e => y(t, e))
                }
                findAll(t) {
                    return this.mutations.filter(e => y(t, e))
                }
                notify(t) {
                    I.batch(() => {
                        this.listeners.forEach(({
                            listener: e
                        }) => {
                            e(t)
                        })
                    })
                }
                resumePausedMutations() {
                    var t;
                    return this.resuming = (null != (t = this.resuming) ? t : Promise.resolve()).then(() => {
                        let t = this.mutations.filter(t => t.state.isPaused);
                        return I.batch(() => t.reduce((t, e) => t.then(() => e.continue().catch(a)), Promise.resolve()))
                    }).then(() => {
                        this.resuming = void 0
                    }), this.resuming
                }
            }

            function Z() {
                return {
                    onFetch: t => {
                        t.fetchFn = () => {
                            var e, r, n, i, o, s;
                            let a;
                            let u = null == (e = t.fetchOptions) ? void 0 : null == (r = e.meta) ? void 0 : r.refetchPage,
                                c = null == (n = t.fetchOptions) ? void 0 : null == (i = n.meta) ? void 0 : i.fetchMore,
                                l = null == c ? void 0 : c.pageParam,
                                h = (null == c ? void 0 : c.direction) === "forward",
                                f = (null == c ? void 0 : c.direction) === "backward",
                                d = (null == (o = t.state.data) ? void 0 : o.pages) || [],
                                p = (null == (s = t.state.data) ? void 0 : s.pageParams) || [],
                                y = p,
                                m = !1,
                                b = e => {
                                    Object.defineProperty(e, "signal", {
                                        enumerable: !0,
                                        get: () => {
                                            var e, r;
                                            return null != (e = t.signal) && e.aborted ? m = !0 : null == (r = t.signal) || r.addEventListener("abort", () => {
                                                m = !0
                                            }), t.signal
                                        }
                                    })
                                },
                                g = t.options.queryFn || (() => Promise.reject("Missing queryFn for queryKey '" + t.options.queryHash + "'")),
                                w = (t, e, r, n) => (y = n ? [e, ...y] : [...y, e], n ? [r, ...t] : [...t, r]),
                                v = (e, r, n, i) => {
                                    if (m) return Promise.reject("Cancelled");
                                    if (void 0 === n && !r && e.length) return Promise.resolve(e);
                                    let o = {
                                        queryKey: t.queryKey,
                                        pageParam: n,
                                        meta: t.options.meta
                                    };
                                    return b(o), Promise.resolve(g(o)).then(t => w(e, n, t, i))
                                };
                            if (d.length) {
                                if (h) {
                                    let e = void 0 !== l,
                                        r = e ? l : Y(t.options, d);
                                    a = v(d, e, r)
                                } else if (f) {
                                    let e = void 0 !== l,
                                        r = e ? l : J(t.options, d);
                                    a = v(d, e, r, !0)
                                } else {
                                    y = [];
                                    let e = void 0 === t.options.getNextPageParam;
                                    a = !u || !d[0] || u(d[0], 0, d) ? v([], e, p[0]) : Promise.resolve(w([], p[0], d[0]));
                                    for (let r = 1; r < d.length; r++) a = a.then(n => {
                                        if (!u || !d[r] || u(d[r], r, d)) {
                                            let i = e ? p[r] : Y(t.options, n);
                                            return v(n, e, i)
                                        }
                                        return Promise.resolve(w(n, p[r], d[r]))
                                    })
                                }
                            } else a = v([]);
                            return a.then(t => ({
                                pages: t,
                                pageParams: y
                            }))
                        }
                    }
                }
            }

            function Y(t, e) {
                return null == t.getNextPageParam ? void 0 : t.getNextPageParam(e[e.length - 1], e)
            }

            function J(t, e) {
                return null == t.getPreviousPageParam ? void 0 : t.getPreviousPageParam(e[0], e)
            }
            class X {
                constructor(t = {}) {
                    this.queryCache = t.queryCache || new H, this.mutationCache = t.mutationCache || new Q, this.logger = t.logger || D, this.defaultOptions = t.defaultOptions || {}, this.queryDefaults = [], this.mutationDefaults = [], this.mountCount = 0
                }
                mount() {
                    this.mountCount++, 1 === this.mountCount && (this.unsubscribeFocus = R.subscribe(() => {
                        R.isFocused() && (this.resumePausedMutations(), this.queryCache.onFocus())
                    }), this.unsubscribeOnline = U.subscribe(() => {
                        U.isOnline() && (this.resumePausedMutations(), this.queryCache.onOnline())
                    }))
                }
                unmount() {
                    var t, e;
                    this.mountCount--, 0 === this.mountCount && (null == (t = this.unsubscribeFocus) || t.call(this), this.unsubscribeFocus = void 0, null == (e = this.unsubscribeOnline) || e.call(this), this.unsubscribeOnline = void 0)
                }
                isFetching(t, e) {
                    let [r] = d(t, e);
                    return r.fetchStatus = "fetching", this.queryCache.findAll(r).length
                }
                isMutating(t) {
                    return this.mutationCache.findAll({ ...t,
                        fetching: !0
                    }).length
                }
                getQueryData(t, e) {
                    var r;
                    return null == (r = this.queryCache.find(t, e)) ? void 0 : r.state.data
                }
                ensureQueryData(t, e, r) {
                    let n = h(t, e, r),
                        i = this.getQueryData(n.queryKey);
                    return i ? Promise.resolve(i) : this.fetchQuery(n)
                }
                getQueriesData(t) {
                    return this.getQueryCache().findAll(t).map(({
                        queryKey: t,
                        state: e
                    }) => [t, e.data])
                }
                setQueryData(t, e, r) {
                    let n = this.queryCache.find(t),
                        i = u(e, null == n ? void 0 : n.state.data);
                    if (void 0 === i) return;
                    let o = h(t),
                        s = this.defaultQueryOptions(o);
                    return this.queryCache.build(this, s).setData(i, { ...r,
                        manual: !0
                    })
                }
                setQueriesData(t, e, r) {
                    return I.batch(() => this.getQueryCache().findAll(t).map(({
                        queryKey: t
                    }) => [t, this.setQueryData(t, e, r)]))
                }
                getQueryState(t, e) {
                    var r;
                    return null == (r = this.queryCache.find(t, e)) ? void 0 : r.state
                }
                removeQueries(t, e) {
                    let [r] = d(t, e), n = this.queryCache;
                    I.batch(() => {
                        n.findAll(r).forEach(t => {
                            n.remove(t)
                        })
                    })
                }
                resetQueries(t, e, r) {
                    let [n, i] = d(t, e, r), o = this.queryCache, s = {
                        type: "active",
                        ...n
                    };
                    return I.batch(() => (o.findAll(n).forEach(t => {
                        t.reset()
                    }), this.refetchQueries(s, i)))
                }
                cancelQueries(t, e, r) {
                    let [n, i = {}] = d(t, e, r);
                    return void 0 === i.revert && (i.revert = !0), Promise.all(I.batch(() => this.queryCache.findAll(n).map(t => t.cancel(i)))).then(a).catch(a)
                }
                invalidateQueries(t, e, r) {
                    let [n, i] = d(t, e, r);
                    return I.batch(() => {
                        var t, e;
                        if (this.queryCache.findAll(n).forEach(t => {
                                t.invalidate()
                            }), "none" === n.refetchType) return Promise.resolve();
                        let r = { ...n,
                            type: null != (t = null != (e = n.refetchType) ? e : n.type) ? t : "active"
                        };
                        return this.refetchQueries(r, i)
                    })
                }
                refetchQueries(t, e, r) {
                    let [n, i] = d(t, e, r), o = Promise.all(I.batch(() => this.queryCache.findAll(n).filter(t => !t.isDisabled()).map(t => {
                        var e;
                        return t.fetch(void 0, { ...i,
                            cancelRefetch: null == (e = null == i ? void 0 : i.cancelRefetch) || e,
                            meta: {
                                refetchPage: n.refetchPage
                            }
                        })
                    }))).then(a);
                    return null != i && i.throwOnError || (o = o.catch(a)), o
                }
                fetchQuery(t, e, r) {
                    let n = h(t, e, r),
                        i = this.defaultQueryOptions(n);
                    void 0 === i.retry && (i.retry = !1);
                    let o = this.queryCache.build(this, i);
                    return o.isStaleByTime(i.staleTime) ? o.fetch(i) : Promise.resolve(o.state.data)
                }
                prefetchQuery(t, e, r) {
                    return this.fetchQuery(t, e, r).then(a).catch(a)
                }
                fetchInfiniteQuery(t, e, r) {
                    let n = h(t, e, r);
                    return n.behavior = Z(), this.fetchQuery(n)
                }
                prefetchInfiniteQuery(t, e, r) {
                    return this.fetchInfiniteQuery(t, e, r).then(a).catch(a)
                }
                resumePausedMutations() {
                    return this.mutationCache.resumePausedMutations()
                }
                getQueryCache() {
                    return this.queryCache
                }
                getMutationCache() {
                    return this.mutationCache
                }
                getLogger() {
                    return this.logger
                }
                getDefaultOptions() {
                    return this.defaultOptions
                }
                setDefaultOptions(t) {
                    this.defaultOptions = t
                }
                setQueryDefaults(t, e) {
                    let r = this.queryDefaults.find(e => b(t) === b(e.queryKey));
                    r ? r.defaultOptions = e : this.queryDefaults.push({
                        queryKey: t,
                        defaultOptions: e
                    })
                }
                getQueryDefaults(t) {
                    if (!t) return;
                    let e = this.queryDefaults.find(e => g(t, e.queryKey));
                    return null == e ? void 0 : e.defaultOptions
                }
                setMutationDefaults(t, e) {
                    let r = this.mutationDefaults.find(e => b(t) === b(e.mutationKey));
                    r ? r.defaultOptions = e : this.mutationDefaults.push({
                        mutationKey: t,
                        defaultOptions: e
                    })
                }
                getMutationDefaults(t) {
                    if (!t) return;
                    let e = this.mutationDefaults.find(e => g(t, e.mutationKey));
                    return null == e ? void 0 : e.defaultOptions
                }
                defaultQueryOptions(t) {
                    if (null != t && t._defaulted) return t;
                    let e = { ...this.defaultOptions.queries,
                        ...this.getQueryDefaults(null == t ? void 0 : t.queryKey),
                        ...t,
                        _defaulted: !0
                    };
                    return !e.queryHash && e.queryKey && (e.queryHash = m(e.queryKey, e)), void 0 === e.refetchOnReconnect && (e.refetchOnReconnect = "always" !== e.networkMode), void 0 === e.useErrorBoundary && (e.useErrorBoundary = !!e.suspense), e
                }
                defaultMutationOptions(t) {
                    return null != t && t._defaulted ? t : { ...this.defaultOptions.mutations,
                        ...this.getMutationDefaults(null == t ? void 0 : t.mutationKey),
                        ...t,
                        _defaulted: !0
                    }
                }
                clear() {
                    this.queryCache.clear(), this.mutationCache.clear()
                }
            }

            function tt(t) {
                return {
                    mutationKey: t.options.mutationKey,
                    state: t.state
                }
            }

            function te(t) {
                return {
                    state: t.state,
                    queryKey: t.queryKey,
                    queryHash: t.queryHash
                }
            }

            function tr(t) {
                return t.state.isPaused
            }

            function tn(t) {
                return "success" === t.state.status
            }

            function ti(t, e = {}) {
                let r = [],
                    n = [];
                if (!1 !== e.dehydrateMutations) {
                    let n = e.shouldDehydrateMutation || tr;
                    t.getMutationCache().getAll().forEach(t => {
                        n(t) && r.push(tt(t))
                    })
                }
                if (!1 !== e.dehydrateQueries) {
                    let r = e.shouldDehydrateQuery || tn;
                    t.getQueryCache().getAll().forEach(t => {
                        r(t) && n.push(te(t))
                    })
                }
                return {
                    mutations: r,
                    queries: n
                }
            }

            function to(t, e, r) {
                if ("object" != typeof e || null === e) return;
                let n = t.getMutationCache(),
                    i = t.getQueryCache(),
                    o = e.mutations || [],
                    s = e.queries || [];
                o.forEach(e => {
                    var i;
                    n.build(t, { ...null == r ? void 0 : null == (i = r.defaultOptions) ? void 0 : i.mutations,
                        mutationKey: e.mutationKey
                    }, e.state)
                }), s.forEach(({
                    queryKey: e,
                    state: n,
                    queryHash: o
                }) => {
                    var s;
                    let a = i.get(o);
                    if (a) {
                        if (a.state.dataUpdatedAt < n.dataUpdatedAt) {
                            let {
                                fetchStatus: t,
                                ...e
                            } = n;
                            a.setState(e)
                        }
                        return
                    }
                    i.build(t, { ...null == r ? void 0 : null == (s = r.defaultOptions) ? void 0 : s.queries,
                        queryKey: e,
                        queryHash: o
                    }, { ...n,
                        fetchStatus: "idle"
                    })
                })
            }
            let ts = ["added", "removed", "updated"];

            function ta(t) {
                return ts.includes(t)
            }
            async function tu({
                queryClient: t,
                persister: e,
                maxAge: r = 864e5,
                buster: n = "",
                hydrateOptions: i
            }) {
                try {
                    let o = await e.restoreClient();
                    if (o) {
                        if (o.timestamp) {
                            let s = Date.now() - o.timestamp > r,
                                a = o.buster !== n;
                            s || a ? e.removeClient() : to(t, o.clientState, i)
                        } else e.removeClient()
                    }
                } catch (t) {
                    e.removeClient()
                }
            }
            async function tc({
                queryClient: t,
                persister: e,
                buster: r = "",
                dehydrateOptions: n
            }) {
                let i = {
                    buster: r,
                    timestamp: Date.now(),
                    clientState: ti(t, n)
                };
                await e.persistClient(i)
            }

            function tl(t) {
                let e = t.queryClient.getQueryCache().subscribe(e => {
                        ta(e.type) && tc(t)
                    }),
                    r = t.queryClient.getMutationCache().subscribe(e => {
                        ta(e.type) && tc(t)
                    });
                return () => {
                    e(), r()
                }
            }

            function th(t) {
                let e, r = !1;
                return [() => {
                    r = !0, null == e || e()
                }, tu(t).then(() => {
                    r || (e = tl(t))
                })]
            }
            var tf = r(1673),
                td = r(2265);
            let tp = td.createContext(void 0),
                ty = td.createContext(!1);

            function tm(t, e) {
                return t || (e && "undefined" != typeof window ? (window.ReactQueryClientContext || (window.ReactQueryClientContext = tp), window.ReactQueryClientContext) : tp)
            }
            let tb = function() {
                    let {
                        context: t
                    } = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, e = td.useContext(tm(t, td.useContext(ty)));
                    if (!e) throw Error("No QueryClient set, use QueryClientProvider to set one");
                    return e
                },
                tg = t => {
                    let {
                        client: e,
                        children: r,
                        context: n,
                        contextSharing: i = !1
                    } = t;
                    td.useEffect(() => (e.mount(), () => {
                        e.unmount()
                    }), [e]);
                    let o = tm(n, i);
                    return td.createElement(ty.Provider, {
                        value: !n && i
                    }, td.createElement(o.Provider, {
                        value: e
                    }, r))
                },
                tw = td.createContext(!1),
                tv = () => td.useContext(tw);

            function tE() {
                let t = !1;
                return {
                    clearReset: () => {
                        t = !1
                    },
                    reset: () => {
                        t = !0
                    },
                    isReset: () => t
                }
            }
            tw.Provider;
            let tx = td.createContext(tE()),
                tS = () => td.useContext(tx);
            var tO = r(60293);
            class tC extends M {
                constructor(t, e) {
                    super(), this.client = t, this.setOptions(e), this.bindMethods(), this.updateResult()
                }
                bindMethods() {
                    this.mutate = this.mutate.bind(this), this.reset = this.reset.bind(this)
                }
                setOptions(t) {
                    var e;
                    let r = this.options;
                    this.options = this.client.defaultMutationOptions(t), E(r, this.options) || this.client.getMutationCache().notify({
                        type: "observerOptionsUpdated",
                        mutation: this.currentMutation,
                        observer: this
                    }), null == (e = this.currentMutation) || e.setOptions(this.options)
                }
                onUnsubscribe() {
                    if (!this.hasListeners()) {
                        var t;
                        null == (t = this.currentMutation) || t.removeObserver(this)
                    }
                }
                onMutationUpdate(t) {
                    this.updateResult();
                    let e = {
                        listeners: !0
                    };
                    "success" === t.type ? e.onSuccess = !0 : "error" === t.type && (e.onError = !0), this.notify(e)
                }
                getCurrentResult() {
                    return this.currentResult
                }
                reset() {
                    this.currentMutation = void 0, this.updateResult(), this.notify({
                        listeners: !0
                    })
                }
                mutate(t, e) {
                    return this.mutateOptions = e, this.currentMutation && this.currentMutation.removeObserver(this), this.currentMutation = this.client.getMutationCache().build(this.client, { ...this.options,
                        variables: void 0 !== t ? t : this.options.variables
                    }), this.currentMutation.addObserver(this), this.currentMutation.execute()
                }
                updateResult() {
                    let t = this.currentMutation ? this.currentMutation.state : V(),
                        e = { ...t,
                            isLoading: "loading" === t.status,
                            isSuccess: "success" === t.status,
                            isError: "error" === t.status,
                            isIdle: "idle" === t.status,
                            mutate: this.mutate,
                            reset: this.reset
                        };
                    this.currentResult = e
                }
                notify(t) {
                    I.batch(() => {
                        if (this.mutateOptions && this.hasListeners()) {
                            var e, r, n, i, o, s, a, u;
                            t.onSuccess ? (null == (e = (r = this.mutateOptions).onSuccess) || e.call(r, this.currentResult.data, this.currentResult.variables, this.currentResult.context), null == (n = (i = this.mutateOptions).onSettled) || n.call(i, this.currentResult.data, null, this.currentResult.variables, this.currentResult.context)) : t.onError && (null == (o = (s = this.mutateOptions).onError) || o.call(s, this.currentResult.error, this.currentResult.variables, this.currentResult.context), null == (a = (u = this.mutateOptions).onSettled) || a.call(u, void 0, this.currentResult.error, this.currentResult.variables, this.currentResult.context))
                        }
                        t.listeners && this.listeners.forEach(({
                            listener: t
                        }) => {
                            t(this.currentResult)
                        })
                    })
                }
            }
            let t_ = tO.useSyncExternalStore;

            function tA(t, e) {
                return "function" == typeof t ? t(...e) : !!t
            }

            function tP(t, e, r) {
                let n = f(t, e, r),
                    i = tb({
                        context: n.context
                    }),
                    [o] = td.useState(() => new tC(i, n));
                td.useEffect(() => {
                    o.setOptions(n)
                }, [o, n]);
                let s = t_(td.useCallback(t => o.subscribe(I.batchCalls(t)), [o]), () => o.getCurrentResult(), () => o.getCurrentResult()),
                    a = td.useCallback((t, e) => {
                        o.mutate(t, e).catch(tk)
                    }, [o]);
                if (s.error && tA(o.options.useErrorBoundary, [s.error])) throw s.error;
                return { ...s,
                    mutate: a,
                    mutateAsync: s.mutate
                }
            }

            function tk() {}
            class tD extends M {
                constructor(t, e) {
                    super(), this.client = t, this.options = e, this.trackedProps = new Set, this.selectError = null, this.bindMethods(), this.setOptions(e)
                }
                bindMethods() {
                    this.remove = this.remove.bind(this), this.refetch = this.refetch.bind(this)
                }
                onSubscribe() {
                    1 === this.listeners.size && (this.currentQuery.addObserver(this), tM(this.currentQuery, this.options) && this.executeFetch(), this.updateTimers())
                }
                onUnsubscribe() {
                    this.hasListeners() || this.destroy()
                }
                shouldFetchOnReconnect() {
                    return tB(this.currentQuery, this.options, this.options.refetchOnReconnect)
                }
                shouldFetchOnWindowFocus() {
                    return tB(this.currentQuery, this.options, this.options.refetchOnWindowFocus)
                }
                destroy() {
                    this.listeners = new Set, this.clearStaleTimeout(), this.clearRefetchInterval(), this.currentQuery.removeObserver(this)
                }
                setOptions(t, e) {
                    let r = this.options,
                        n = this.currentQuery;
                    if (this.options = this.client.defaultQueryOptions(t), E(r, this.options) || this.client.getQueryCache().notify({
                            type: "observerOptionsUpdated",
                            query: this.currentQuery,
                            observer: this
                        }), void 0 !== this.options.enabled && "boolean" != typeof this.options.enabled) throw Error("Expected enabled to be a boolean");
                    this.options.queryKey || (this.options.queryKey = r.queryKey), this.updateQuery();
                    let i = this.hasListeners();
                    i && tR(this.currentQuery, n, this.options, r) && this.executeFetch(), this.updateResult(e), i && (this.currentQuery !== n || this.options.enabled !== r.enabled || this.options.staleTime !== r.staleTime) && this.updateStaleTimeout();
                    let o = this.computeRefetchInterval();
                    i && (this.currentQuery !== n || this.options.enabled !== r.enabled || o !== this.currentRefetchInterval) && this.updateRefetchInterval(o)
                }
                getOptimisticResult(t) {
                    let e = this.client.getQueryCache().build(this.client, t),
                        r = this.createResult(e, t);
                    return tj(this, r, t) && (this.currentResult = r, this.currentResultOptions = this.options, this.currentResultState = this.currentQuery.state), r
                }
                getCurrentResult() {
                    return this.currentResult
                }
                trackResult(t) {
                    let e = {};
                    return Object.keys(t).forEach(r => {
                        Object.defineProperty(e, r, {
                            configurable: !1,
                            enumerable: !0,
                            get: () => (this.trackedProps.add(r), t[r])
                        })
                    }), e
                }
                getCurrentQuery() {
                    return this.currentQuery
                }
                remove() {
                    this.client.getQueryCache().remove(this.currentQuery)
                }
                refetch({
                    refetchPage: t,
                    ...e
                } = {}) {
                    return this.fetch({ ...e,
                        meta: {
                            refetchPage: t
                        }
                    })
                }
                fetchOptimistic(t) {
                    let e = this.client.defaultQueryOptions(t),
                        r = this.client.getQueryCache().build(this.client, e);
                    return r.isFetchingOptimistic = !0, r.fetch().then(() => this.createResult(r, e))
                }
                fetch(t) {
                    var e;
                    return this.executeFetch({ ...t,
                        cancelRefetch: null == (e = t.cancelRefetch) || e
                    }).then(() => (this.updateResult(), this.currentResult))
                }
                executeFetch(t) {
                    this.updateQuery();
                    let e = this.currentQuery.fetch(this.options, t);
                    return null != t && t.throwOnError || (e = e.catch(a)), e
                }
                updateStaleTimeout() {
                    if (this.clearStaleTimeout(), s || this.currentResult.isStale || !c(this.options.staleTime)) return;
                    let t = l(this.currentResult.dataUpdatedAt, this.options.staleTime) + 1;
                    this.staleTimeoutId = setTimeout(() => {
                        this.currentResult.isStale || this.updateResult()
                    }, t)
                }
                computeRefetchInterval() {
                    var t;
                    return "function" == typeof this.options.refetchInterval ? this.options.refetchInterval(this.currentResult.data, this.currentQuery) : null != (t = this.options.refetchInterval) && t
                }
                updateRefetchInterval(t) {
                    this.clearRefetchInterval(), this.currentRefetchInterval = t, !s && !1 !== this.options.enabled && c(this.currentRefetchInterval) && 0 !== this.currentRefetchInterval && (this.refetchIntervalId = setInterval(() => {
                        (this.options.refetchIntervalInBackground || R.isFocused()) && this.executeFetch()
                    }, this.currentRefetchInterval))
                }
                updateTimers() {
                    this.updateStaleTimeout(), this.updateRefetchInterval(this.computeRefetchInterval())
                }
                clearStaleTimeout() {
                    this.staleTimeoutId && (clearTimeout(this.staleTimeoutId), this.staleTimeoutId = void 0)
                }
                clearRefetchInterval() {
                    this.refetchIntervalId && (clearInterval(this.refetchIntervalId), this.refetchIntervalId = void 0)
                }
                createResult(t, e) {
                    let r;
                    let n = this.currentQuery,
                        i = this.options,
                        o = this.currentResult,
                        s = this.currentResultState,
                        a = this.currentResultOptions,
                        u = t !== n,
                        c = u ? t.state : this.currentQueryInitialState,
                        l = u ? this.currentResult : this.previousQueryResult,
                        {
                            state: h
                        } = t,
                        {
                            dataUpdatedAt: f,
                            error: d,
                            errorUpdatedAt: p,
                            fetchStatus: y,
                            status: m
                        } = h,
                        b = !1,
                        g = !1;
                    if (e._optimisticResults) {
                        let r = this.hasListeners(),
                            o = !r && tM(t, e),
                            s = r && tR(t, n, e, i);
                        (o || s) && (y = F(t.options.networkMode) ? "fetching" : "paused", f || (m = "loading")), "isRestoring" === e._optimisticResults && (y = "idle")
                    }
                    if (e.keepPreviousData && !h.dataUpdatedAt && null != l && l.isSuccess && "error" !== m) r = l.data, f = l.dataUpdatedAt, m = l.status, b = !0;
                    else if (e.select && void 0 !== h.data) {
                        if (o && h.data === (null == s ? void 0 : s.data) && e.select === this.selectFn) r = this.selectResult;
                        else try {
                            this.selectFn = e.select, r = e.select(h.data), r = k(null == o ? void 0 : o.data, r, e), this.selectResult = r, this.selectError = null
                        } catch (t) {
                            this.selectError = t
                        }
                    } else r = h.data;
                    if (void 0 !== e.placeholderData && void 0 === r && "loading" === m) {
                        let t;
                        if (null != o && o.isPlaceholderData && e.placeholderData === (null == a ? void 0 : a.placeholderData)) t = o.data;
                        else if (t = "function" == typeof e.placeholderData ? e.placeholderData() : e.placeholderData, e.select && void 0 !== t) try {
                            t = e.select(t), this.selectError = null
                        } catch (t) {
                            this.selectError = t
                        }
                        void 0 !== t && (m = "success", r = k(null == o ? void 0 : o.data, t, e), g = !0)
                    }
                    this.selectError && (d = this.selectError, r = this.selectResult, p = Date.now(), m = "error");
                    let w = "fetching" === y,
                        v = "loading" === m,
                        E = "error" === m;
                    return {
                        status: m,
                        fetchStatus: y,
                        isLoading: v,
                        isSuccess: "success" === m,
                        isError: E,
                        isInitialLoading: v && w,
                        data: r,
                        dataUpdatedAt: f,
                        error: d,
                        errorUpdatedAt: p,
                        failureCount: h.fetchFailureCount,
                        failureReason: h.fetchFailureReason,
                        errorUpdateCount: h.errorUpdateCount,
                        isFetched: h.dataUpdateCount > 0 || h.errorUpdateCount > 0,
                        isFetchedAfterMount: h.dataUpdateCount > c.dataUpdateCount || h.errorUpdateCount > c.errorUpdateCount,
                        isFetching: w,
                        isRefetching: w && !v,
                        isLoadingError: E && 0 === h.dataUpdatedAt,
                        isPaused: "paused" === y,
                        isPlaceholderData: g,
                        isPreviousData: b,
                        isRefetchError: E && 0 !== h.dataUpdatedAt,
                        isStale: tT(t, e),
                        refetch: this.refetch,
                        remove: this.remove
                    }
                }
                updateResult(t) {
                    let e = this.currentResult,
                        r = this.createResult(this.currentQuery, this.options);
                    if (this.currentResultState = this.currentQuery.state, this.currentResultOptions = this.options, E(r, e)) return;
                    this.currentResult = r;
                    let n = {
                            cache: !0
                        },
                        i = () => {
                            if (!e) return !0;
                            let {
                                notifyOnChangeProps: t
                            } = this.options, r = "function" == typeof t ? t() : t;
                            if ("all" === r || !r && !this.trackedProps.size) return !0;
                            let n = new Set(null != r ? r : this.trackedProps);
                            return this.options.useErrorBoundary && n.add("error"), Object.keys(this.currentResult).some(t => {
                                let r = t;
                                return this.currentResult[r] !== e[r] && n.has(r)
                            })
                        };
                    (null == t ? void 0 : t.listeners) !== !1 && i() && (n.listeners = !0), this.notify({ ...n,
                        ...t
                    })
                }
                updateQuery() {
                    let t = this.client.getQueryCache().build(this.client, this.options);
                    if (t === this.currentQuery) return;
                    let e = this.currentQuery;
                    this.currentQuery = t, this.currentQueryInitialState = t.state, this.previousQueryResult = this.currentResult, this.hasListeners() && (null == e || e.removeObserver(this), t.addObserver(this))
                }
                onQueryUpdate(t) {
                    let e = {};
                    "success" === t.type ? e.onSuccess = !t.manual : "error" !== t.type || q(t.error) || (e.onError = !0), this.updateResult(e), this.hasListeners() && this.updateTimers()
                }
                notify(t) {
                    I.batch(() => {
                        var e, r, n, i, o, s, a, u;
                        t.onSuccess ? (null == (e = (r = this.options).onSuccess) || e.call(r, this.currentResult.data), null == (n = (i = this.options).onSettled) || n.call(i, this.currentResult.data, null)) : t.onError && (null == (o = (s = this.options).onError) || o.call(s, this.currentResult.error), null == (a = (u = this.options).onSettled) || a.call(u, void 0, this.currentResult.error)), t.listeners && this.listeners.forEach(({
                            listener: t
                        }) => {
                            t(this.currentResult)
                        }), t.cache && this.client.getQueryCache().notify({
                            query: this.currentQuery,
                            type: "observerResultsUpdated"
                        })
                    })
                }
            }

            function tI(t, e) {
                return !1 !== e.enabled && !t.state.dataUpdatedAt && !("error" === t.state.status && !1 === e.retryOnMount)
            }

            function tM(t, e) {
                return tI(t, e) || t.state.dataUpdatedAt > 0 && tB(t, e, e.refetchOnMount)
            }

            function tB(t, e, r) {
                if (!1 !== e.enabled) {
                    let n = "function" == typeof r ? r(t) : r;
                    return "always" === n || !1 !== n && tT(t, e)
                }
                return !1
            }

            function tR(t, e, r, n) {
                return !1 !== r.enabled && (t !== e || !1 === n.enabled) && (!r.suspense || "error" !== t.state.status) && tT(t, r)
            }

            function tT(t, e) {
                return t.isStaleByTime(e.staleTime)
            }

            function tj(t, e, r) {
                return !r.keepPreviousData && (void 0 !== r.placeholderData ? e.isPlaceholderData : !E(t.getCurrentResult(), e))
            }
            var tU = r(48892);

            function tN(t) {
                let {
                    queryClient: e = new X({
                        defaultOptions: {
                            queries: {
                                cacheTime: 864e5,
                                networkMode: "offlineFirst",
                                refetchOnWindowFocus: !1,
                                retry: 0
                            },
                            mutations: {
                                networkMode: "offlineFirst"
                            }
                        }
                    }),
                    storage: r = (0, tf.o6)({
                        storage: "undefined" != typeof window && window.localStorage ? window.localStorage : tf.wp
                    }),
                    persister: i = "undefined" != typeof window ? n({
                        key: "cache",
                        storage: r,
                        serialize: t => t,
                        deserialize: t => t
                    }) : void 0,
                    ...o
                } = t, s = (0, tf._g)({ ...o,
                    storage: r
                });
                return i && th({
                    queryClient: e,
                    persister: i,
                    dehydrateOptions: {
                        shouldDehydrateQuery: t => 0 !== t.cacheTime && !1 !== t.queryKey[0].persist
                    }
                }), Object.assign(s, {
                    queryClient: e
                })
            }
            var tF = td.createContext(void 0),
                tL = td.createContext(void 0);

            function tq(t) {
                let {
                    children: e,
                    config: r
                } = t;
                return td.createElement(tF.Provider, {
                    children: td.createElement(tg, {
                        children: e,
                        client: r.queryClient,
                        context: tL
                    }),
                    value: r
                })
            }

            function t$() {
                let t = td.useContext(tF);
                if (!t) throw Error("`useConfig` must be used within `WagmiConfig`.\n\nRead more: https://wagmi.sh/react/WagmiConfig");
                return t
            }
            var tW = tO.useSyncExternalStore;

            function tG(t) {
                return Array.isArray(t)
            }

            function tz(t) {
                if (!tH(t)) return !1;
                let e = t.constructor;
                if (void 0 === e) return !0;
                let r = e.prototype;
                return !!(tH(r) && r.hasOwnProperty("isPrototypeOf"))
            }

            function tH(t) {
                return "[object Object]" === Object.prototype.toString.call(t)
            }

            function tK(t, e, r) {
                return tG(t) ? "function" == typeof e ? { ...r,
                    queryKey: t,
                    queryFn: e
                } : { ...e,
                    queryKey: t
                } : t
            }

            function tV(t) {
                return JSON.stringify(t, (t, e) => tz(e) ? Object.keys(e).sort().reduce((t, r) => (t[r] = e[r], t), {}) : "bigint" == typeof e ? e.toString() : e)
            }

            function tQ(t, e) {
                return "function" == typeof t ? t(...e) : !!t
            }

            function tZ(t, e) {
                let r = {};
                return Object.keys(t).forEach(n => {
                    Object.defineProperty(r, n, {
                        configurable: !1,
                        enumerable: !0,
                        get: () => (e.trackedProps.add(n), t[n])
                    })
                }), r
            }

            function tY(t, e) {
                let r = tb({
                        context: t.context
                    }),
                    n = tv(),
                    i = tS(),
                    o = r.defaultQueryOptions({ ...t,
                        queryKeyHashFn: tV
                    });
                o._optimisticResults = n ? "isRestoring" : "optimistic", o.onError && (o.onError = I.batchCalls(o.onError)), o.onSuccess && (o.onSuccess = I.batchCalls(o.onSuccess)), o.onSettled && (o.onSettled = I.batchCalls(o.onSettled)), o.suspense && "number" != typeof o.staleTime && (o.staleTime = 1e3), (o.suspense || o.useErrorBoundary) && !i.isReset() && (o.retryOnMount = !1);
                let [s] = td.useState(() => new e(r, o)), a = s.getOptimisticResult(o);
                if (tW(td.useCallback(t => n ? () => void 0 : s.subscribe(I.batchCalls(t)), [s, n]), () => s.getCurrentResult(), () => s.getCurrentResult()), td.useEffect(() => {
                        i.clearReset()
                    }, [i]), td.useEffect(() => {
                        s.setOptions(o, {
                            listeners: !1
                        })
                    }, [o, s]), o.suspense && a.isLoading && a.isFetching && !n) throw s.fetchOptimistic(o).then(t => {
                    var e, r;
                    let {
                        data: n
                    } = t;
                    null === (e = o.onSuccess) || void 0 === e || e.call(o, n), null === (r = o.onSettled) || void 0 === r || r.call(o, n, null)
                }).catch(t => {
                    var e, r;
                    i.clearReset(), null === (e = o.onError) || void 0 === e || e.call(o, t), null === (r = o.onSettled) || void 0 === r || r.call(o, void 0, t)
                });
                if (a.isError && !i.isReset() && !a.isFetching && tQ(o.useErrorBoundary, [a.error, s.getCurrentQuery()])) throw a.error;
                let u = "loading" === a.status && "idle" === a.fetchStatus ? "idle" : a.status,
                    c = "idle" === u,
                    l = "loading" === u && "fetching" === a.fetchStatus;
                return { ...a,
                    defaultedOptions: o,
                    isIdle: c,
                    isLoading: l,
                    observer: s,
                    status: u
                }
            }

            function tJ(t, e, r) {
                return tP({
                    context: tL,
                    ...f(t, e, r)
                })
            }

            function tX(t, e, r) {
                let n = tY({
                        context: tL,
                        ...tK(t, e, r)
                    }, tD),
                    i = {
                        data: n.data,
                        error: n.error,
                        fetchStatus: n.fetchStatus,
                        isError: n.isError,
                        isFetched: n.isFetched,
                        isFetchedAfterMount: n.isFetchedAfterMount,
                        isFetching: n.isFetching,
                        isIdle: n.isIdle,
                        isLoading: n.isLoading,
                        isRefetching: n.isRefetching,
                        isSuccess: n.isSuccess,
                        refetch: n.refetch,
                        status: n.status,
                        internal: {
                            dataUpdatedAt: n.dataUpdatedAt,
                            errorUpdatedAt: n.errorUpdatedAt,
                            failureCount: n.failureCount,
                            isFetchedAfterMount: n.isFetchedAfterMount,
                            isLoadingError: n.isLoadingError,
                            isPaused: n.isPaused,
                            isPlaceholderData: n.isPlaceholderData,
                            isPreviousData: n.isPreviousData,
                            isRefetchError: n.isRefetchError,
                            isStale: n.isStale,
                            remove: n.remove
                        }
                    };
                return n.defaultedOptions.notifyOnChangeProps ? i : tZ(i, n.observer)
            }
            var t0 = () => tb({
                context: tL
            });

            function t1() {
                let {
                    chainId: t
                } = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                return (0, tU.useSyncExternalStoreWithSelector)(e => (0, tf.pC)({
                    chainId: t
                }, e), () => (0, tf.uV)({
                    chainId: t
                }), () => (0, tf.uV)({
                    chainId: t
                }), t => t, (t, e) => t.uid === e.uid)
            }

            function t2(t) {
                let {
                    chainId: e
                } = t;
                return [{
                    entity: "walletClient",
                    chainId: e,
                    persist: !1
                }]
            }

            function t6(t) {
                let {
                    queryKey: [{
                        chainId: e
                    }]
                } = t;
                return (0, tf.xz)({
                    chainId: e
                })
            }

            function t3() {
                let {
                    chainId: t,
                    suspense: e,
                    onError: r,
                    onSettled: n,
                    onSuccess: i
                } = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, {
                    connector: o
                } = ei(), s = t8({
                    chainId: t
                }), a = tX(t2({
                    chainId: s
                }), t6, {
                    cacheTime: 0,
                    enabled: !!o,
                    staleTime: 1 / 0,
                    suspense: e,
                    onError: r,
                    onSettled: n,
                    onSuccess: i
                }), u = t0();
                return td.useEffect(() => (0, tf.Tb)({
                    chainId: s
                }, t => {
                    t ? u.invalidateQueries(t2({
                        chainId: s
                    })) : u.removeQueries(t2({
                        chainId: s
                    }))
                }), [u, s]), a
            }

            function t5() {
                let {
                    chainId: t
                } = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                return (0, tU.useSyncExternalStoreWithSelector)(e => (0, tf.fq)({
                    chainId: t
                }, e), () => (0, tf.jr)({
                    chainId: t
                }), () => (0, tf.jr)({
                    chainId: t
                }), t => t, (t, e) => (null == t ? void 0 : t.uid) === (null == e ? void 0 : e.uid))
            }

            function t8() {
                let {
                    chainId: t
                } = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                return t1({
                    chainId: t
                }).chain.id
            }

            function t4() {
                let [, t] = td.useReducer(t => t + 1, 0);
                return t
            }

            function t9(t) {
                let {
                    chainId: e,
                    scopeKey: r
                } = t;
                return [{
                    entity: "blockNumber",
                    chainId: e,
                    scopeKey: r
                }]
            }

            function t7(t) {
                let {
                    queryKey: [{
                        chainId: e
                    }]
                } = t;
                return (0, tf.RQ)({
                    chainId: e
                })
            }

            function et() {
                let {
                    cacheTime: t = 0,
                    chainId: e,
                    enabled: r = !0,
                    scopeKey: n,
                    staleTime: i,
                    suspense: o,
                    watch: s = !1,
                    onBlock: a,
                    onError: u,
                    onSettled: c,
                    onSuccess: l
                } = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, h = t8({
                    chainId: e
                }), f = t1({
                    chainId: h
                }), d = t5({
                    chainId: h
                }), p = t0();
                return td.useEffect(() => {
                    if (r && (s || a)) return (null != d ? d : f).watchBlockNumber({
                        onBlockNumber: t => {
                            s && p.setQueryData(t9({
                                chainId: h,
                                scopeKey: n
                            }), t), a && a(t)
                        },
                        emitOnBegin: !0
                    })
                }, [h, n, a, f, p, s, d, r]), tX(t9({
                    scopeKey: n,
                    chainId: h
                }), t7, {
                    cacheTime: t,
                    enabled: r,
                    staleTime: i,
                    suspense: o,
                    onError: u,
                    onSettled: c,
                    onSuccess: l
                })
            }

            function ee(t) {
                let {
                    chainId: e,
                    enabled: r,
                    queryKey: n
                } = t, i = t0(), o = td.useCallback(() => i.invalidateQueries({
                    queryKey: n
                }, {
                    cancelRefetch: !1
                }), [i, n]);
                et({
                    chainId: e,
                    enabled: r,
                    onBlock: r ? o : void 0,
                    scopeKey: r ? void 0 : "idle"
                })
            }
            var er = t => "object" == typeof t && !Array.isArray(t);

            function en(t, e) {
                let r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : e,
                    n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : tf.vZ,
                    i = td.useRef([]),
                    o = (0, tU.useSyncExternalStoreWithSelector)(t, e, r, t => t, (t, e) => {
                        if (er(t) && er(e) && i.current.length) {
                            for (let r of i.current)
                                if (!n(t[r], e[r])) return !1;
                            return !0
                        }
                        return n(t, e)
                    });
                if (er(o)) {
                    let t = { ...o
                    };
                    return Object.defineProperties(t, Object.entries(t).reduce((t, e) => {
                        let [r, n] = e;
                        return { ...t,
                            [r]: {
                                configurable: !1,
                                enumerable: !0,
                                get: () => (i.current.includes(r) || i.current.push(r), n)
                            }
                        }
                    }, {})), t
                }
                return o
            }

            function ei() {
                let {
                    onConnect: t,
                    onDisconnect: e
                } = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, r = t$(), n = en(td.useCallback(t => (0, tf.uH)(t), [r]), tf.D0), i = td.useRef(), o = i.current;
                return td.useEffect(() => {
                    (null == o ? void 0 : o.status) !== "connected" && "connected" === n.status && (null == t || t({
                        address: n.address,
                        connector: n.connector,
                        isReconnected: (null == o ? void 0 : o.status) === "reconnecting" || (null == o ? void 0 : o.status) === void 0
                    })), (null == o ? void 0 : o.status) === "connected" && "disconnected" === n.status && (null == e || e()), i.current = n
                }, [t, e, o, n]), n
            }

            function eo(t) {
                let {
                    address: e,
                    chainId: r,
                    formatUnits: n,
                    scopeKey: i,
                    token: o
                } = t;
                return [{
                    entity: "balance",
                    address: e,
                    chainId: r,
                    formatUnits: n,
                    scopeKey: i,
                    token: o
                }]
            }

            function es(t) {
                let {
                    queryKey: [{
                        address: e,
                        chainId: r,
                        formatUnits: n,
                        token: i
                    }]
                } = t;
                if (!e) throw Error("address is required");
                return (0, tf.EG)({
                    address: e,
                    chainId: r,
                    formatUnits: n,
                    token: i
                })
            }

            function ea() {
                let {
                    address: t,
                    cacheTime: e,
                    chainId: r,
                    enabled: n = !0,
                    formatUnits: i,
                    scopeKey: o,
                    staleTime: s,
                    suspense: a,
                    token: u,
                    watch: c,
                    onError: l,
                    onSettled: h,
                    onSuccess: f
                } = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, d = t8({
                    chainId: r
                }), p = td.useMemo(() => eo({
                    address: t,
                    chainId: d,
                    formatUnits: i,
                    scopeKey: o,
                    token: u
                }), [t, d, i, o, u]), y = tX(p, es, {
                    cacheTime: e,
                    enabled: !!(n && t),
                    staleTime: s,
                    suspense: a,
                    onError: l,
                    onSettled: h,
                    onSuccess: f
                });
                return ee({
                    chainId: d,
                    enabled: !!(n && c && t),
                    queryKey: p
                }), y
            }
            var eu = t => [{
                    entity: "connect",
                    ...t
                }],
                ec = t => {
                    let {
                        connector: e,
                        chainId: r
                    } = t;
                    if (!e) throw Error("connector is required");
                    return (0, tf.$j)({
                        connector: e,
                        chainId: r
                    })
                };

            function el() {
                let {
                    chainId: t,
                    connector: e,
                    onError: r,
                    onMutate: n,
                    onSettled: i,
                    onSuccess: o
                } = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, s = t$(), {
                    data: a,
                    error: u,
                    isError: c,
                    isIdle: l,
                    isLoading: h,
                    isSuccess: f,
                    mutate: d,
                    mutateAsync: p,
                    reset: y,
                    status: m,
                    variables: b
                } = tJ(eu({
                    connector: e,
                    chainId: t
                }), ec, {
                    onError: r,
                    onMutate: n,
                    onSettled: i,
                    onSuccess: o
                });
                return {
                    connect: td.useCallback(r => {
                        var n, i;
                        return d({
                            chainId: null !== (n = null == r ? void 0 : r.chainId) && void 0 !== n ? n : t,
                            connector: null !== (i = null == r ? void 0 : r.connector) && void 0 !== i ? i : e
                        })
                    }, [t, e, d]),
                    connectAsync: td.useCallback(r => {
                        var n, i;
                        return p({
                            chainId: null !== (n = null == r ? void 0 : r.chainId) && void 0 !== n ? n : t,
                            connector: null !== (i = null == r ? void 0 : r.connector) && void 0 !== i ? i : e
                        })
                    }, [t, e, p]),
                    connectors: s.connectors,
                    data: a,
                    error: u,
                    isError: c,
                    isIdle: l,
                    isLoading: h,
                    isSuccess: f,
                    pendingConnector: null == b ? void 0 : b.connector,
                    reset: y,
                    status: m,
                    variables: b
                }
            }
            var eh = [{
                    entity: "disconnect"
                }],
                ef = () => (0, tf.zP)();

            function ed() {
                let {
                    onError: t,
                    onMutate: e,
                    onSettled: r,
                    onSuccess: n
                } = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, {
                    error: i,
                    isError: o,
                    isIdle: s,
                    isLoading: a,
                    isSuccess: u,
                    mutate: c,
                    mutateAsync: l,
                    reset: h,
                    status: f
                } = tJ(eh, ef, { ...t ? {
                        onError(e, r, n) {
                            t(e, n)
                        }
                    } : {},
                    onMutate: e,
                    ...r ? {
                        onSettled(t, e, n, i) {
                            r(e, i)
                        }
                    } : {},
                    ...n ? {
                        onSuccess(t, e, r) {
                            n(r)
                        }
                    } : {}
                });
                return {
                    disconnect: c,
                    disconnectAsync: l,
                    error: i,
                    isError: o,
                    isIdle: s,
                    isLoading: a,
                    isSuccess: u,
                    reset: h,
                    status: f
                }
            }

            function ep() {
                let t = t$();
                return en((0, td.useCallback)(t => (0, tf.QC)(t), [t]), tf.Hy)
            }
            var ey = t => [{
                    entity: "signMessage",
                    ...t
                }],
                em = t => {
                    let {
                        message: e
                    } = t;
                    if (!e) throw Error("message is required");
                    return (0, tf.l)({
                        message: e
                    })
                };

            function eb() {
                let {
                    message: t,
                    onError: e,
                    onMutate: r,
                    onSettled: n,
                    onSuccess: i
                } = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, {
                    data: o,
                    error: s,
                    isError: a,
                    isIdle: u,
                    isLoading: c,
                    isSuccess: l,
                    mutate: h,
                    mutateAsync: f,
                    reset: d,
                    status: p,
                    variables: y
                } = tJ(ey({
                    message: t
                }), em, {
                    onError: e,
                    onMutate: r,
                    onSettled: n,
                    onSuccess: i
                });
                return {
                    data: o,
                    error: s,
                    isError: a,
                    isIdle: u,
                    isLoading: c,
                    isSuccess: l,
                    reset: d,
                    signMessage: td.useCallback(e => h(e || {
                        message: t
                    }), [t, h]),
                    signMessageAsync: td.useCallback(e => f(e || {
                        message: t
                    }), [t, f]),
                    status: p,
                    variables: y
                }
            }
            var eg = t => [{
                    entity: "switchNetwork",
                    ...t
                }],
                ew = t => {
                    let {
                        chainId: e
                    } = t;
                    if (!e) throw Error("chainId is required");
                    return (0, tf.If)({
                        chainId: e
                    })
                };

            function ev() {
                var t, e;
                let r, n, {
                        chainId: i,
                        throwForSwitchChainNotSupported: o,
                        onError: s,
                        onMutate: a,
                        onSettled: u,
                        onSuccess: c
                    } = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    l = t$(),
                    h = t4(),
                    {
                        data: f,
                        error: d,
                        isError: p,
                        isIdle: y,
                        isLoading: m,
                        isSuccess: b,
                        mutate: g,
                        mutateAsync: w,
                        reset: v,
                        status: E,
                        variables: x
                    } = tJ(eg({
                        chainId: i
                    }), ew, {
                        onError: s,
                        onMutate: a,
                        onSettled: u,
                        onSuccess: c
                    }),
                    S = td.useCallback(t => g({
                        chainId: null != t ? t : i
                    }), [i, g]),
                    O = td.useCallback(t => w({
                        chainId: null != t ? t : i
                    }), [i, w]);
                td.useEffect(() => l.subscribe(t => {
                    let {
                        chains: e,
                        connector: r
                    } = t;
                    return {
                        chains: e,
                        connector: r
                    }
                }, h), [l, h]);
                let C = !!(null === (t = l.connector) || void 0 === t ? void 0 : t.switchChain);
                return (o || C) && (r = S, n = O), {
                    chains: null !== (e = l.chains) && void 0 !== e ? e : [],
                    data: f,
                    error: d,
                    isError: p,
                    isIdle: y,
                    isLoading: m,
                    isSuccess: b,
                    pendingChainId: null == x ? void 0 : x.chainId,
                    reset: v,
                    status: E,
                    switchNetwork: r,
                    switchNetworkAsync: n,
                    variables: x
                }
            }

            function eE(t) {
                let {
                    account: e,
                    address: r,
                    args: n,
                    blockNumber: i,
                    blockTag: o,
                    chainId: s,
                    functionName: a,
                    scopeKey: u
                } = t;
                return [{
                    entity: "readContract",
                    account: e,
                    address: r,
                    args: n,
                    blockNumber: i,
                    blockTag: o,
                    chainId: s,
                    functionName: a,
                    scopeKey: u
                }]
            }

            function ex(t) {
                let {
                    abi: e
                } = t;
                return async t => {
                    var r;
                    let {
                        queryKey: [{
                            account: n,
                            address: i,
                            args: o,
                            blockNumber: s,
                            blockTag: a,
                            chainId: u,
                            functionName: c
                        }]
                    } = t;
                    if (!e) throw Error("abi is required");
                    if (!i) throw Error("address is required");
                    return null !== (r = await (0, tf.a4)({
                        account: n,
                        address: i,
                        args: o,
                        blockNumber: s,
                        blockTag: a,
                        chainId: u,
                        abi: e,
                        functionName: c
                    })) && void 0 !== r ? r : null
                }
            }

            function eS() {
                let {
                    abi: t,
                    address: e,
                    account: r,
                    args: n,
                    blockNumber: i,
                    blockTag: o,
                    cacheOnBlock: s = !1,
                    cacheTime: a,
                    chainId: u,
                    enabled: c = !0,
                    functionName: l,
                    isDataEqual: h,
                    keepPreviousData: f,
                    onError: d,
                    onSettled: p,
                    onSuccess: y,
                    scopeKey: m,
                    select: b,
                    staleTime: g,
                    structuralSharing: w = (t, e) => (0, tf.vZ)(t, e) ? t : v(t, e),
                    suspense: E,
                    watch: x
                } = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, S = t8({
                    chainId: u
                }), {
                    data: O
                } = et({
                    chainId: S,
                    enabled: x || s,
                    scopeKey: x || s ? void 0 : "idle",
                    watch: x
                }), C = null != i ? i : O, _ = td.useMemo(() => eE({
                    account: r,
                    address: e,
                    args: n,
                    blockNumber: s ? C : void 0,
                    blockTag: o,
                    chainId: S,
                    functionName: l,
                    scopeKey: m
                }), [r, e, n, C, o, s, S, l, m]), A = td.useMemo(() => {
                    let r = !!(c && t && e && l);
                    return s && (r = !!(r && C)), r
                }, [t, e, C, s, c, l]);
                return ee({
                    chainId: S,
                    enabled: !!(A && x && !s),
                    queryKey: _
                }), tX(_, ex({
                    abi: t
                }), {
                    cacheTime: a,
                    enabled: A,
                    isDataEqual: h,
                    keepPreviousData: f,
                    select: b,
                    staleTime: g,
                    structuralSharing: w,
                    suspense: E,
                    onError: d,
                    onSettled: p,
                    onSuccess: y
                })
            }

            function eO(t) {
                let {
                    allowFailure: e,
                    blockNumber: r,
                    blockTag: n,
                    chainId: i,
                    contracts: o,
                    scopeKey: s
                } = t;
                return [{
                    entity: "readContracts",
                    allowFailure: e,
                    blockNumber: r,
                    blockTag: n,
                    chainId: i,
                    scopeKey: s,
                    contracts: (null != o ? o : []).map(t => {
                        let {
                            address: e,
                            args: r,
                            chainId: n,
                            functionName: i
                        } = t;
                        return {
                            address: e,
                            args: r,
                            chainId: n,
                            functionName: i
                        }
                    })
                }]
            }

            function eC(t) {
                let {
                    abis: e
                } = t;
                return t => {
                    let {
                        queryKey: [{
                            allowFailure: r,
                            blockNumber: n,
                            blockTag: i,
                            contracts: o
                        }]
                    } = t, s = o.map((t, r) => ({ ...t,
                        abi: e[r]
                    }));
                    return (0, tf.JH)({
                        allowFailure: r,
                        contracts: s,
                        blockNumber: n,
                        blockTag: i
                    })
                }
            }

            function e_() {
                let {
                    allowFailure: t,
                    blockNumber: e,
                    blockTag: r,
                    cacheOnBlock: n = !1,
                    cacheTime: i,
                    contracts: o,
                    enabled: s = !0,
                    isDataEqual: a,
                    keepPreviousData: u,
                    onError: c,
                    onSettled: l,
                    onSuccess: h,
                    scopeKey: f,
                    select: d,
                    staleTime: p,
                    structuralSharing: y = (t, e) => (0, tf.vZ)(t, e) ? t : v(t, e),
                    suspense: m,
                    watch: b
                } = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, g = null == t || t, {
                    data: w
                } = et({
                    enabled: b || n,
                    watch: b
                }), E = t8(), x = null != e ? e : w, S = td.useMemo(() => eO({
                    allowFailure: g,
                    blockNumber: n ? x : void 0,
                    blockTag: r,
                    chainId: E,
                    contracts: o,
                    scopeKey: f
                }), [g, x, r, n, E, f, o]), O = td.useMemo(() => {
                    let t = !!(s && (null == o ? void 0 : o.every(t => t.abi && t.address && t.functionName)));
                    return n && (t = !!(t && x)), t
                }, [x, n, o, s]);
                return ee({
                    enabled: !!(O && b && !n),
                    queryKey: S
                }), tX(S, eC({
                    abis: (null != o ? o : []).map(t => {
                        let {
                            abi: e
                        } = t;
                        return e
                    })
                }), {
                    cacheTime: i,
                    enabled: O,
                    isDataEqual: a,
                    keepPreviousData: u,
                    staleTime: p,
                    select: d,
                    structuralSharing: y,
                    suspense: m,
                    onError: c,
                    onSettled: l,
                    onSuccess: h
                })
            }

            function eA(t) {
                let {
                    address: e,
                    abi: r,
                    functionName: n,
                    ...i
                } = t, {
                    args: o,
                    accessList: s,
                    account: a,
                    dataSuffix: u,
                    gas: c,
                    gasPrice: l,
                    maxFeePerGas: h,
                    maxPriorityFeePerGas: f,
                    nonce: d,
                    request: p,
                    value: y
                } = i;
                return [{
                    entity: "writeContract",
                    address: e,
                    args: o,
                    abi: r,
                    accessList: s,
                    account: a,
                    dataSuffix: u,
                    functionName: n,
                    gas: c,
                    gasPrice: l,
                    maxFeePerGas: h,
                    maxPriorityFeePerGas: f,
                    nonce: d,
                    request: p,
                    value: y
                }]
            }

            function eP(t) {
                if ("prepared" === t.mode) {
                    if (!t.request) throw Error("request is required");
                    return (0, tf.n9)({
                        mode: "prepared",
                        request: t.request
                    })
                }
                if (!t.address) throw Error("address is required");
                if (!t.abi) throw Error("abi is required");
                if (!t.functionName) throw Error("functionName is required");
                return (0, tf.n9)({
                    address: t.address,
                    args: t.args,
                    chainId: t.chainId,
                    abi: t.abi,
                    functionName: t.functionName,
                    accessList: t.accessList,
                    account: t.account,
                    dataSuffix: t.dataSuffix,
                    gas: t.gas,
                    gasPrice: t.gasPrice,
                    maxFeePerGas: t.maxFeePerGas,
                    maxPriorityFeePerGas: t.maxPriorityFeePerGas,
                    nonce: t.nonce,
                    value: t.value
                })
            }

            function ek(t) {
                let {
                    address: e,
                    abi: r,
                    args: n,
                    chainId: i,
                    functionName: o,
                    mode: s,
                    request: a,
                    dataSuffix: u
                } = t, {
                    accessList: c,
                    account: l,
                    gas: h,
                    gasPrice: f,
                    maxFeePerGas: d,
                    maxPriorityFeePerGas: p,
                    nonce: y,
                    value: m
                } = (0, tf.gY)(t), {
                    data: b,
                    error: g,
                    isError: w,
                    isIdle: v,
                    isLoading: E,
                    isSuccess: x,
                    mutate: S,
                    mutateAsync: O,
                    reset: C,
                    status: _,
                    variables: A
                } = tJ(eA({
                    address: e,
                    abi: r,
                    functionName: o,
                    chainId: i,
                    mode: s,
                    args: n,
                    accessList: c,
                    account: l,
                    dataSuffix: u,
                    gas: h,
                    gasPrice: f,
                    maxFeePerGas: d,
                    maxPriorityFeePerGas: p,
                    nonce: y,
                    request: a,
                    value: m
                }), eP, {
                    onError: t.onError,
                    onMutate: t.onMutate,
                    onSettled: t.onSettled,
                    onSuccess: t.onSuccess
                });
                return {
                    data: b,
                    error: g,
                    isError: w,
                    isIdle: v,
                    isLoading: E,
                    isSuccess: x,
                    reset: C,
                    status: _,
                    variables: A,
                    write: td.useMemo(() => {
                        if ("prepared" === t.mode) {
                            if (!a) return;
                            return () => S({
                                mode: "prepared",
                                request: t.request,
                                chainId: t.chainId
                            })
                        }
                        return t => S({
                            address: e,
                            args: n,
                            abi: r,
                            functionName: o,
                            chainId: i,
                            accessList: c,
                            account: l,
                            dataSuffix: u,
                            gas: h,
                            gasPrice: f,
                            maxFeePerGas: d,
                            maxPriorityFeePerGas: p,
                            nonce: y,
                            value: m,
                            ...t
                        })
                    }, [c, l, r, e, n, i, t.chainId, t.mode, t.request, u, o, h, f, d, p, S, y, a, m]),
                    writeAsync: td.useMemo(() => {
                        if ("prepared" === t.mode) {
                            if (!a) return;
                            return () => O({
                                mode: "prepared",
                                request: t.request
                            })
                        }
                        return t => O({
                            address: e,
                            args: n,
                            abi: r,
                            chainId: i,
                            functionName: o,
                            accessList: c,
                            account: l,
                            dataSuffix: u,
                            gas: h,
                            gasPrice: f,
                            maxFeePerGas: d,
                            maxPriorityFeePerGas: p,
                            nonce: y,
                            value: m,
                            ...t
                        })
                    }, [c, l, r, e, n, i, t.mode, t.request, u, o, h, f, d, p, O, y, a, m])
                }
            }

            function eD(t) {
                let {
                    name: e,
                    chainId: r,
                    scopeKey: n
                } = t;
                return [{
                    entity: "ensAvatar",
                    name: e,
                    chainId: r,
                    scopeKey: n
                }]
            }

            function eI(t) {
                let {
                    queryKey: [{
                        name: e,
                        chainId: r
                    }]
                } = t;
                if (!e) throw Error("name is required");
                return (0, tf.w6)({
                    name: e,
                    chainId: r
                })
            }

            function eM() {
                let {
                    cacheTime: t,
                    chainId: e,
                    enabled: r = !0,
                    name: n,
                    scopeKey: i,
                    staleTime: o = 864e5,
                    suspense: s,
                    onError: a,
                    onSettled: u,
                    onSuccess: c
                } = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, l = t8({
                    chainId: e
                });
                return tX(eD({
                    name: n,
                    chainId: l,
                    scopeKey: i
                }), eI, {
                    cacheTime: t,
                    enabled: !!(r && n && l),
                    staleTime: o,
                    suspense: s,
                    onError: a,
                    onSettled: u,
                    onSuccess: c
                })
            }

            function eB(t) {
                let {
                    address: e,
                    chainId: r,
                    scopeKey: n
                } = t;
                return [{
                    entity: "ensName",
                    address: e,
                    chainId: r,
                    scopeKey: n
                }]
            }

            function eR(t) {
                let {
                    queryKey: [{
                        address: e,
                        chainId: r
                    }]
                } = t;
                if (!e) throw Error("address is required");
                return (0, tf.Lk)({
                    address: e,
                    chainId: r
                })
            }

            function eT() {
                let {
                    address: t,
                    cacheTime: e,
                    chainId: r,
                    enabled: n = !0,
                    scopeKey: i,
                    staleTime: o = 864e5,
                    suspense: s,
                    onError: a,
                    onSettled: u,
                    onSuccess: c
                } = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, l = t8({
                    chainId: r
                });
                return tX(eB({
                    address: t,
                    chainId: l,
                    scopeKey: i
                }), eR, {
                    cacheTime: e,
                    enabled: !!(n && t && l),
                    staleTime: o,
                    suspense: s,
                    onError: a,
                    onSettled: u,
                    onSuccess: c
                })
            }

            function ej(t) {
                let {
                    confirmations: e,
                    chainId: r,
                    hash: n,
                    scopeKey: i,
                    timeout: o
                } = t;
                return [{
                    entity: "waitForTransaction",
                    confirmations: e,
                    chainId: r,
                    hash: n,
                    scopeKey: i,
                    timeout: o
                }]
            }

            function eU(t) {
                let {
                    onReplaced: e
                } = t;
                return t => {
                    let {
                        queryKey: [{
                            chainId: r,
                            confirmations: n,
                            hash: i,
                            timeout: o
                        }]
                    } = t;
                    if (!i) throw Error("hash is required");
                    return (0, tf.Mn)({
                        chainId: r,
                        confirmations: n,
                        hash: i,
                        onReplaced: e,
                        timeout: o
                    })
                }
            }

            function eN() {
                let {
                    chainId: t,
                    confirmations: e,
                    hash: r,
                    timeout: n,
                    cacheTime: i,
                    enabled: o = !0,
                    scopeKey: s,
                    staleTime: a,
                    suspense: u,
                    onError: c,
                    onReplaced: l,
                    onSettled: h,
                    onSuccess: f
                } = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                return tX(ej({
                    chainId: t8({
                        chainId: t
                    }),
                    confirmations: e,
                    hash: r,
                    scopeKey: s,
                    timeout: n
                }), eU({
                    onReplaced: l
                }), {
                    cacheTime: i,
                    enabled: !!(o && r),
                    staleTime: a,
                    suspense: u,
                    onError: c,
                    onSettled: h,
                    onSuccess: f
                })
            }
        }
    }
]);